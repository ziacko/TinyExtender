#ifndef TINYEXTENDER_H_
#define TINYEXTENDER_H_

#define GETFUNCTION(function) function

#define GLVERSION1_2 1L << 1
#define GLVERSION1_3 1L << 2
#define GLVERSION1_4 1L << 3
#define GLVERSION1_5 1L << 4
#define GLVERSION2_0 1L << 5
#define GLVERSION2_1 1L << 6
#define GLVERSION3_0 1L << 7
#define GLVERSION3_1 1L << 8
#define GLVERSION3_2 1L << 9
#define GLVERSION3_3 1L << 10
#define GLVERSION4_0 1L << 11
#define GLVERSION4_1 1L << 12
#define GLVERSION4_2 1L << 13
#define GLVERSION4_3 1L << 14
#define GLVERSION4_4 1L << 15

#if defined(_WIN32)
#include <Windows.h>
#include <gl/GL.h>

//this automatically loads the OpenGL library if you are using Visual studio 
#pragma comment (lib, "opengl32.lib")
#endif

#if defined(__linux__)
#include <GL/glx.h>
#endif

#include "dependencies/glext.h"
#include <string.h>
#include <stdio.h>

//OpenGL 1.2 Extensions
extern PFNGLDRAWRANGEELEMENTSPROC __teDrawRangeElements;
extern PFNGLTEXIMAGE3DPROC __teTexImage3D;
extern PFNGLTEXSUBIMAGE3DPROC __teTexSubImage3D;
extern PFNGLCOPYTEXSUBIMAGE3DPROC __teCopyTexSubImage3D;
#define glDrawRangeElements GETFUNCTION(__teDrawRangeElements)
#define glTexImage3D GETFUNCTION(__teTexImage3D)
#define glTexSubImage3D GETFUNCTION(__teTexSubImage3D)
#define glCopyTexSubImage3D GETFUNCTION(__teCopyTexSubImage3D)

//OpenGL 1.3 Extensions
extern PFNGLACTIVETEXTUREPROC __teActiveTexture;
extern PFNGLSAMPLECOVERAGEPROC __teSampleCoverage;
extern PFNGLCOMPRESSEDTEXIMAGE3DPROC __teCompressedTexImage3D;
extern PFNGLCOMPRESSEDTEXIMAGE2DPROC __teCompressedTexImage2D;
extern PFNGLCOMPRESSEDTEXIMAGE1DPROC __teCompressedTexImage1D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __teCompressedTexSubImage3D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __teCompressedTexSubImage2D;
extern PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __teCompressedTexSubImage1D;
extern PFNGLGETCOMPRESSEDTEXIMAGEPROC __teGetCompressedTexImage;
#if defined(__WIN32)
extern PFNGLCLIENTACTIVETEXTUREPROC __teClientActiveTexture;
extern PFNGLMULTITEXCOORD1DPROC __teMultiTexCoord1d;
extern PFNGLMULTITEXCOORD1DVPROC __teMultiTexCoord1dv;
extern PFNGLMULTITEXCOORD1FPROC __teMultiTexCoord1f;
extern PFNGLMULTITEXCOORD1FVPROC __teMultiTexCoord1fv;
extern PFNGLMULTITEXCOORD1IPROC __teMultiTexCoord1i;
extern PFNGLMULTITEXCOORD1IVPROC __teMultiTexCoord1iv;
extern PFNGLMULTITEXCOORD1SPROC __teMultiTexCoord1s;
extern PFNGLMULTITEXCOORD1SVPROC __teMultiTexCoord1sv;
extern PFNGLMULTITEXCOORD2DPROC __teMultiTexCoord2d;
extern PFNGLMULTITEXCOORD2DVPROC __teMultiTexCoord2dv;
extern PFNGLMULTITEXCOORD2FPROC __teMultiTexCoord2f;
extern PFNGLMULTITEXCOORD2FVPROC __teMultiTexCoord2fv;
extern PFNGLMULTITEXCOORD2IPROC __teMultiTexCoord2i;
extern PFNGLMULTITEXCOORD2IVPROC __teMultiTexCoord2iv;
extern PFNGLMULTITEXCOORD2SPROC __teMultiTexCoord2s;
extern PFNGLMULTITEXCOORD2SVPROC __teMultiTexCoord2sv;
extern PFNGLMULTITEXCOORD3DPROC __teMultiTexCoord3d;
extern PFNGLMULTITEXCOORD3DVPROC __teMultiTexCoord3dv;
extern PFNGLMULTITEXCOORD3FPROC __teMultiTexCoord3f;
extern PFNGLMULTITEXCOORD3FVPROC __teMultiTexCoord3fv;
extern PFNGLMULTITEXCOORD3IPROC __teMultiTexCoord3i;
extern PFNGLMULTITEXCOORD3IVPROC __teMultiTexCoord3iv;
extern PFNGLMULTITEXCOORD3SPROC __teMultiTexCoord3s;
extern PFNGLMULTITEXCOORD3SVPROC __teMultiTexCoord3sv;
extern PFNGLMULTITEXCOORD4DPROC __teMultiTexCoord4d;
extern PFNGLMULTITEXCOORD4DVPROC __teMultiTexCoord4dv;
extern PFNGLMULTITEXCOORD4FPROC __teMultiTexCoord4f;
extern PFNGLMULTITEXCOORD4FVPROC __teMultiTexCoord4fv;
extern PFNGLMULTITEXCOORD4IPROC __teMultiTexCoord4i;
extern PFNGLMULTITEXCOORD4IVPROC __teMultiTexCoord4iv;
extern PFNGLMULTITEXCOORD4SPROC __teMultiTexCoord4s;
extern PFNGLMULTITEXCOORD4SVPROC __teMultiTexCoord4sv;
extern PFNGLLOADTRANSPOSEMATRIXFPROC __teLoadTransposeMatrixf;
extern PFNGLLOADTRANSPOSEMATRIXDPROC __teLoadTransposeMatrixd;
extern PFNGLMULTTRANSPOSEMATRIXFPROC __teMultTransposeMatrixf;
extern PFNGLMULTTRANSPOSEMATRIXDPROC __teMultTransposeMatrixd;
#endif
#define glActiveTexture GETFUNCTION(__teActiveTexture)
#define glSampleCoverage GETFUNCTION(__teSampleCoverage)
#define glCompressedTexImage3D GETFUNCTION(__teCompressedTexImage3D)
#define glCompressedTexImage2D GETFUNCTION(__teCompressedTexImage2D)
#define glCompressedTexImage1D GETFUNCTION(__teCompressedTexImage1D)
#define glCompressedTexSubImage3D GETFUNCTION(__teCompressedTexSubImage3D)
#define glCompressedTexSubImage2D GETFUNCTION(__teCompressedTexSubImage2D)
#define glCompressedTexSubImage1D GETFUNCTION(__teCompressedTexSubImage1D)
#define glGetCompressedTexImage GETFUNCTION(__teGetCompressedTexImage)
#if defined(__WIN32)
#define glClientActiveTexture GETFUNCTION(__teClientActiveTexture)
#define glMultiTexCoord1d GETFUNCTION(__teMultiTexCoord1d)
#define glMultiTexCoord1dv GETFUNCTION(__teMultiTexCoord1dv)
#define glMultiTexCoord1f GETFUNCTION(__teMultiTexCoord1f)
#define glMultiTexCoord1fv GETFUNCTION(__teMultiTexCoord1fv)
#define glMultiTexCoord1i GETFUNCTION(__teMultiTexCoord1i)
#define glMultiTexCoord1iv GETFUNCTION(__teMultiTexCoord1iv)
#define glMultiTexCoord1s GETFUNCTION(__teMultiTexCoord1s)
#define glMultiTexCoord2sv GETFUNCTION(__teMultiTexCoord2sv)
#define glMultiTexCoord2d GETFUNCTION(__teMultiTexCoord2d)
#define glMultiTexCoord2dv GETFUNCTION(__teMultiTexCoord2dv)
#define glMultiTexCoord2f GETFUNCTION(__teMultiTexCoord2f)
#define glMultiTexCoord2fv GETFUNCTION(__teMultiTexCoord2fv)
#define glMultiTexCoord2i GETFUNCTION(__teMultiTexCoord2i)
#define glMultiTexCoord2iv GETFUNCTION(__teMultiTexCoord2iv)
#define glMultiTexCoord2s GETFUNCTION(__teMultiTexCoord2s)
#define glMultiTexCoord2sv GETFUNCTION(__teMultiTexCoord2sv)
#define glMultiTexCoord3d GETFUNCTION(__teMultiTexCoord3d)
#define glMultiTexCoord3dv GETFUNCTION(__teMultiTexCoord3dv)
#define glMultiTexCoord3f GETFUNCTION(__teMultiTexCoord3f)
#define glMultiTexCoord3fv GETFUNCTION(__teMultiTexCoord3fv)
#define glMultiTexCoord3i GETFUNCTION(__teMultiTexCoord3i)
#define glMultiTexCoord3iv GETFUNCTION(__teMultiTexCoord3iv)
#define glMultiTexCoord3s GETFUNCTION(__teMultiTexCoord3s)
#define glMultiTexCoord3sv GETFUNCTION(__teMultiTexCoord3sv)
#define glMultiTexCoord4d GETFUNCTION(__teMultiTexCoord4d)
#define glMultiTexCoord4dv GETFUNCTION(__teMultiTexCoord4dv)
#define glMultiTexCoord4f GETFUNCTION(__teMultiTexCoord4f)
#define glMultiTexCoord4fv GETFUNCTION(__teMultiTexCoord4fv)
#define glMultiTexCoord4i GETFUNCTION(__teMultiTexCoord4i)
#define glMultiTexCoord4iv GETFUNCTION(__teMultiTexCoord4iv)
#define glMultiTexCoord4s GETFUNCTION(__teMultiTexCoord4s)
#define glMultiTexCoord4sv GETFUNCTION(__teMultiTexCoord4sv)
#endif
//OpenGL 1.4 Extensions
extern PFNGLBLENDFUNCSEPARATEPROC __teBlendFuncSeparate;
extern PFNGLMULTIDRAWARRAYSPROC __teMultiDrawArrays;
extern PFNGLMULTIDRAWELEMENTSPROC __teMultiDrawElements;
extern PFNGLPOINTPARAMETERFPROC __tePointParameterf;
extern PFNGLPOINTPARAMETERFVPROC __tePointParameterfv;
extern PFNGLPOINTPARAMETERIPROC __tePointParameteri;
extern PFNGLPOINTPARAMETERIVPROC __tePointParameteriv;
extern PFNGLFOGCOORDFPROC __teFogCoordf;
extern PFNGLFOGCOORDFVPROC __teFogCoordfv;
extern PFNGLFOGCOORDDPROC __teFogCoordd;
extern PFNGLFOGCOORDDVPROC __teFogCoorddv;
extern PFNGLFOGCOORDPOINTERPROC __teFogCoordPointer;
extern PFNGLSECONDARYCOLOR3BPROC __teSecondaryColor3b;
extern PFNGLSECONDARYCOLOR3BVPROC __teSecondaryColor3bv;
extern PFNGLSECONDARYCOLOR3DPROC __teSecondaryColor3d;
extern PFNGLSECONDARYCOLOR3DVPROC __teSecondaryColor3dv;
extern PFNGLSECONDARYCOLOR3FPROC __teSecondaryColor3f;
extern PFNGLSECONDARYCOLOR3FVPROC __teSecondaryColor3fv;
extern PFNGLSECONDARYCOLOR3IPROC __teSecondaryColor3i;
extern PFNGLSECONDARYCOLOR3IVPROC __teSecondaryColor3iv;
extern PFNGLSECONDARYCOLOR3SPROC __teSecondaryColor3s;
extern PFNGLSECONDARYCOLOR3SVPROC __teSecondaryColor3sv;
extern PFNGLSECONDARYCOLOR3UBPROC __teSecondaryColor3ub;
extern PFNGLSECONDARYCOLOR3UBVPROC __teSecondaryColor3ubv;
extern PFNGLSECONDARYCOLOR3UIPROC __teSecondaryColor3ui;
extern PFNGLSECONDARYCOLOR3UIVPROC __teSecondaryColor3uiv;
extern PFNGLSECONDARYCOLOR3USPROC __teSecondaryColor3us;
extern PFNGLSECONDARYCOLOR3USVPROC __teSecondaryColor3usv;
extern PFNGLSECONDARYCOLORPOINTERPROC __teSecondaryColorPointer;
extern PFNGLWINDOWPOS2DPROC __teWindowPos2d;
extern PFNGLWINDOWPOS2DVPROC __teWindowPos2dv;
extern PFNGLWINDOWPOS2FPROC __teWindowPos2f;
extern PFNGLWINDOWPOS2FVPROC __teWindowPos2fv;
extern PFNGLWINDOWPOS2IPROC __teWindowPos2i;
extern PFNGLWINDOWPOS2IVPROC __teWindowPos2iv;
extern PFNGLWINDOWPOS2SPROC __teWindowPos2s;
extern PFNGLWINDOWPOS2SVPROC __teWindowPos2sv;
extern PFNGLWINDOWPOS3DPROC __teWindowPos3d;
extern PFNGLWINDOWPOS3DVPROC __teWindowPos3dv;
extern PFNGLWINDOWPOS3FPROC __teWindowPos3f;
extern PFNGLWINDOWPOS3FVPROC __teWindowPos3fv;
extern PFNGLWINDOWPOS3IPROC __teWindowPos3i;
extern PFNGLWINDOWPOS3IVPROC __teWindowPos3iv;
extern PFNGLWINDOWPOS3SPROC __teWindowPos3s;
extern PFNGLWINDOWPOS3SVPROC __teWindowPos3sv;
extern PFNGLBLENDCOLORPROC __teBlendColor;
extern PFNGLBLENDEQUATIONPROC __teBlendEquation;
#define glBlendFuncSeparate GETFUNCTION(__teBlendFuncSeparate)
#define glMultiDrawArrays GETFUNCTION(__teMultiDrawArrays)
#define glMultiDrawElements GETFUNCTION(__teMultiDrawElements)
#define glPointParameterf GETFUNCTION(__tePointParameterf)
#define glPointParameterfv GETFUNCTION(__tePointParameterfv)
#define glPointParameteri GETFUNCTION(__tePointParameteri)
#define glPointParameteriv GETFUNCTION(__tePointParameteriv)
#define glFogCoordf GETFUNCTION(__teFogCoordf)
#define glFogCoordfv GETFUNCTION(__teFogCoordfv)
#define glFogCoordd GETFUNCTION(__teFogCoordd)
#define glFogCoorddv GETFUNCTION(__teFogCoorddv)
#define glFogCoordPointer GETFUNCTION(__teFogCoordPointer)
#define glSecondaryColor3b GETFUNCTION(__teSecondaryColor3b)
#define glSecondaryColor3bv GETFUNCTION(__teSecondaryColor3bv)
#define glSecondaryColor3d GETFUNCTION(__teSecondaryColor3d)
#define glSecondaryColor3dv GETFUNCTION(__teSecondaryColor3dv)
#define glSecondaryColor3f GETFUNCTION(__teSecondaryColor3f)
#define glSecondaryColor3fv GETFUNCTION(__teSecondaryColor3fv)
#define glSecondaryColor3i GETFUNCTION(__teSecondaryColor3i)
#define glSecondaryColor3iv GETFUNCTION(__teSecondaryColor3iv)
#define glSecondaryColor3s GETFUNCTION(__teSecondaryColor3s)
#define glSecondaryColor3sv GETFUNCTION(__teSecondaryColor3sv)
#define glSecondaryColor3ub GETFUNCTION(__teSecondaryColor3ub)
#define glSecondaryColor3ubv GETFUNCTION(__teSecondaryColor3ubv)
#define glSecondaryColor3ui GETFUNCTION(__teSecondaryColor3ui)
#define glSecondaryColor3uiv GETFUNCTION(__teSecondaryColor3uiv)
#define glSecondaryColor3us GETFUNCTION(__teSecondaryColor3us)
#define glSecondaryColor3usv GETFUNCTION(__teSecondaryColor3usv)
#define glSecondaryColorPointer GETFUNCTION(__teSecondaryColorPointer)
#define glWindowPos2d GETFUNCTION(__teWindowPos2d)
#define glWindowPos2dv GETFUNCTION(__teWindowPos2dv)
#define glWindowPos2f GETFUNCTION(__teWindowPos2f)
#define glWindowPos2fv GETFUNCTION(__teWindowPos2fv)
#define glWindowPos2i GETFUNCTION(__teWindowPos2i)
#define glWindowPos2iv GETFUNCTION(__teWindowPos2iv)
#define glWindowPos2s GETFUNCTION(__teWindowPos2s)
#define glWindowPos2sv GETFUNCTION(__teWindowPos2sv)
#define glWindowPos3d GETFUNCTION(__teWindowPos3d)
#define glWindowPos3dv GETFUNCTION(__teWindowPos3dv)
#define glWindowPos3f GETFUNCTION(__teWindowPos3f)
#define glWindowPos3fv GETFUNCTION(__teWindowPos3fv)
#define glWindowPos3i GETFUNCTION(__teWindowPos3i)
#define glWindowPos3iv GETFUNCTION(__teWindowPos3iv)
#define glWindowPos3s GETFUNCTION(__teWindowPos3s)
#define glWindowPos3sv GETFUNCTION(__teWindowPos3sv)
#define glBlendColor GETFUNCTION(__teBlendColor)
#define glBlendEquation GETFUNCTION(__teBlendEquation)

//OpenGL 1.5 Extensions
extern PFNGLGENQUERIESPROC __teGenQueries;
extern PFNGLDELETEQUERIESPROC __teDeleteQueries;
extern PFNGLISQUERYPROC __teIsQuery;
extern PFNGLBEGINQUERYPROC __teBeginQuery;
extern PFNGLENDQUERYPROC __teEndQuery;
extern PFNGLGETQUERYIVPROC __teGetQueryiv;
extern PFNGLGETQUERYOBJECTIVPROC __teGetQueryObjectiv;
extern PFNGLGETQUERYOBJECTUIVPROC __teGetQueryObjectuiv;
extern PFNGLBINDBUFFERPROC __teBindBuffer;
extern PFNGLDELETEBUFFERSPROC __teDeleteBuffers;
extern PFNGLGENBUFFERSPROC __teGenBuffers;
extern PFNGLISBUFFERPROC __teIsBuffer;
extern PFNGLBUFFERDATAPROC __teBufferData;
extern PFNGLBUFFERSUBDATAPROC __teBufferSubData;
extern PFNGLGETBUFFERSUBDATAPROC __teGetBufferSubData;
extern PFNGLMAPBUFFERPROC __teMapBuffer;
extern PFNGLUNMAPBUFFERPROC __teUnmapBuffer;
extern PFNGLGETBUFFERPARAMETERIVPROC __teGetBufferParameteriv;
extern PFNGLGETBUFFERPOINTERVPROC __teGetBufferPointerv;
#define glGenQueries GETFUNCTION(__teGenQueries)
#define glDeleteQueries GETFUNCTION(__teDeleteQueries)
#define glIsQuery GETFUNCTION(__teIsQuery)
#define glBeginQuery GETFUNCTION(__teBeginQuery)
#define glEndQuery GETFUNCTION(__teEndQuery)
#define glGetQueryiv GETFUNCTION(__teGetQueryiv)
#define glGetQueryObjectiv GETFUNCTION(__teGetQueryObjectiv)
#define glGetQueryObjectuiv GETFUNCTION(__teGetQueryObjectuiv)
#define glBindBuffer GETFUNCTION(__teBindBuffer)
#define glDeleteBuffers GETFUNCTION(__teDeleteBuffers)
#define glGenBuffers GETFUNCTION(__teGenBuffers)
#define glIsBuffer GETFUNCTION(__teIsBuffer)
#define glBufferData GETFUNCTION(__teBufferData)
#define glBufferSubData GETFUNCTION(__teBufferSubData)
#define glGetBufferSubData GETFUNCTION(__teGetBufferSubData)
#define glMapBuffer GETFUNCTION(__teMapBuffer)
#define glUnmapBuffer GETFUNCTION(__teUnmapBuffer)
#define glGetBufferParameteriv GETFUNCTION(__teGetBufferParameteriv)
#define glGetBufferPointerv GETFUNCTION(__teGetBufferPointerv)

//OpenGL 2.0 Extensions
extern PFNGLBLENDEQUATIONSEPARATEPROC __teBlendEquationSeparate;
extern PFNGLDRAWBUFFERSPROC __teDrawBuffers;
extern PFNGLSTENCILOPSEPARATEPROC __teStencilOpSeparate;
extern PFNGLSTENCILFUNCSEPARATEPROC __teStencilFuncSeparate;
extern PFNGLSTENCILMASKSEPARATEPROC __teStencilMaskSeparate;
extern PFNGLATTACHSHADERPROC __teAttachShader;
extern PFNGLBINDATTRIBLOCATIONPROC __teBindAttribLocation;
extern PFNGLCOMPILESHADERPROC __teCompileShader;
extern PFNGLCREATEPROGRAMPROC __teCreateProgram;
extern PFNGLCREATESHADERPROC __teCreateShader;
extern PFNGLDELETEPROGRAMPROC __teDeleteProgram;
extern PFNGLDELETESHADERPROC __teDeleteShader;
extern PFNGLDETACHSHADERPROC __teDetachShader;
extern PFNGLDISABLEVERTEXATTRIBARRAYPROC __teDisableVertexAttribArray;
extern PFNGLENABLEVERTEXATTRIBARRAYPROC __teEnableVertexAttribArray;
extern PFNGLGETACTIVEATTRIBPROC __teGetActiveAttrib;
extern PFNGLGETACTIVEUNIFORMPROC __teGetActiveUniform;
extern PFNGLGETATTACHEDSHADERSPROC __teGetAttachedShaders;
extern PFNGLGETATTRIBLOCATIONPROC __teGetAttribLocation;
extern PFNGLGETPROGRAMIVPROC __teGetProgramiv;
extern PFNGLGETPROGRAMINFOLOGPROC __teGetProgramInfoLog;
extern PFNGLGETSHADERIVPROC __teGetShaderiv;
extern PFNGLGETSHADERINFOLOGPROC __teGetShaderInfoLog;
extern PFNGLGETSHADERSOURCEPROC __teGetShaderSource;
extern PFNGLGETUNIFORMLOCATIONPROC __teGetUniformLocation;
extern PFNGLGETUNIFORMFVPROC __teGetUniformfv;
extern PFNGLGETUNIFORMIVPROC __teGetUniformiv;
extern PFNGLGETVERTEXATTRIBDVPROC __teGetVertexAttribdv;
extern PFNGLGETVERTEXATTRIBFVPROC __teGetVertexAttribfv;
extern PFNGLGETVERTEXATTRIBIVPROC __teGetVertexAttribiv;
extern PFNGLGETVERTEXATTRIBPOINTERVPROC __teGetVertexAttribPointerv;
extern PFNGLISPROGRAMPROC __teIsProgram;
extern PFNGLISSHADERPROC __teIsShader;
extern PFNGLLINKPROGRAMPROC __teLinkProgram;
extern PFNGLSHADERSOURCEPROC __teShaderSource;
extern PFNGLUSEPROGRAMPROC __teUseProgram;
extern PFNGLUNIFORM1FPROC __teUniform1f;
extern PFNGLUNIFORM2FPROC __teUniform2f;
extern PFNGLUNIFORM3FPROC __teUniform3f;
extern PFNGLUNIFORM4FPROC __teUniform4f;
extern PFNGLUNIFORM1IPROC __teUniform1i;
extern PFNGLUNIFORM2IPROC __teUniform2i;
extern PFNGLUNIFORM3IPROC __teUniform3i;
extern PFNGLUNIFORM4IPROC __teUniform4i;
extern PFNGLUNIFORM1FVPROC __teUniform1fv;
extern PFNGLUNIFORM2FVPROC __teUniform2fv;
extern PFNGLUNIFORM3FVPROC __teUniform3fv;
extern PFNGLUNIFORM4FVPROC __teUniform4fv;
extern PFNGLUNIFORM1IVPROC __teUniform1iv;
extern PFNGLUNIFORM2IVPROC __teUniform2iv;
extern PFNGLUNIFORM3IVPROC __teUniform3iv;
extern PFNGLUNIFORM4IVPROC __teUniform4iv;
extern PFNGLUNIFORMMATRIX2FVPROC __teUniformMatrix2fv;
extern PFNGLUNIFORMMATRIX3FVPROC __teUniformMatrix3fv;
extern PFNGLUNIFORMMATRIX4FVPROC __teUniformMatrix4fv;
extern PFNGLVALIDATEPROGRAMPROC __teValidateProgram;
extern PFNGLVERTEXATTRIB1DPROC __teVertexAttrib1d;
extern PFNGLVERTEXATTRIB1DVPROC __teVertexAttrib1dv;
extern PFNGLVERTEXATTRIB1FPROC __teVertexAttrib1f;
extern PFNGLVERTEXATTRIB1FVPROC __teVertexAttrib1fv;
extern PFNGLVERTEXATTRIB1SPROC __teVertexAttrib1s;
extern PFNGLVERTEXATTRIB1SVPROC __teVertexAttrib1sv;
extern PFNGLVERTEXATTRIB2DPROC __teVertexAttrib2d;
extern PFNGLVERTEXATTRIB2DVPROC __teVertexAttrib2dv;
extern PFNGLVERTEXATTRIB2FPROC __teVertexAttrib2f;
extern PFNGLVERTEXATTRIB2FVPROC __teVertexAttrib2fv;
extern PFNGLVERTEXATTRIB2SPROC __teVertexAttrib2s;
extern PFNGLVERTEXATTRIB2SVPROC __teVertexAttrib2sv;
extern PFNGLVERTEXATTRIB3DPROC __teVertexAttrib3d;
extern PFNGLVERTEXATTRIB3DVPROC __teVertexAttrib3dv;
extern PFNGLVERTEXATTRIB3FPROC __teVertexAttrib3f;
extern PFNGLVERTEXATTRIB3FVPROC __teVertexAttrib3fv;
extern PFNGLVERTEXATTRIB3SPROC __teVertexAttrib3s;
extern PFNGLVERTEXATTRIB3SVPROC __teVertexAttrib3sv;
extern PFNGLVERTEXATTRIB4NBVPROC __teVertexAttrib4Nbv;
extern PFNGLVERTEXATTRIB4NIVPROC __teVertexAttrib4Niv;
extern PFNGLVERTEXATTRIB4NSVPROC __teVertexAttrib4Nsv;
extern PFNGLVERTEXATTRIB4NUBPROC __teVertexAttrib4Nub;
extern PFNGLVERTEXATTRIB4NUBVPROC __teVertexAttrib4Nubv;
extern PFNGLVERTEXATTRIB4NUIVPROC __teVertexAttrib4Nuiv;
extern PFNGLVERTEXATTRIB4NUSVPROC __teVertexAttrib4Nusv;
extern PFNGLVERTEXATTRIB4BVPROC __teVertexAttrib4bv;
extern PFNGLVERTEXATTRIB4DPROC __teVertexAttrib4d;
extern PFNGLVERTEXATTRIB4DVPROC __teVertexAttrib4dv;
extern PFNGLVERTEXATTRIB4FPROC __teVertexAttrib4f;
extern PFNGLVERTEXATTRIB4FVPROC __teVertexAttrib4fv;
extern PFNGLVERTEXATTRIB4IVPROC __teVertexAttrib4iv;
extern PFNGLVERTEXATTRIB4SPROC __teVertexAttrib4s;
extern PFNGLVERTEXATTRIB4SVPROC __teVertexAttrib4sv;
extern PFNGLVERTEXATTRIB4UBVPROC __teVertexAttrib4ubv;
extern PFNGLVERTEXATTRIB4UIVPROC __teVertexAttrib4uiv;
extern PFNGLVERTEXATTRIB4USVPROC __teVertexAttrib4usv;
extern PFNGLVERTEXATTRIBPOINTERPROC __teVertexAttribPointer;

#define glBlendEquationSeparate GETFUNCTION(__teBlendEquationSeparate)
#define glDrawBuffers GETFUNCTION(__teDrawBuffers)
#define glStencilOpSeparate GETFUNCTION(__teStencilOpSeparate)
#define glStencilFuncSeparate GETFUNCTION(__teStencilFuncSeparate)
#define glStencilMaskSeparate GETFUNCTION(__teStencilMaskSeparate)
#define glAttachShader GETFUNCTION(__teAttachShader)
#define glBindAttribLocation GETFUNCTION(__teBindAttribLocation)
#define glCompileShader GETFUNCTION(__teCompileShader)
#define glCreateProgram GETFUNCTION(__teCreateProgram)
#define glDeleteProgram GETFUNCTION(__teDeleteProgram)
#define glDetachShader GETFUNCTION(__teDetachShader)
#define glDisableVertexAttribArray GETFUNCTION(__teDisableVertexAttribArray)
#define glEnableVertexAttribArray GETFUNCTION(__teEnableVertexAttribArray)
#define glGetActiveAttrib GETFUNCTION(__teGetActiveAttrib)
#define glGetActiveUniform GETFUNCTION(__teGetActiveUniform)
#define glGetAttachedShaders GETFUNCTION(__teGetAttachedShaders)
#define glGetAttribLocation GETFUNCTION(__teGetAttribLocation)
#define glGetProgramiv GETFUNCTION(__teGetProgramiv)
#define glGetProgramInfoLog GETFUNCTION(__teGetProgramInfoLog)
#define glGetShaderSource GETFUNCTION(__teGetShaderSource)
#define glGetUniformLocation GETFUNCTION(__teGetUniformLocation)
#define glGetUniformfv GETFUNCTION(__teGetUniformfv)
#define glGetUniformiv GETFUNCTION(__teGetUniformiv)
#define glGetVertexAttribdv GETFUNCTION(__teGetVertexAttribdv)
#define glGetVertexAttribfv GETFUNCTION(__teGetVertexAttribfv)
#define glGetVertexAttribiv GETFUNCTION(__teGetVertexAttribiv)
#define glGetVertexAttribPointerv GETFUNCTION(__teGetVertexAttribPointerv)
#define glIsProgram GETFUNCTION(__teIsProgram)
#define glIsShader GETFUNCTION(__teIsShader)
#define glLinkProgram GETFUNCTION(__teLinkProgram)
#define glShaderSource GETFUNCTION(__teShaderSource)
#define glUseProgram GETFUNCTION(__teUseProgram)
#define glUniform1f GETFUNCTION(__teUniform1f)
#define glUniform2f GETFUNCTION(__teUniform2f)
#define glUniform3f GETFUNCTION(__teUniform3f)
#define glUniform4f GETFUNCTION(__teUniform4f)
#define glUniform1i GETFUNCTION(__teUniform1i)
#define glUniform2i GETFUNCTION(__teUniform2i)
#define glUniform3i GETFUNCTION(__teUniform3i)
#define glUniform4i GETFUNCTION(__teUniform4i)
#define glUniform1fv GETFUNCTION(__teUniform1fv)
#define glUniform2fv GETFUNCTION(__teUniform2fv)
#define glUniform3fv GETFUNCTION(__teUniform3fv)
#define glUniform4fv GETFUNCTION(__teUniform4fv)
#define glUniform1iv GETFUNCTION(__teUniform1iv)
#define glUniform2iv GETFUNCTION(__teUniform2iv)
#define glUniform3iv GETFUNCTION(__teUniform3iv)
#define glUniform4iv GETFUNCTION(__teUniform4iv)
#define glUniformMatrix2fv GETFUNCTION(__teUniformMatrix2fv)
#define glUniformMatrix3fv GETFUNCTION(__teUniformMatrix3fv)
#define glUniformMatrix4fv GETFUNCTION(__teUniformMatrix4fv)
#define glValidateProgram GETFUNCTION(__teValidateProgram)
#define glVertexAttrib1d GETFUNCTION(__teVertexAttrib1d)
#define glVertexAttrib1dv GETFUNCTION(__teVertexAttrib1dv)
#define glVertexAttrib1f GETFUNCTION(__teVertexAttrib1f)
#define glVertexAttrib1fv GETFUNCTION(__teVertexAttrib1fv)
#define glVertexAttrib1s GETFUNCTION(__teVertexAttrib1s)
#define glVertexAttrib1sv GETFUNCTION(__teVertexAttrib1sv)
#define glVertexAttrib2d GETFUNCTION(__teVertexAttrib2d)
#define glVertexAttrib2dv GETFUNCTION(__teVertexAttrib2dv)
#define glVertexAttrib2f GETFUNCTION(__teVertexAttrib2f)
#define glVertexAttrib2fv GETFUNCTION(__teVertexAttrib2fv)
#define glVertexAttrib2s GETFUNCTION(__teVertexAttrib2s)
#define glVertexAttrib2sv GETFUNCTION(__teVertexAttrib2sv)
#define glVertexAttrib3d GETFUNCTION(__teVertexAttrib3d)
#define glVertexAttrib3dv GETFUNCTION(__teVertexAttrib3dv)
#define glVertexAttrib3f GETFUNCTION(__teVertexAttrib3f)
#define glVertexAttrib3fv GETFUNCTION(__teVertexAttrib3fv)
#define glVertexAttrib3s GETFUNCTION(__teVertexAttrib3s)
#define glVertexAttrib3sv GETFUNCTION(__teVertexAttrib3sv)
#define glVertexAttrib4Nbv GETFUNCTION(__teVertexAttrib4Nbv)
#define glVertexAttrib4Niv GETFUNCTION(__teVertexAttrib4Niv)
#define glVertexAttrib4Nsv GETFUNCTION(__teVertexAttrib4Nsv)
#define glVertexAttrib4Nub GETFUNCTION(__teVertexAttrib4Nub)
#define glVertexAttrib4Nubv GETFUNCTION(__teVertexAttrib4Nubv)
#define glVertexAttrib4Nuiv GETFUNCTION(__teVertexAttrib4Nuiv)
#define glVertexAttrib4Nusv GETFUNCTION(__teVertexAttrib4Nusv)
#define glVertexAttrib4bv GETFUNCTION(__teVertexAttrib4bv)
#define glVertexAttrib4d GETFUNCTION(__teVertexAttrib4d)
#define glVertexAttrib4dv GETFUNCTION(__teVertexAttrib4dv)
#define glVertexAttrib4f GETFUNCTION(__teVertexAttrib4f)
#define glVertexAttrib4fv GETFUNCTION(__teVertexAttrib4fv)
#define glVertexAttrib4iv GETFUNCTION(__teVertexAttrib4iv)
#define glVertexAttrib4s GETFUNCTION(__teVertexAttrib4s)
#define glVertexAttrib4sv GETFUNCTION(__teVertexAttrib4sv)
#define glVertexAttrib4ubv GETFUNCTION(__teVertexAttrib4ubv)
#define glVertexAttrib4uiv GETFUNCTION(__teVertexAttrib4uiv)
#define glVertexAttrib4usv GETFUNCTION(__teVertexAttrib4usv)
#define glVertexAttribPointer GETFUNCTION(__teVertexAttribPointer)

//OpenGL 2.1 Extensions
extern PFNGLUNIFORMMATRIX2X3FVPROC __teUniformMatrix2x3fv;
extern PFNGLUNIFORMMATRIX3X2FVPROC __teUniformMatrix3x2fv;
extern PFNGLUNIFORMMATRIX2X4FVPROC __teUniformMatrix2x4fv;
extern PFNGLUNIFORMMATRIX4X2FVPROC __teUniformMatrix4x2fv;
extern PFNGLUNIFORMMATRIX3X4FVPROC __teUniformMatrix3x4fv;
extern PFNGLUNIFORMMATRIX4X3FVPROC __teUniformMatrix4x3fv;
#define glUniformMatrix2x3fv GETFUNCTION(__teUniformMatrix2x3fv)
#define glUniformMatrix3x2fv GETFUNCTION(__teUniformMatrix3x2fv)
#define glUniformMatrix2x4fv GETFUNCTION(__teUniformMatrix2x4fv)
#define glUniformMatrix4x2fv GETFUNCTION(__teUniformMatrix4x2fv)
#define glUniformMatrix3x4fv GETFUNCTION(__teUniformMatrix3x4fv)
#define glUniformMatrix4x3fv GETFUNCTION(__teUniformMatrix4x3fv)

//OpenGL 3.0 Extensions
extern PFNGLCOLORMASKIPROC __teColorMaski;
extern PFNGLGETBOOLEANI_VPROC __teGetBooleani_v;
extern PFNGLGETINTEGERI_VPROC __teGetIntegeri_v;
extern PFNGLENABLEIPROC __teEnablei;
extern PFNGLDISABLEIPROC __teDisablei;
extern PFNGLISENABLEDIPROC __teIsEnabledi;
extern PFNGLBEGINTRANSFORMFEEDBACKPROC __teBeginTransformFeedback;
extern PFNGLENDTRANSFORMFEEDBACKPROC __teEndTransformFeedback;
extern PFNGLBINDBUFFERRANGEPROC __teBindBufferRange;
extern PFNGLBINDBUFFERBASEPROC __teBindBufferBase;
extern PFNGLTRANSFORMFEEDBACKVARYINGSPROC __teTransformFeedbackVaryings;
extern PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __teGetTransformFeedbackVarying;
extern PFNGLCLAMPCOLORPROC __teClampColor;
extern PFNGLBEGINCONDITIONALRENDERPROC __teBeginConditionalRender;
extern PFNGLENDCONDITIONALRENDERPROC __teEndConditionalRender;
extern PFNGLVERTEXATTRIBIPOINTERPROC __teVertexAttribIPointer;
extern PFNGLGETVERTEXATTRIBIIVPROC __teGetVertexAttribIiv;
extern PFNGLGETVERTEXATTRIBIUIVPROC __teGetVertexAttribIuiv;
extern PFNGLVERTEXATTRIBI1IPROC __teVertexAttribI1i;
extern PFNGLVERTEXATTRIBI2IPROC __teVertexAttribI2i;
extern PFNGLVERTEXATTRIBI3IPROC __teVertexAttribI3i;
extern PFNGLVERTEXATTRIBI4IPROC __teVertexAttribI4i;
extern PFNGLVERTEXATTRIBI1UIPROC __teVertexAttribI1ui;
extern PFNGLVERTEXATTRIBI2UIPROC __teVertexAttribI2ui;
extern PFNGLVERTEXATTRIBI3UIPROC __teVertexAttribI3ui;
extern PFNGLVERTEXATTRIBI4UIPROC __teVertexAttribI4ui;
extern PFNGLVERTEXATTRIBI1IVPROC __teVertexAttribI1iv;
extern PFNGLVERTEXATTRIBI2IVPROC __teVertexAttribI2iv;
extern PFNGLVERTEXATTRIBI3IVPROC __teVertexAttribI3iv;
extern PFNGLVERTEXATTRIBI4IVPROC __teVertexAttribI4iv;
extern PFNGLVERTEXATTRIBI1UIVPROC __teVertexAttribI1uiv;
extern PFNGLVERTEXATTRIBI2UIVPROC __teVertexAttribI2uiv;
extern PFNGLVERTEXATTRIBI3UIVPROC __teVertexAttribI3uiv;
extern PFNGLVERTEXATTRIBI4UIVPROC __teVertexAttribI4uiv;
extern PFNGLVERTEXATTRIBI4BVPROC __teVertexAttribI4bv;
extern PFNGLVERTEXATTRIBI4SVPROC __teVertexAttribI4sv;
extern PFNGLVERTEXATTRIBI4UBVPROC __teVertexAttribI4ubv;
extern PFNGLVERTEXATTRIBI4USVPROC __teVertexAttribI4usv;
extern PFNGLGETUNIFORMUIVPROC __teGetUniformuiv;
extern PFNGLBINDFRAGDATALOCATIONPROC __teBindFragDataLocation;
extern PFNGLGETFRAGDATALOCATIONPROC __teGetFragDataLocation;
extern PFNGLUNIFORM1UIPROC __teUniform1ui;
extern PFNGLUNIFORM2UIPROC __teUniform2ui;
extern PFNGLUNIFORM3UIPROC __teUniform3ui;
extern PFNGLUNIFORM4UIPROC __teUniform4ui;
extern PFNGLUNIFORM1UIVPROC __teUniform1uiv;
extern PFNGLUNIFORM2UIVPROC __teUniform2uiv;
extern PFNGLUNIFORM3UIVPROC __teUniform3uiv;
extern PFNGLUNIFORM4UIVPROC __teUniform4uiv;
extern PFNGLTEXPARAMETERIIVPROC __teTexParameterIiv;
extern PFNGLTEXPARAMETERIUIVPROC __teTexParameterIuiv;
extern PFNGLGETTEXPARAMETERIIVPROC __teGetTexParameterIiv;
extern PFNGLGETTEXPARAMETERIUIVPROC __teGetTexParameterIuiv;
extern PFNGLCLEARBUFFERIVPROC __teClearBufferiv;
extern PFNGLCLEARBUFFERUIVPROC __teClearBufferuiv;
extern PFNGLCLEARBUFFERFVPROC __teClearBufferfv;
extern PFNGLCLEARBUFFERFIPROC __teClearBufferfi;
extern PFNGLGETSTRINGIPROC __teGetStringi;
extern PFNGLISRENDERBUFFERPROC __teIsRenderbuffer;
extern PFNGLBINDRENDERBUFFERPROC __teBindRenderbuffer;
extern PFNGLDELETERENDERBUFFERSPROC __teDeleteRenderbuffers;
extern PFNGLGENRENDERBUFFERSPROC __teGenRenderbuffers;
extern PFNGLRENDERBUFFERSTORAGEPROC __teRenderbufferStorage;
extern PFNGLGETRENDERBUFFERPARAMETERIVPROC __teGetRenderbufferParameteriv;
extern PFNGLISFRAMEBUFFERPROC __teIsFramebuffer;
extern PFNGLBINDFRAMEBUFFERPROC __teBindFramebuffer;
extern PFNGLDELETEFRAMEBUFFERSPROC __teDeleteFramebuffers;
extern PFNGLGENFRAMEBUFFERSPROC __teGenFramebuffers;
extern PFNGLCHECKFRAMEBUFFERSTATUSPROC __teCheckFramebufferStatus;
extern PFNGLFRAMEBUFFERTEXTURE1DPROC __teFramebufferTexture1D;
extern PFNGLFRAMEBUFFERTEXTURE2DPROC __teFramebufferTexture2D;
extern PFNGLFRAMEBUFFERTEXTURE3DPROC __teFramebufferTexture3D;
extern PFNGLFRAMEBUFFERRENDERBUFFERPROC __teFramebufferRenderbuffer;
extern PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __teGetFramebufferAttachmentParameteriv;
extern PFNGLGENERATEMIPMAPPROC __teGenerateMipmap;
extern PFNGLBLITFRAMEBUFFERPROC __teBlitFramebuffer;
extern PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __teRenderbufferStorageMultisample;
extern PFNGLFRAMEBUFFERTEXTURELAYERPROC __teFramebufferTextureLayer;
extern PFNGLMAPBUFFERRANGEPROC __teMapBufferRange;
extern PFNGLFLUSHMAPPEDBUFFERRANGEPROC __teFlushMappedBufferRange;
extern PFNGLBINDVERTEXARRAYPROC __teBindVertexArray;
extern PFNGLDELETEVERTEXARRAYSPROC __teDeleteVertexArrays;
extern PFNGLGENVERTEXARRAYSPROC __teGenVertexArrays;
extern PFNGLISVERTEXARRAYPROC __teIsVertexArray;
#define glColorMaski GETFUNCTION(__teColorMaski)
#define glGetBooleani_v GETFUNCTION(__teGetBooleani_v)
#define glGetIntegeri_v GETFUNCTION(__teGetIntegeri_v)
#define glEnablei GETFUNCTION(__teEnablei)
#define glDisablei GETFUNCTION(__teDisablei)
#define glIsEnabledi GETFUNCTION(__teIsEnabledi)
#define glBeginTransformFeedback GETFUNCTION(__teBeginTransformFeedback)
#define glEndTransformFeedback GETFUNCTION(__teEndTransformFeedback)
#define glBindBufferRange GETFUNCTION(__teBindBufferRange)
#define glBindBufferBase GETFUNCTION(__teBindBufferBase)
#define glTransformFeedbackVaryings GETFUNCTION(__teTransformFeedbackVaryings)
#define glGetTransformFeedbackVarying GETFUNCTION(__teGetTransformFeedbackVarying)
#define glClampColor GETFUNCTION(__teClampColor)
#define glBeginConditionalRender GETFUNCTION(__teBeginConditionalRender)
#define glEndConditionalRender GETFUNCTION(__teEndConditionalRender)
#define glVertexAttribIPointer GETFUNCTION(__teVertexAttribIPointer)
#define glGetVertexAttribIiv GETFUNCTION(__teGetVertexAttribIiv)
#define glGetVertexAttribIuiv GETFUNCTION(__teGetVertexAttribIuiv)
#define glVertexAttribI1i GETFUNCTION(__teVertexAttribI1i)
#define glVertexAttribI2i GETFUNCTION(__teVertexAttribI2i)
#define glVertexAttribI3i GETFUNCTION(__teVertexAttribI3i)
#define glVertexAttribI4i GETFUNCTION(__teVertexAttribI4i)
#define glVertexAttribI1ui GETFUNCTION(__teVertexAttribI1ui)
#define glVertexAttribI2ui GETFUNCTION(__teVertexAttribI2ui)
#define glVertexAttribI3ui GETFUNCTION(__teVertexAttribI3ui)
#define glVertexAttribI4ui GETFUNCTION(__teVertexAttribI4ui)
#define glVertexAttribI1iv GETFUNCTION(__teVertexAttribI1iv)
#define glVertexAttribI2iv GETFUNCTION(__teVertexAttribI2iv)
#define glVertexAttribI3iv GETFUNCTION(__teVertexAttribI3iv)
#define glVertexAttribI4iv GETFUNCTION(__teVertexAttribI4iv)
#define glVertexAttribI1uiv GETFUNCTION(__teVertexAttribI1uiv)
#define glVertexAttribI2uiv GETFUNCTION(__teVertexAttribI2uiv)
#define glVertexAttribI3uiv GETFUNCTION(__teVertexAttribI3uiv)
#define glVertexAttribI4uiv GETFUNCTION(__teVertexAttribI4uiv)
#define glVertexAttribI4bv GETFUNCTION(__teVertexAttribI4bv)
#define glVertexAttribI4sv GETFUNCTION(__teVertexAttribI4sv)
#define glVertexAttribI4ubv GETFUNCTION(__teVertexAttribI4ubv)
#define glVertexAttribI4usv GETFUNCTION(__teVertexAttribI4usv)
#define glGetUniformuiv GETFUNCTION(__teGetUniformuiv)
#define glBindFragDataLocation GETFUNCTION(__teBindFragDataLocation)
#define glGetFragDataLocation GETFUNCTION(__teGetFragDataLocation)
#define glUniform1ui GETFUNCTION(__teUniform1ui)
#define glUniform2ui GETFUNCTION(__teUniform2ui)
#define glUniform3ui GETFUNCTION(__teUniform3ui)
#define glUniform4ui GETFUNCTION(__teUniform4ui)
#define glUniform1uiv GETFUNCTION(__teUniform1uiv)
#define glUniform2uiv GETFUNCTION(__teUniform2uiv)
#define glUniform3uiv GETFUNCTION(__teUniform3uiv)
#define glUniform4uiv GETFUNCTION(__teUniform4uiv)
#define glTexParameterIiv GETFUNCTION(__teTexParameterIiv)
#define glTexParameterIuiv GETFUNCTION(__teTexParameterIuiv)
#define glGetTexParameterIiv GETFUNCTION(__teGetTexParameterIiv)
#define glGetTexParameterIuiv GETFUNCTION(__teGetTexParameterIuiv)
#define glClearBufferiv GETFUNCTION(__teClearBufferiv)
#define glClearBufferuiv GETFUNCTION(__teClearBufferuiv)
#define glClearBufferfv GETFUNCTION(__teClearBufferfv)
#define glClearBufferfi GETFUNCTION(__teClearBufferfi)
#define glGetStringi GETFUNCTION(__teGetStringi)
#define glIsRenderbuffer GETFUNCTION(__teIsRenderbuffer)
#define glBindRenderbuffer GETFUNCTION(__teBindRenderbuffer)
#define glDeleteRenderbuffers GETFUNCTION(__teDeleteRenderbuffers)
#define glGenRenderbuffers GETFUNCTION(__teGenRenderbuffers)
#define glRenderbufferStorage GETFUNCTION(__teRenderbufferStorage)
#define glGetRenderbufferParameteriv GETFUNCTION(__teGetRenderbufferParameteriv)
#define glIsFramebuffer GETFUNCTION(__teIsFramebuffer)
#define glBindFramebuffer GETFUNCTION(__teBindFramebuffer)
#define glDeleteFramebuffers GETFUNCTION(__teDeleteFramebuffers)
#define glGenFramebuffers GETFUNCTION(__teGenFramebuffers)
#define glCheckFrameBufferStatus GETFUNCTION(__teCheckFramebufferStatus)
#define glFramebufferTexture1D GETFUNCTION(__teFramebufferTexture1D)
#define glFramebufferTexture2D GETFUNCTION(__teFramebufferTexture2D)
#define glFramebufferTexture3D GETFUNCTION(__teFramebufferTexture3D)
#define glFramebufferRenderbuffer GETFUNCTION(__teFramebufferRenderbuffer)
#define glGetFramebufferAttachmentParameteriv GETFUNCTION(__teGetFramebufferAttachmentParameteriv)
#define glGenerateMipmap GETFUNCTION(__teGenerateMipmap)
#define glBlitFramebuffer GETFUNCTION(__teBlitFramebuffer)
#define glRenderbufferStorageMultisample GETFUNCTION(__teRenderbufferStorageMultisample)
#define glFramebufferTextureLayer GETFUNCTION(__teFramebufferTextureLayer)
#define glMapBufferRange GETFUNCTION(__teMapBufferRange)
#define glFlushMappedBufferRange GETFUNCTION(__teFlushMappedBufferRange)
#define glBindVertexArray GETFUNCTION(__teBindVertexArray)
#define glDeleteVertexArrays GETFUNCTION(__teDeleteVertexArrays)
#define glGenVertexArrays GETFUNCTION(__teGenVertexArrays)
#define glIsVertexArray GETFUNCTION(__teIsVertexArray)

//OpenGL 3.1 Extensions
extern PFNGLDRAWARRAYSINSTANCEDPROC __teDrawArraysInstanced;
extern PFNGLDRAWELEMENTSINSTANCEDPROC __teDrawElementsInstanced;
extern PFNGLTEXBUFFERPROC __teTexBuffer;
extern PFNGLPRIMITIVERESTARTINDEXPROC __tePrimitiveRestartIndex;
extern PFNGLCOPYBUFFERSUBDATAPROC __teCopyBufferSubdata;
extern PFNGLGETUNIFORMINDICESPROC __teGetUniformIndices;
extern PFNGLGETACTIVEUNIFORMSIVPROC __teGetActiveUniformsiv;
extern PFNGLGETACTIVEUNIFORMNAMEPROC __teGetActiveUniformName;
extern PFNGLGETUNIFORMBLOCKINDEXPROC __teGetUniformBlockIndex;
extern PFNGLGETACTIVEUNIFORMBLOCKIVPROC __teGetActiveUniformBlockiv;
extern PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __teGetActiveUniformBlockName;
extern PFNGLUNIFORMBLOCKBINDINGPROC __teUniformBlockBinding;
#define glDrawArraysInstanced GETFUNCTION(__teDrawArraysInstanced)
#define glDrawElementsInstanced GETFUNCTION(__teDrawElementsInstanced)
#define glTexBuffer GETFUNCTION(__teTexBuffer)
#define glPrimtiveRestartIndex GETFUNCTION(__tePrimitiveRestartIndex)
#define glCopyBufferSubdata GETFUNCTION(__teCopyBufferSubdata)
#define glGetUniformIndices GETFUNCTION(__teGetUniformIndices)
#define glGetActiveUniformsiv GETFUNCTION(__teGetActiveUniformsiv)
#define glGetActiveUniformName GETFUNCTION(__teGetActiveUniformName)
#define glGetUniformBlockIndex GETFUNCTION(__teGetUniformBlockIndex)
#define glGetActiveUniformBlockiv GETFUNCTION(__teGetActiveUniformBlockiv)
#define glGetActiveUniformBlockName GETFUNCTION(__teGetActiveUniformBlockName)
#define glUniformBlockBinding GETFUNCTION(__teUniformBlockBinding)

//OpenGL 3.2 Extensions
extern PFNGLDRAWELEMENTSBASEVERTEXPROC __teDrawElementsBaseVertex;
extern PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __teDrawRangeElementsBaseVertex;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __teDrawElementsInstancedBaseVertex;
extern PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __teMultiDrawElementsBaseVertex;
extern PFNGLPROVOKINGVERTEXPROC __teProvokingVertex;
extern PFNGLFENCESYNCPROC __teFenceSync;
extern PFNGLISSYNCPROC __teIsSync;
extern PFNGLDELETESYNCPROC __teDeleteSync;
extern PFNGLCLIENTWAITSYNCPROC __teClientWaitSync;
extern PFNGLWAITSYNCPROC __teWaitSync;
extern PFNGLGETINTEGER64VPROC __teGetInteger64v;
extern PFNGLGETSYNCIVPROC __teGetSynciv;
extern PFNGLGETINTEGER64I_VPROC __teGetInteger64i_v;
extern PFNGLGETBUFFERPARAMETERI64VPROC __teGetBufferParameteri64v;
extern PFNGLFRAMEBUFFERTEXTUREPROC __teFramebufferTexture;
extern PFNGLTEXIMAGE2DMULTISAMPLEPROC __teTexImage2DMultisample;
extern PFNGLTEXIMAGE3DMULTISAMPLEPROC __teTexImage3DMultisample;
extern PFNGLGETMULTISAMPLEFVPROC __teGetMultisamplefv;
extern PFNGLSAMPLEMASKIPROC __teSampleMaski;
#define glDrawElementsBaseVertex GETFUNCTION(__teDrawElementsBaseVertex)
#define glDrawRangeElementsBaseVertex GETFUNCTION(__teDrawRangeElementsBaseVertex)
#define glDrawElementsInstancedBaseVertex GETFUNCTION(__teDrawElementsInstancedBaseVertex)
#define glMultiDrawElementsBaseVertex GETFUNCTION(__teMultiDrawElementsBaseVertex)
#define glProvokingVertex GETFUNCTION(__teProvokingVertex)
#define glFenceSync GETFUNCTION(__teFenceSync)
#define glIsSync GETFUNCTION(__teIsSync)
#define glDeleteSync GETFUNCTION(__teDeleteSync)
#define glClientWaitSync GETFUNCTION(__teClientWaitSync)
#define glWaitSync GETFUNCTION(__teWaitSync)
#define glGetInteger64v GETFUNCTION(__teGetInteger64v)
#define glGetSynciv GETFUNCTION(__teGetSynciv)
#define glGetInteger64i_v GETFUNCTION(__teGetInteger64i_v)
#define glGetBufferParameteri64v GETFUNCTION(__teGetBufferParameteri64v)
#define glFramebufferTexture GETFUNCTION(__teFramebufferTexture)
#define glTexImage2DMultiSample GETFUNCTION(__teTexImage2DMultisample)
#define glTexImage3DMultisample GETFUNCTION(__teTexImage3DMultisample)
#define glGetMultisamplefv GETFUNCTION(__teGetMultisamplefv)
#define glSampleMaski GETFUNCTION(__teSampleMaski)

//OpenGL 3.3 Extensions
extern PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __teBindFragDataLocationIndexed;
extern PFNGLGETFRAGDATAINDEXPROC __teGetFragDataIndex;
extern PFNGLGENSAMPLERSPROC __teGenSamplers;
extern PFNGLDELETESAMPLERSPROC __teDeleteSamplers;
extern PFNGLISSAMPLERPROC __teIsSampler;
extern PFNGLBINDSAMPLERPROC __teBindSampler;
extern PFNGLSAMPLERPARAMETERIPROC __teSamplerParameteri;
extern PFNGLSAMPLERPARAMETERIVPROC __teSamplerParameteriv;
extern PFNGLSAMPLERPARAMETERFPROC __teSamplerParameterf;
extern PFNGLSAMPLERPARAMETERFVPROC __teSamplerParameterfv;
extern PFNGLSAMPLERPARAMETERIIVPROC __teSamplerParameterIiv;
extern PFNGLSAMPLERPARAMETERIUIVPROC __teSamplerParameterIuiv;
extern PFNGLGETSAMPLERPARAMETERIVPROC __teGetSamplerParameteriv;
extern PFNGLGETSAMPLERPARAMETERIIVPROC __teGetSamplerParameterIiv;
extern PFNGLGETSAMPLERPARAMETERFVPROC __teGetSamplerParameterfv;
extern PFNGLGETSAMPLERPARAMETERIUIVPROC __teGetSamplerParameterIuiv;
extern PFNGLQUERYCOUNTERPROC __teQueryCounter;
extern PFNGLGETQUERYOBJECTI64VPROC __teGetQueryObjecti64v;
extern PFNGLGETQUERYOBJECTUI64VPROC __teGetQueryObjectui64v;
extern PFNGLVERTEXATTRIBDIVISORPROC __teVertexAttribDivisor;
extern PFNGLVERTEXATTRIBP1UIPROC __teVertexAttribP1ui;
extern PFNGLVERTEXATTRIBP1UIVPROC __teVertexAttribP1uiv;
extern PFNGLVERTEXATTRIBP2UIPROC __teVertexAttribP2ui;
extern PFNGLVERTEXATTRIBP2UIVPROC __teVertexAttribP2uiv;
extern PFNGLVERTEXATTRIBP3UIPROC __teVertexAttribP3ui;
extern PFNGLVERTEXATTRIBP3UIVPROC __teVertexAttribP3uiv;
extern PFNGLVERTEXATTRIBP4UIPROC __teVertexAttribP4ui;
extern PFNGLVERTEXATTRIBP4UIVPROC __teVertexAttribP4uiv;
extern PFNGLVERTEXP2UIPROC __teVertexP2ui;
extern PFNGLVERTEXP2UIVPROC __teVertexP2uiv;
extern PFNGLVERTEXP3UIPROC __teVertexP3ui;
extern PFNGLVERTEXP3UIVPROC __teVertexP3uiv;
extern PFNGLVERTEXP4UIPROC __teVertexP4ui;
extern PFNGLVERTEXP4UIVPROC __teVertexP4uiv;
extern PFNGLTEXCOORDP1UIPROC __teTexCoordP1ui;
extern PFNGLTEXCOORDP1UIVPROC __teTexCoordP1uiv;
extern PFNGLTEXCOORDP2UIPROC __teTexCoordP2ui;
extern PFNGLTEXCOORDP2UIVPROC __teTexCoordP2uiv;
extern PFNGLTEXCOORDP3UIPROC __teTexCoordP3ui;
extern PFNGLTEXCOORDP3UIVPROC __teTexCoordP3uiv;
extern PFNGLTEXCOORDP4UIPROC __teTexCoordP4ui;
extern PFNGLTEXCOORDP4UIVPROC __teTexCoordP4uiv;
extern PFNGLMULTITEXCOORDP1UIPROC __teMultiTexCoordP1ui;
extern PFNGLMULTITEXCOORDP1UIVPROC __teMultiTexCoordP1uiv;
extern PFNGLMULTITEXCOORDP2UIPROC __teMultiTexCoordP2ui;
extern PFNGLMULTITEXCOORDP2UIVPROC __teMultiTexCoordP2uiv;
extern PFNGLMULTITEXCOORDP3UIPROC __teMultiTexCoordP3ui;
extern PFNGLMULTITEXCOORDP3UIVPROC __teMultiTexCoordP3uiv;
extern PFNGLMULTITEXCOORDP4UIPROC __teMultiTexCoordP4ui;
extern PFNGLMULTITEXCOORDP4UIVPROC __teMultiTexCoordP4uiv;
extern PFNGLNORMALP3UIPROC __teNormalP3ui;
extern PFNGLNORMALP3UIVPROC __teNormalP3uiv;
extern PFNGLCOLORP3UIPROC __teColorP3ui;
extern PFNGLCOLORP3UIVPROC __teColorP3uiv;
extern PFNGLCOLORP4UIPROC __teColorP4ui;
extern PFNGLCOLORP4UIVPROC __teColorP4uiv;
extern PFNGLSECONDARYCOLORP3UIPROC __teSecondaryColorP3ui;
extern PFNGLSECONDARYCOLORP3UIVPROC __teSecondaryColorP3uiv;
#define glBindFragDataLocationIndexed GETFUNCTION(__teBindFragDataLocationIndexed)
#define glGetFragDataIndex GETFUNCTION(__teGetFragDataIndex)
#define glGenSamplers GETFUNCTION(__teGenSamplers)
#define glDeleteSamplers GETFUNCTION(__teDeleteSamplers)
#define glIsSampler GETFUNCTION(__teIsShader)
#define glBindSampler GETFUNCTION(__teBindSampler)
#define glSamplerParameteri GETFUNCTION(__teSamplerParameteri)
#define glSamplerParameteriv GETFUNCTION(__teSamplerParameteriv)
#define glSamplerParameterf GETFUNCTION(__teSamplerParameterf)
#define glSamplerParameterfv GETFUNCTION(__teSamplerParameterfv)
#define glSamplerParameterIiv GETFUNCTION(__teSamplerParameterIiv)
#define glSamplerParameterIuiv GETFUNCTION(__teSamplerParameterIuiv)
#define glGetSamplerParameteriv GETFUNCTION(__teGetSamplerParameteriv)
#define glGetSamplerParameterIiv GETFUNCTION(__teGetSamplerParameterIiv)
#define glGetSamplerParameterfv GETFUNCTION(__teGetSamplerParameterfv)
#define glGetSamplerParameterIuiv GETFUNCTION(__teGetSamplerParameterIuiv)
#define glQueryCounter GETFUNCTION(__teQueryCounter)
#define glGetQueryObjecti64v GETFUNCTION(__teGetQueryObjecti64v)
#define glGetQueryObjectui64v GETFUNCTION(__teGetQueryObjectui64v)
#define glVertexAttribDivisor GETFUNCTION(__teVertexAttribDivisor)
#define glVertexAttribP1ui GETFUNCTION(__teVertexAttribP1ui)
#define glVertexAttribP1uiv GETFUNCTION(__teVertexAttribP1uiv)
#define glVertexAttribP2ui GETFUNCTION(__teVertexAttribP2ui)
#define glVertexAttribP2uiv GETFUNCTION(__teVertexAttribP2uiv)
#define glVertexAttribP3ui GETFUNCTION(__teVertexAttribP3ui)
#define glVertexAttribP3uiv GETFUNCTION(__teVertexAttribP3uiv)
#define glVertexAttribP4ui GETFUNCTION(__teVertexAttribP4ui)
#define glVertexAttribP4uiv GETFUNCTION(__teVertexAttribP4uiv)
#define glVertexP2ui GETFUNCTION(__teVertexP2ui)
#define glVertexP2uiv GETFUNCTION(__teVertexP2uiv)
#define glVertexP3ui GETFUNCTION(__teVertexP3ui)
#define glVertexP3uiv GETFUNCTION(__teVertexP3uiv)
#define glVertexP4ui GETFUNCTION(__teVertexP4ui)
#define glVertexP4uiv GETFUNCTION(__teVertexP4uiv)
#define glTexCoordP1ui GETFUNCTION(__teTexCoordP1ui)
#define glTexCoordP1uiv GETFUNCTION(__teTexCoordP1uiv)
#define glTexCoordP2ui GETFUNCTION(__teTexCoordP2ui)
#define glTexCoordP2uiv GETFUNCTION(__teTexCoordP2uiv)
#define glTexCoordP3ui GETFUNCTION(__teTexCoordP3ui)
#define glTexCoordP3uiv GETFUNCTION(__teTexCoordP3uiv)
#define glTexCoordP4ui GETFUNCTION(__teTexCoordP4ui)
#define glTexCoordP4uiv GETFUNCTION(__teTexCoordP4uiv)
#define glMultiTexCoordP1ui GETFUNCTION(__teMultiTexCoordP1ui)
#define glMultiTexCoordP1uiv GETFUNCTION(__teMultiTexCoordP1uiv)
#define glMultiTexCoordP2ui GETFUNCTION(__teMultiTexCoordP2ui)
#define glMultiTexCoordP2uiv GETFUNCTION(__teMultiTexCoordP2uiv)
#define glMultiTexCoordP3ui GETFUNCTION(__teMultiTexCoordP3ui)
#define glMultiTexCoordP3uiv GETFUNCTION(__teMultiTexCoordP3uiv)
#define glMultiTexCoordP4ui GETFUNCTION(__teMultiTexCoordP4ui)
#define glMultiTexCoordP4uiv GETFUNCTION(__teMultiTexCoordP4uiv)
#define glNormalP3ui GETFUNCTION(__teNormalP3ui)
#define glNormalP3uiv GETFUNCTION(__teNormalP3uiv)
#define glColorP3ui GETFUNCTION(__teColorP3ui)
#define glColorP3uiv GETFUNCTION(__teColorP3uiv)
#define glColorP4ui GETFUNCTION(__teColorP4ui)
#define glColorP4uiv GETFUNCTION(__teColorP4uiv)
#define glSecondaryColorP3ui GETFUNCTION(__teSecondaryColorP3ui)
#define glSecondaryColorP3uiv GETFUNCTION(__teSecondaryColorP3uiv)

//OpenGL 4.0 Extensions
extern PFNGLMINSAMPLESHADINGPROC __teMinSampleShading;
extern PFNGLBLENDEQUATIONIPROC __teBlendEquationi;
extern PFNGLBLENDEQUATIONSEPARATEIPROC __teBlendEquationSeparatei;
extern PFNGLBLENDFUNCIPROC __teBlendFunci;
extern PFNGLBLENDFUNCSEPARATEIPROC __teBlendFuncSeparatei;
extern PFNGLDRAWARRAYSINDIRECTPROC __teDrawArraysIndirect;
extern PFNGLDRAWELEMENTSINDIRECTPROC __teDrawElementsIndirect;
extern PFNGLUNIFORM1DPROC __teUniform1d;
extern PFNGLUNIFORM2DPROC __teUniform2d;
extern PFNGLUNIFORM3DPROC __teUniform3d;
extern PFNGLUNIFORM4DPROC __teUniform4d;
extern PFNGLUNIFORM1DVPROC __teUniform1dv;
extern PFNGLUNIFORM2DVPROC __teUniform2dv;
extern PFNGLUNIFORM3DVPROC __teUniform3dv;
extern PFNGLUNIFORM4DVPROC __teUniform4dv;
extern PFNGLUNIFORMMATRIX2DVPROC __teUniformMatrix2dv;
extern PFNGLUNIFORMMATRIX3DVPROC __teUniformMatrix3dv;
extern PFNGLUNIFORMMATRIX4DVPROC __teUniformMatrix4dv;
extern PFNGLUNIFORMMATRIX2X3DVPROC __teUniformMatrix2x3dv;
extern PFNGLUNIFORMMATRIX2X4DVPROC __teUniformMatrix2x4dv;
extern PFNGLUNIFORMMATRIX3X2DVPROC __teUniformMatrix3x2dv;
extern PFNGLUNIFORMMATRIX3X4DVPROC __teUniformMatrix3x4dv;
extern PFNGLUNIFORMMATRIX4X2DVPROC __teUniformMatrix4x2dv;
extern PFNGLUNIFORMMATRIX4X3DVPROC __teUniformMatrix4x3dv;
extern PFNGLGETUNIFORMDVPROC __teGetUniformdv;
extern PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __teGetSubroutineUniformLocation;
extern PFNGLGETSUBROUTINEINDEXPROC __teGetSubroutineIndex;
extern PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __teGetActiveSubroutineUniformiv;
extern PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __teGetActiveSubroutineUniformName;
extern PFNGLGETACTIVESUBROUTINENAMEPROC __teGetActiveSubroutineName;
extern PFNGLUNIFORMSUBROUTINESUIVPROC __teUniformSubroutinesuiv;
extern PFNGLGETUNIFORMSUBROUTINEUIVPROC __teGetUniformSubroutineuiv;
extern PFNGLGETPROGRAMSTAGEIVPROC __teGetProgramStageiv;
extern PFNGLPATCHPARAMETERIPROC __tePatchParameteri;
extern PFNGLPATCHPARAMETERFVPROC __tePatchParameterfv;
extern PFNGLBINDTRANSFORMFEEDBACKPROC __teBindTransformFeedback;
extern PFNGLDELETETRANSFORMFEEDBACKSPROC __teDeleteTransformFeedbacks;
extern PFNGLGENTRANSFORMFEEDBACKSPROC __teGenTransformFeedbacks;
extern PFNGLISTRANSFORMFEEDBACKPROC __teIsTransformFeedback;
extern PFNGLPAUSETRANSFORMFEEDBACKPROC __tePauseTransformFeedback;
extern PFNGLRESUMETRANSFORMFEEDBACKPROC __teResumeTransformFeedback;
extern PFNGLDRAWTRANSFORMFEEDBACKPROC __teDrawTransformFeedback;
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __teDrawTransformFeedbackStream;
extern PFNGLBEGINQUERYINDEXEDPROC __teBeginQueryIndexed;
extern PFNGLENDQUERYINDEXEDPROC __teEndQueryIndexed;
extern PFNGLGETQUERYINDEXEDIVPROC __teGetQueryIndexediv;
#define glMinSampleShading GETFUNCTION(__teMinSampleShading)
#define glBlendEquationi GETFUNCTION(__teBlendEquationi)
#define glBlendEquationSeparatei GETFUNCTION(__teBlendEquationSeparatei)
#define glBlendFunci GETFUNCTION(__teBlendFunci)
#define glBlendFuncSeparatei GETFUNCTION(__teBlendFuncSeparatei)
#define glDrawArraysIndirect GETFUNCTION(__teDrawArraysIndirect)
#define glDrawElementsIndirect GETFUNCTION(__teDrawElementsIndirect)
#define glUniform1d GETFUNCTION(__teUniform1d)
#define glUniform2d GETFUNCTION(__teUniform2d)
#define glUniform3d GETFUNCTION(__teUniform3d)
#define glUniform4d GETFUNCTION(__teUniform4d)
#define glUniform1dv GETFUNCTION(__teUniform1dv)
#define glUniform2dv GETFUNCTION(__teUniform2dv)
#define glUniform3dv GETFUNCTION(__teUniform3dv)
#define glUniform4dv GETFUNCTION(__teUniform4dv)
#define glUniformMatrix2dv GETFUNCTION(__teUniformMatrix2dv)
#define glUniformMatrix3dv GETFUNCTION(__teUniformMatrix3dv)
#define glUniformMatrix4dv GETFUNCTION(__teUniformMatrix4dv)
#define glUniformMatrix2x3dv GETFUNCTION(__teUniformMatrix2x3dv)
#define glUniformMatrix2x4dv GETFUNCTION(__teUniformMatrix2x4dv)
#define glUniformMatrix3x2dv GETFUNCTION(__teUniformMatrix3x2dv)
#define glUniformMatrix3x4dv GETFUNCTION(__teUniformMatrix3x4dv)
#define glUniformMatrix4x2dv GETFUNCTION(__teUniformMatrix4x2dv)
#define glUniformMatrix4x3dv GETFUNCTION(__teUniformMatrix4x3dv)
#define glGetUniformdv GETFUNCTION(__teGetUniformdv)
#define glGetSubroutineUniformLocation GETFUNCTION(__teGetSubroutineUniformLocation)
#define glGetSubroutineIndex GETFUNCTION(__teGetSubroutineIndex)
#define glGetActiveSubroutineUniformiv GETFUNCTION(__teGetActiveSubroutineUniformiv)
#define glGetActiveSubroutineUniformName GETFUNCTION(__teGetActiveSubroutineUniformName)
#define glGetActiveSubroutineName GETFUNCTION(__teGetActiveSubroutineName)
#define glUniformSubroutinesuiv GETFUNCTION(__teUniformSubroutinesuiv)
#define glGetUniformSubroutineuiv GETFUNCTION(__teGetUniformSubroutineuiv)
#define glGetProgramStageiv GETFUNCTION(__teGetProgramStageiv)
#define glPatchParameteri GETFUNCTION(__tePatchParameteri)
#define glPatchParameterfv GETFUNCTION(__tePatchParameterfv)
#define glBindTransformFeedback GETFUNCTION(__teBindTransformFeedback)
#define glDeleteTransformFeedbacks GETFUNCTION(__teDeleteTransformFeedbacks)
#define glGenTransformFeedbacks GETFUNCTION(__teGenTransformFeedbacks)
#define glIsTransformFeedback GETFUNCTION(__teIsTransformFeedback)
#define glPauseTransformFeedback GETFUNCTION(__tePauseTransformFeedback)
#define glResumeTransformFeedback GETFUNCTION(__teResumeTransformFeedback)
#define glDrawTransformFeedback GETFUNCTION(__teDrawTransformFeedback)
#define glDrawTransformFeedbackStream GETFUNCTION(__teDrawTransformFeedbackStream)
#define glBeginQueryIndexed GETFUNCTION(__teBeginQueryIndexed)
#define glEndQueryIndexed GETFUNCTION(__teEndQueryIndexed)
#define glGetQueryIndexediv GETFUNCTION(__teGetQueryIndexediv)

//OpenGL 4.1 Extensions
extern PFNGLRELEASESHADERCOMPILERPROC __teReleaseShaderCompiler;
extern PFNGLSHADERBINARYPROC __teShaderBinary;
extern PFNGLGETSHADERPRECISIONFORMATPROC __teGetShaderPrecisionFormat;
extern PFNGLDEPTHRANGEFPROC __teDepthRangef;
extern PFNGLCLEARDEPTHFPROC __teClearDepthf;
extern PFNGLGETPROGRAMBINARYPROC __teGetProgramBinary;
extern PFNGLPROGRAMBINARYPROC __teProgramBinary;
extern PFNGLPROGRAMPARAMETERIPROC __teProgramParameteri;
extern PFNGLUSEPROGRAMSTAGESPROC __teUseProgramStages;
extern PFNGLACTIVESHADERPROGRAMPROC __teActiveShaderProgram;
extern PFNGLCREATESHADERPROGRAMVPROC __teCreateShaderProgramv;
extern PFNGLBINDPROGRAMPIPELINEPROC __teBindProgramPipeline;
extern PFNGLDELETEPROGRAMPIPELINESPROC __teDeleteProgramPipelines;
extern PFNGLGENPROGRAMPIPELINESPROC __teGenProgramPipelines;
extern PFNGLISPROGRAMPIPELINEPROC __teIsProgramPipeline;
extern PFNGLGETPROGRAMPIPELINEIVPROC __teGetProgramPipelineiv;
extern PFNGLPROGRAMUNIFORM1IPROC __teProgramUniform1i;
extern PFNGLPROGRAMUNIFORM1IVPROC __teProgramUniform1iv;
extern PFNGLPROGRAMUNIFORM1FPROC __teProgramUniform1f;
extern PFNGLPROGRAMUNIFORM1FVPROC __teProgramUniform1fv;
extern PFNGLPROGRAMUNIFORM1DPROC __teProgramUniform1d;
extern PFNGLPROGRAMUNIFORM1DVPROC __teProgramUniform1dv;
extern PFNGLPROGRAMUNIFORM1UIPROC __teProgramUniform1ui;
extern PFNGLPROGRAMUNIFORM1UIVPROC __teProgramUniform1uiv;
extern PFNGLPROGRAMUNIFORM2IPROC __teProgramUniform2i;
extern PFNGLPROGRAMUNIFORM2IVPROC __teProgramUniform2iv;
extern PFNGLPROGRAMUNIFORM2FPROC __teProgramUniform2f;
extern PFNGLPROGRAMUNIFORM2FVPROC __teProgramUniform2fv;
extern PFNGLPROGRAMUNIFORM2DPROC __teProgramUniform2d;
extern PFNGLPROGRAMUNIFORM2DVPROC __teProgramUniform2dv;
extern PFNGLPROGRAMUNIFORM2UIPROC __teProgramUniform2ui;
extern PFNGLPROGRAMUNIFORM2UIVPROC __teProgramUniform2uiv;
extern PFNGLPROGRAMUNIFORM3IPROC __teProgramUniform3i;
extern PFNGLPROGRAMUNIFORM3IVPROC __teProgramUniform3iv;
extern PFNGLPROGRAMUNIFORM3FPROC __teProgramUniform3f;
extern PFNGLPROGRAMUNIFORM3FVPROC __teProgramUniform3fv;
extern PFNGLPROGRAMUNIFORM3DPROC __teProgramUniform3d;
extern PFNGLPROGRAMUNIFORM3DVPROC __teProgramUniform3dv;
extern PFNGLPROGRAMUNIFORM3UIPROC __teProgramUniform3ui;
extern PFNGLPROGRAMUNIFORM3UIVPROC __teProgramUniform3uiv;
extern PFNGLPROGRAMUNIFORM4IPROC __teProgramUniform4i;
extern PFNGLPROGRAMUNIFORM4IVPROC __teProgramUniform4iv;
extern PFNGLPROGRAMUNIFORM4FPROC __teProgramUniform4f;
extern PFNGLPROGRAMUNIFORM4FVPROC __teProgramUniform4fv;
extern PFNGLPROGRAMUNIFORM4DPROC __teProgramUniform4d;
extern PFNGLPROGRAMUNIFORM4DVPROC __teProgramUniform4dv;
extern PFNGLPROGRAMUNIFORM4UIPROC __teProgramUniform4ui;
extern PFNGLPROGRAMUNIFORM4UIVPROC __teProgramUniform4uiv;
extern PFNGLPROGRAMUNIFORMMATRIX2FVPROC __teProgramUniformMatrix2fv;
extern PFNGLPROGRAMUNIFORMMATRIX3FVPROC __teProgramUniformMatrix3fv;
extern PFNGLPROGRAMUNIFORMMATRIX4FVPROC __teProgramUniformMatrix4fv;
extern PFNGLPROGRAMUNIFORMMATRIX2DVPROC __teProgramUniformMatrix2dv;
extern PFNGLPROGRAMUNIFORMMATRIX3DVPROC __teProgramUniformMatrix3dv;
extern PFNGLPROGRAMUNIFORMMATRIX4DVPROC __teProgramUniformMatrix4dv;
extern PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __teProgramUniformMatrix2x3fv;
extern PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __teProgramUniformMatrix3x2fv;
extern PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __teProgramUniformMatrix2x4fv;
extern PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __teProgramUniformMatrix4x2fv;
extern PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __teProgramUniformMatrix3x4fv;
extern PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __teProgramUniformMatrix4x3fv;
extern PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __teProgramUniformMatrix2x3dv;
extern PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __teProgramUniformMatrix3x2dv;
extern PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __teProgramUniformMatrix2x4dv;
extern PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __teProgramUniformMatrix4x2dv;
extern PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __teProgramUniformMatrix3x4dv;
extern PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __teProgramUniformMatrix4x3dv;
extern PFNGLVALIDATEPROGRAMPIPELINEPROC __teValidateProgramPipeline;
extern PFNGLGETPROGRAMPIPELINEINFOLOGPROC __teGetProgramPipelineInfoLog;
extern PFNGLVERTEXATTRIBL1DPROC __teVertexAttribL1d;
extern PFNGLVERTEXATTRIBL2DPROC __teVertexAttribL2d;
extern PFNGLVERTEXATTRIBL3DPROC __teVertexAttribL3d;
extern PFNGLVERTEXATTRIBL4DPROC __teVertexAttribL4d;
extern PFNGLVERTEXATTRIBL1DVPROC __teVertexAttribL1dv;
extern PFNGLVERTEXATTRIBL2DVPROC __teVertexAttribL2dv;
extern PFNGLVERTEXATTRIBL3DVPROC __teVertexAttribL3dv;
extern PFNGLVERTEXATTRIBL4DVPROC __teVertexAttribL4dv;
extern PFNGLVERTEXATTRIBLPOINTERPROC __teVertexAttribLPointer;
extern PFNGLGETVERTEXATTRIBLDVPROC __teGetVertexAttribLdv;
extern PFNGLVIEWPORTARRAYVPROC __teViewportArrayv;
extern PFNGLVIEWPORTINDEXEDFPROC __teViewportIndexedf;
extern PFNGLVIEWPORTINDEXEDFVPROC __teViewportIndexedfv;
extern PFNGLSCISSORARRAYVPROC __teScissorArrayv;
extern PFNGLSCISSORINDEXEDPROC __teScissorIndexed;
extern PFNGLSCISSORINDEXEDVPROC __teScissorIndexedv;
extern PFNGLDEPTHRANGEARRAYVPROC __teDepthRangeArrayv;
extern PFNGLDEPTHRANGEINDEXEDPROC __teDepthRangeIndexed;
extern PFNGLGETFLOATI_VPROC __teGetFloati_v;
extern PFNGLGETDOUBLEI_VPROC __teGetDoublei_v;
#define glReleaseShaderCompiler GETFUNCTION(__teReleaseShaderCompiler)
#define glShaderBinary GETFUNCTION(__teShaderBinary)
#define glGetShaderPrecisionFormat GETFUNCTION(__teGetShaderPrecisionFormat)
#define glDepthRangef GETFUNCTION(__teDepthRangef)
#define glClearDepthf GETFUNCTION(__teClearDepthf)
#define glGetProgramBinary GETFUNCTION(__teGetProgramBinary)
#define glProgramBinary GETFUNCTION(__teProgramBinary)
#define glProgramParameteri GETFUNCTION(__teProgramParameteri)
#define glUseProgramStages GETFUNCTION(__teUseProgramStages)
#define glActiveShaderProgram GETFUNCTION(__teActiveShaderProgram)
#define glCreateShaderProgramv GETFUNCTION(__teCreateShaderProgramv)
#define glBindProgramPipeline GETFUNCTION(__teBindProgramPipeline)
#define glDeleteProgramPipelines GETFUNCTION(__teDeleteProgramPipelines)
#define glGenProgramPipelines GETFUNCTION(__teGenProgramPipelines)
#define glIsProgramPipeline GETFUNCTION(__teIsProgramPipeline)
#define glGetProgramPipelineiv GETFUNCTION(__teGetProgramPipelineiv)
#define glProgramUniform1i GETFUNCTION(__teProgramUniform1i)
#define glProgramUniform1iv GETFUNCTION(__teProgramUniform1iv)
#define glProgramUniform1f GETFUNCTION(__teProgramUniform1f)
#define glProgramUniform1fv GETFUNCTION(__teProgramUniform1fv)
#define glProgramUniform1d GETFUNCTION(__teProgramUniform1d)
#define glProgramUniform1dv GETFUNCTION(__teProgramUniform1dv)
#define glProgramUniform1ui GETFUNCTION(__teProgramUniform1ui)
#define glProgramUniform1uiv GETFUNCTION(__teProgramUniform1uiv)
#define glProgramUniform2i GETFUNCTION(__teProgramUniform2i)
#define glProgramUniform2iv GETFUNCTION(__teProgramUniform2iv)
#define glProgramUniform2f GETFUNCTION(__teProgramUniform2f)
#define glProgramUniform2fv GETFUNCTION(__teProgramUniform2fv)
#define glProgramUniform2d GETFUNCTION(__teProgramUniform2d)
#define glProgramUniform2dv GETFUNCTION(__teProgramUniform2dv)
#define glProgramUniform2ui GETFUNCTION(__teProgramUniform2ui)
#define glProgramUniform2uiv GETFUNCTION(__teProgramUniform2uiv)
#define glProgramUniform3i GETFUNCTION(__teProgramUniform3i)
#define glProgramUniform3iv GETFUNCTION(__teProgramUniform3iv)
#define glProgramUniform3f GETFUNCTION(__teProgramUniform3f)
#define glProgramUniform3fv GETFUNCTION(__teProgramUniform3fv)
#define glProgramUniform3d GETFUNCTION(__teProgramUniform3d)
#define glProgramUniform3dv GETFUNCTION(__teProgramUniform3dv)
#define glProgramUniform3ui GETFUNCTION(__teProgramUniform3ui)
#define glProgramUniform3uiv GETFUNCTION(__teProgramUniform3uiv)
#define glProgramUniform4i GETFUNCTION(__teProgramUniform4i)
#define glProgramUniform4iv GETFUNCTION(__teProgramUniform4iv)
#define glProgramUniform4f GETFUNCTION(__teProgramUniform4f)
#define glProgramUniform4fv GETFUNCTION(__teProgramUniform4fv)
#define glProgramUniform4d GETFUNCTION(__teProgramUniform4d)
#define glProgramUniform4dv GETFUNCTION(__teProgramUniform4dv)
#define glProgramUniform4ui GETFUNCTION(__teProgramUniform4ui)
#define glProgramUniform4uiv GETFUNCTION(__teProgramUniform4uiv)
#define glProgramUniformMatrix2fv GETFUNCTION(__teProgramUniformMatrix2fv)
#define glProgramUniformMatrix3fv GETFUNCTION(__teProgramUniformMatrix2fv)
#define glProgramUniformMatrix4fv GETFUNCTION(__teProgramUniformMatrix2fv)
#define glProgramUniformMatrix2dv GETFUNCTION(__teProgramUniformMatrix2dv)
#define glProgramUniformMatrix3dv GETFUNCTION(__teProgramUniformMatrix3dv)
#define glProgramUniformMatrix4dv GETFUNCTION(__teProgramUniformMatrix4dv)
#define glProgramUniformMatrix2x3fv GETFUNCTION(__teProgramUniformMatrix2x3fv)
#define glProgramUniformMatrix3x2fv GETFUNCTION(__teProgramUniformMatrix3x2fv)
#define glProgramUniformMatrix2x4fv GETFUNCTION(__teProgramUniformMatrix2x4fv)
#define glProgramUniformMatrix4x2fv GETFUNCTION(__teProgramUniformMatrix4x2fv)
#define glProgramUniformMatrix3x4fv GETFUNCTION(__teProgramUniformMatrix3x4fv)
#define glProgramUniformMatrix4x3fv GETFUNCTION(__teProgramUniformMatrix4x3fv)
#define glProgramUniformMatrix2x3dv GETFUNCTION(__teProgramUniformMatrix2x3dv)
#define glProgramUniformMatrix3x2dv GETFUNCTION(__teProgramUniformMatrix3x2dv)
#define glProgramUniformMatrix2x4dv GETFUNCTION(__teProgramUniformMatrix2x4dv)
#define glProgramUniformMatrix4x2dv GETFUNCTION(__teProgramUniformMatrix4x2dv)
#define glProgramUniformMatrix3x4dv GETFUNCTION(__teProgramUniformMatrix3x2dv)
#define glProgramUniformMatrix4x3dv GETFUNCTION(__teProgramUniformMatrix4x3dv)
#define glValidateProgramPipeline GETFUNCTION(__teValidateProgramPipeline)
#define glGetProgramPipelineInfoLog GETFUNCTION(__teGetProgramPipelineInfoLog)
#define glVertexAttribL1d GETFUNCTION(__teVertexAttribL1d)
#define glVertexAttribL2d GETFUNCTION(__teVertexAttribL2d)
#define glVertexAttribL3d GETFUNCTION(__teVertexAttribL3d)
#define glVertexAttribL4d GETFUNCTION(__teVertexAttribL4d)
#define glVertexAttribL1dv GETFUNCTION(__teVertexAttribL1dv)
#define glVertexAttribL2dv GETFUNCTION(__teVertexAttribL2dv)
#define glVertexAttribL3dv GETFUNCTION(__teVertexAttribL3dv)
#define glVertexAttribL4dv GETFUNCTION(__teVertexAttribL4dv)
#define glVertexAttribLPointer GETFUNCTION(__teVertexAttribLPointer)
#define glGetVertexAttribLdv GETFUNCTION(__teGetVertexAttribLdv)
#define glViewportarrayv GETFUNCTION(__teViewportArrayv)
#define glViewportIndexedf GETFUNCTION(__teViewportIndexedf)
#define glViewportIndexedfv GETFUNCTION(__teViewportIndexedfv)
#define glScissorArrayv GETFUNCTION(__teScissorArrayv)
#define glScissorIndexed GETFUNCTION(__teScissorIndexed)
#define glScissorIndexedv GETFUNCTION(__teScissorIndexedv)
#define glDepthRangeIndexed GETFUNCTION(__teDepthRangeIndexed)
#define glGetFloati_v GETFUNCTION(__teGetFloati_v)
#define glGetDoublei_v GETFUNCTION(__teGetDoublei_v)

//OpenGL 4.2 Extensions
extern PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __teDrawArraysInstancedBaseInstance;
extern PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __teDrawElementsInstancedBaseInstance;
extern PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __teDrawElementsInstancedBaseVertexBaseInstance;
extern PFNGLGETINTERNALFORMATIVPROC __teGetInternalformativ;
extern PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __teGetActiveAtomicCounterBufferiv;
extern PFNGLBINDIMAGETEXTUREPROC __teBindImageTexture;
extern PFNGLMEMORYBARRIERPROC __teMemoryBarrier;
extern PFNGLTEXSTORAGE1DPROC __teTexStorage1D;
extern PFNGLTEXSTORAGE2DPROC __teTexStorage2D;
extern PFNGLTEXSTORAGE3DPROC __teTexStorage3D;
extern PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __teDrawTransformFeedbackInstanced;
extern PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __teDrawTransformFeedbackStreamInstanced;
#define glDrawArraysInstancedBaseInstance GETFUNCTION(__teDrawArraysInstancedBaseInstance)
#define glDrawElementsInstancedBaseInstance GETFUNCTION(__teDrawElementsInstancedBaseInstance)
#define glDrawElementsInstancedBaseVertexBaseInstance GETFUNCTION(__teDrawElementsInstancedBaseVertexBaseInstance)
#define glGetInternalFormativ GETFUNCTION(__teGetInternalformativ)
#define glGetActiveAtomicCounterBufferiv GETFUNCTION(__teGetActiveAtomicCounterBufferiv)
#define glBindImageTexture GETFUNCTION(__teBindImageTexture)
#define glMemoryBarrier GETFUNCTION(__teMemoryBarrier)
#define glTexStorage1D GETFUNCTION(__teTexStorage1D)
#define glTexStorage2D GETFUNCTION(__teTexStorage2D)
#define glTexStorage3D GETFUNCTION(__teTexStorage3D)
#define glDrawTransformFeedbackInstanced GETFUNCTION(__teDrawTransformFeedbackInstanced)
#define glDrawTransformFeedbackStreamInstanced GETFUNCTION(__teDrawTransformFeedbackStreamInstanced)

//OpenGL 4.3 Extensions
extern PFNGLCLEARBUFFERDATAPROC __teClearBufferData;
extern PFNGLCLEARBUFFERSUBDATAPROC __teClearBufferSubdata;
extern PFNGLDISPATCHCOMPUTEPROC __teDispatchCompute;
extern PFNGLDISPATCHCOMPUTEINDIRECTPROC __teDispatchComputeIndirect;
extern PFNGLCOPYIMAGESUBDATAPROC  __teCopyImageSubdata;
extern PFNGLFRAMEBUFFERPARAMETERIPROC __teFramebufferParameteri;
extern PFNGLGETFRAMEBUFFERPARAMETERIVPROC __teGetFramebufferParameteriv;
extern PFNGLGETINTERNALFORMATI64VPROC __teGetInternalformati64v;
extern PFNGLINVALIDATETEXSUBIMAGEPROC __teInvalidateTexSubImage;
extern PFNGLINVALIDATETEXIMAGEPROC __teInvalidateTexImage;
extern PFNGLINVALIDATEBUFFERSUBDATAPROC __teInvalidateBufferSubdata;
extern PFNGLINVALIDATEBUFFERDATAPROC __teInvalidateBufferData;
extern PFNGLINVALIDATEFRAMEBUFFERPROC __teInvalidateFramebuffer;
extern PFNGLINVALIDATESUBFRAMEBUFFERPROC __teInvalidateSubFramebuffer;
extern PFNGLMULTIDRAWARRAYSINDIRECTPROC __teMultiDrawArraysIndirect;
extern PFNGLMULTIDRAWELEMENTSINDIRECTPROC __teMultiDrawElementsIndirect;
extern PFNGLGETPROGRAMINTERFACEIVPROC __teGetProgramInterfaceiv;
extern PFNGLGETPROGRAMRESOURCEINDEXPROC __teGetProgramResourceIndex;
extern PFNGLGETPROGRAMRESOURCENAMEPROC __teGetProgramResourceName;
extern PFNGLGETPROGRAMRESOURCEIVPROC __teGetProgramResourceiv;
extern PFNGLGETPROGRAMRESOURCELOCATIONPROC __teGetProgramResourceLocation;
extern PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __teGetProgramResourceLocationIndex;
extern PFNGLSHADERSTORAGEBLOCKBINDINGPROC __teShaderStorageBlockBinding;
extern PFNGLTEXBUFFERRANGEPROC __teTexBufferRange;
extern PFNGLTEXSTORAGE2DMULTISAMPLEPROC __teTexStorage2DMultisample;
extern PFNGLTEXSTORAGE3DMULTISAMPLEPROC __teTexStorage3DMultisample;
extern PFNGLTEXTUREVIEWPROC __teTextureView;
extern PFNGLBINDVERTEXBUFFERPROC __teBindVertexBuffer;
extern PFNGLVERTEXATTRIBFORMATPROC __teVertexAttribFormat;
extern PFNGLVERTEXATTRIBIFORMATPROC __teVertexAttribIFormat;
extern PFNGLVERTEXATTRIBLFORMATPROC __teVertexAttribLFormat;
extern PFNGLVERTEXATTRIBBINDINGPROC __teVertexAttribBinding;
extern PFNGLVERTEXBINDINGDIVISORPROC __teVertexBindingDivisor;
extern PFNGLDEBUGMESSAGECONTROLPROC __teDebugMessageControl;
extern PFNGLDEBUGMESSAGEINSERTPROC __teDebugMessageInsert;
extern PFNGLDEBUGMESSAGECALLBACKPROC __teDebugMessageCallback;
extern PFNGLGETDEBUGMESSAGELOGPROC __teGetDebugMessageLog;
extern PFNGLPUSHDEBUGGROUPPROC __tePushDebugGroup;
extern PFNGLPOPDEBUGGROUPPROC __tePopDebugGroup;
extern PFNGLOBJECTLABELPROC __teObjectLabel;
extern PFNGLGETOBJECTLABELPROC __teGetObjectLabel;
extern PFNGLOBJECTPTRLABELPROC __teObjectPtrLabel;
extern PFNGLGETOBJECTPTRLABELPROC __teGetObjectPtrLabel;
#define glClearBufferData GETFUNCTION(__teClearBufferData)
#define glClearBufferSubdata GETFUNCTION(__teClearBufferSubdata)
#define glDispatchCompute GETFUNCTION(__teDispatchCompute)
#define glDispatchComputeIndirect GETFUNCTION(__teDispatchComputeIndirect)
#define glCopyImageSubdata GETFUNCTION(__teCopyImageSubdata)
#define glFramebufferParameteri GETFUNCTION(__teFramebufferParameteri)
#define glGetFramebufferParameteriv GETFUNCTION(__teGetFramebufferParameteriv)
#define glGetInternalFormati64v GETFUNCTION(__teGetInternalformati64v)
#define glInvalidateTexSubImage GETFUNCTION(__teInvalidateTexSubImage)
#define glInvalidateTexImage GETFUNCTION(__teInvalidateTexImage)
#define glInvalidateBufferSubdata GETFUNCTION(__teInvalidateBufferSubdata)
#define glInvalidateBufferData GETFUNCTION(__teInvalidateBufferData)
#define glInvalidateFramebuffer GETFUNCTION(__teInvalidateFramebuffer)
#define glInvalidateSubFramebuffer GETFUNCTION(__teInvalidateSubFramebuffer)
#define glMultiDrawArraysIndirect GETFUNCTION(__teMultiDrawArraysIndirect)
#define glMultiDrawElementsIndirect GETFUNCTION(__teMultiDrawElementsIndirect)
#define glGetProgramInterfaceiv GETFUNCTION(__teGetProgramInterfaceiv)
#define glGetProgramResourceIndex GETFUNCTION(__teGetProgramResourceIndex)
#define glGetProgramResourceName GETFUNCTION(__teGetProgramResourceName)
#define glGetProgramResourceiv GETFUNCTION(__teGetProgramResourceiv)
#define glGetProgramResourceLocation GETFUNCTION(__teGetProgramResourceLocation)
#define glGetProgramResourceLocationIndex GETFUNCTION(__teGetProgramResourceLocationIndex)
#define glShaderStorageBlockBinding GETFUNCTION(__teShaderStorageBlockBinding)
#define glTexBufferRange GETFUNCTION(__teTexBufferRange)
#define glTexStorage2DMultisample GETFUNCTION(__teTexStorage2DMultisample)
#define glTexStorage3DMultisample GETFUNCTION(__teTexStorage3DMultisample)
#define glTextureView GETFUNCTION(__teTextureView)
#define glBindVertexBuffer GETFUNCTION(__teBindVertexBuffer)
#define glVertexAttribFormat GETFUNCTION(__teVertexAttribFormat)
#define glVertexAttribIFormat GETFUNCTION(__teVertexAttribIFormat)
#define glVertexAttribLFormat GETFUNCTION(__teVertexAttribLFormat)
#define glVertexAttribBinding GETFUNCTION(__teVertexAttribBinding)
#define glVertexBindingDivisor GETFUNCTION(__teVertexBindingDivisor)
#define glDebugMessageControl GETFUNCTION(__teDebugMessageControl)
#define glDebugMessageInsert GETFUNCTION(__teDebugMessageInsert)
#define glDebugMessageCallback GETFUNCTION(__teDebugMessageCallback)
#define glGetDebugMessageLog GETFUNCTION(__teGetDebugMessageLog)
#define glPushDebugGroup GETFUNCTION(__tePushDebugGroup)
#define glPopDebugGroup GETFUNCTION(__tePopDebugGroup)
#define glObjectLabel GETFUNCTION(__teObjectLabel)
#define glObjectPtrLabel GETFUNCTION(__teObjectPtrLabel)
#define glGetObjectPtrLabel GETFUNCTION(__teGetObjectPtrLabel)

//OpenGL 4.4 Extensions
extern PFNGLBUFFERSTORAGEPROC __teBufferStorage;
extern PFNGLCLEARTEXIMAGEPROC __teClearTexImage;
extern PFNGLCLEARTEXSUBIMAGEPROC __teClearTexSubImage;
extern PFNGLBINDBUFFERSBASEPROC __teBindBuffersBase;
extern PFNGLBINDBUFFERSRANGEPROC __teBindBuffersRange;
extern PFNGLBINDTEXTURESPROC __teBindTextures;
extern PFNGLBINDSAMPLERSPROC __teBindSamplers;
extern PFNGLBINDIMAGETEXTURESPROC __teBindImageTextures;
extern PFNGLBINDVERTEXBUFFERSPROC __teBindVertexBuffers;
#define glBufferStorage GETFUNCTION(__teBufferStorage)
#define glClearTexImage GETFUNCTION(__teClearTexImage)
#define glClearTexSubImage GETFUNCTION(__teClearTexSubImage)
#define glBindBuffersBase GETFUNCTION(__teBindBuffersBase)
#define glBindBuffersRange GETFUNCTION(__teBindBuffersRange)
#define glBindTextures GETFUNCTION(__teBindTextures)
#define glBindSamplers GETFUNCTION(__teBindSamplers)
#define glBindImageTextures GETFUNCTION(__teBindImageTextures)
#define glBindVertexBuffers GETFUNCTION(__teBindVertexBuffers)



class TinyExtender
{
public:
	
	TinyExtender(){}
	~TinyExtender(){}

	static GLvoid InitializeExtensions()
	{
		TinyExtender::InitializeGLVersion();
		GLuint Version_Major, Version_Minor;
		Version_Major = TinyExtender::GLVersion_Major;
		Version_Minor = TinyExtender::GLVersion_Minor;

		//this was a bad idea...
		//(Version_Major >= 1 && Version_Minor >= 2) ? Load1_2Extensions() : TinyExtender::PrintErrorMessage(Version_Major, Version_Minor);

		if (Version_Major > 1 || (Version_Minor >= 2 && Version_Major >= 1))
		{
			Load1_2Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(1, 2);
			return;
		}

		if (Version_Major > 1 || (Version_Minor >= 3 && Version_Major >= 1))
		{
			Load1_3Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(1, 3);
			return;
		}

		if (Version_Major > 1 || (Version_Minor >= 4 && Version_Major >= 1))
		{
			Load1_4Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(1, 4);
			return;
		}

		if (Version_Major > 1 || (Version_Minor >= 5 && Version_Major >= 1))
		{
			Load1_5Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(1, 5);
			return;
		}

		if (Version_Major > 2 || (Version_Minor >= 0 && Version_Major >= 2))
		{
			Load2_0Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(2, 0);
			return;
		}

		if (Version_Major > 2 || (Version_Minor >= 1 && Version_Major >= 2))
		{
			Load2_1Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(2, 1);
			return;
		}

		if (Version_Major > 3 || (Version_Minor >= 0 && Version_Major >= 3))
		{
			Load3_0Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(3, 0);
			return;
		}

		if (Version_Major > 3 || (Version_Minor >= 1 && Version_Major >= 3))
		{
			Load3_1Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(3, 1);
			return;
		}

		if (Version_Major > 3 || (Version_Minor >= 2 && Version_Major >= 3))
		{
			Load3_2Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(3, 2);
			return;
		}

		if (Version_Major > 3 || (Version_Minor >= 3 && Version_Major >= 3))
		{
			Load3_3Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(3, 3);
			return;
		}

		if (Version_Major > 4 || (Version_Minor >= 0 && Version_Major >= 4))
		{
			Load4_0Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(4, 0);
			return;
		}

		if (Version_Major > 4 || (Version_Minor >= 1 && Version_Major >= 4))
		{
			Load4_1Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(4, 1);
			return;
		}

		if (Version_Major > 4 || (Version_Minor >= 2 && Version_Major >= 4))
		{
			Load4_2Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(4, 2);
			return;
		}

		if (Version_Major > 4 || (Version_Minor >= 3 && Version_Minor >= 4))
		{
			Load4_3Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(4, 3);
		}

		if (Version_Major > 4 || (Version_Minor >= 4 && Version_Major >= 4))
		{
			Load4_4Extensions();
		}

		else
		{
			TinyExtender::PrintErrorMessage(4, 4);
			return;
		}
	}

	static GLvoid InitializeExtensionsSpecific(GLbitfield OpenGLVersions)
	{
		TinyExtender::InitializeGLVersion();
		GLuint Version_Major = TinyExtender::GLVersion_Major;
		GLuint Version_Minor = TinyExtender::GLVersion_Minor;

		if (OpenGLVersions & GLVERSION1_2)
		{
			if (Version_Major > 1 || (Version_Minor >= 2 && Version_Major >= 1))
			{
				TinyExtender::Load1_2Extensions();
			}

			TinyExtender::PrintErrorMessage(1, 2);
		}

		if (OpenGLVersions & GLVERSION1_3)
		{
			if (Version_Major > 1 || (Version_Minor >= 3 && Version_Major >= 1))
			{
				TinyExtender::Load1_3Extensions();
			}

			TinyExtender::PrintErrorMessage(1, 3);
		}

		if (OpenGLVersions & GLVERSION1_4)
		{
			if (Version_Major > 1 || (Version_Minor >= 4 && Version_Major >= 1))
			{
				TinyExtender::Load1_4Extensions();
			}

			TinyExtender::PrintErrorMessage(1, 4);
		}

		if (OpenGLVersions & GLVERSION1_5)
		{
			if (Version_Major > 1 || (Version_Minor >= 5 && Version_Major >= 1))
			{
				TinyExtender::Load1_5Extensions();
			}

			TinyExtender::PrintErrorMessage(1, 5);
		}

		if (OpenGLVersions & GLVERSION2_0)
		{
			if (Version_Major > 2 || (Version_Minor >= 0 && Version_Major >= 2))
			{
				TinyExtender::Load2_0Extensions();
			}

			TinyExtender::PrintErrorMessage(2, 0);
		}

		if (OpenGLVersions & GLVERSION2_1)
		{
			if (Version_Major > 2 || (Version_Minor >= 1 && Version_Major >= 2))
			{
				TinyExtender::Load2_1Extensions();
			}

			TinyExtender::PrintErrorMessage(2, 1);
		}

		if (OpenGLVersions & GLVERSION3_0)
		{
			if (Version_Major > 3 || (Version_Minor >= 0 && Version_Major >= 3))
			{
				TinyExtender::Load3_0Extensions();
			}

			TinyExtender::PrintErrorMessage(3, 0);
		}

		if (OpenGLVersions & GLVERSION3_1)
		{
			if (Version_Major > 3 || (Version_Minor >= 1 && Version_Major >= 3))
			{
				TinyExtender::Load3_1Extensions();
			}

			TinyExtender::PrintErrorMessage(3, 1);
		}

		if (OpenGLVersions & GLVERSION3_2)
		{
			if (Version_Major > 3 || (Version_Minor >= 2 && Version_Major >= 3))
			{
				TinyExtender::Load3_2Extensions();
			}

			TinyExtender::PrintErrorMessage(3, 2);
		}

		if (OpenGLVersions & GLVERSION3_3)
		{
			if (Version_Major > 3 || (Version_Minor >= 3 && Version_Major >= 3))
			{
				TinyExtender::Load3_3Extensions();
			}

			TinyExtender::PrintErrorMessage(3, 3);
		}

		if (OpenGLVersions & GLVERSION4_0)
		{
			if (Version_Major > 4 || (Version_Minor >= 0 && Version_Major >= 4))
			{
				TinyExtender::Load4_0Extensions();
			}

			TinyExtender::PrintErrorMessage(4, 0);
		}

		if (OpenGLVersions & GLVERSION4_1)
		{
			if (Version_Major > 4 || (Version_Minor >= 1 && Version_Major >= 4))
			{
				TinyExtender::Load4_1Extensions();
			}

			TinyExtender::PrintErrorMessage(4, 1);
		}

		if (OpenGLVersions & GLVERSION4_2)
		{
			if (Version_Major > 4 || (Version_Minor >= 2 && Version_Major >= 4))
			{
				TinyExtender::Load4_2Extensions();
			}

			TinyExtender::PrintErrorMessage(4, 2);
		}

		if (OpenGLVersions & GLVERSION4_3)
		{
			if (Version_Major > 4 || (Version_Minor >= 3 && Version_Major >= 4))
			{
				TinyExtender::Load4_3Extensions();
			}

			TinyExtender::PrintErrorMessage(4, 3);
		}

		if (OpenGLVersions & GLVERSION4_4)
		{
			if (Version_Major > 4 || (Version_Minor >= 4 && Version_Major >= 4))
			{
				TinyExtender::Load4_4Extensions();
			}

			TinyExtender::PrintErrorMessage(4, 4);
		}
	}

	static GLvoid GetOpenGLVersion(GLuint& Version_Major, GLuint& Version_Minor)
	{
		Version_Major = TinyExtender::GLVersion_Major;
		Version_Minor = TinyExtender::GLVersion_Minor;
	}
	
	static GLboolean IsExtensionSupported(GLubyte* ExtensionName)
	{
		GLubyte* End; //the last extension name in Extensions 
		GLint NameLength; //the string length of the given extension

		NameLength = strlen((const char*)ExtensionName); // the length of the given extension name string 

		GLubyte* Extensions = (GLubyte*)glGetString(GL_EXTENSIONS); // get all supported extensions

		//if extensions is not empty
		if (Extensions)
		{
			End = Extensions + strlen((const char*)Extensions);

			while (Extensions < End)
			{
				GLint Blarg = strcspn((const char*)Extensions, " ");
				if ((NameLength == Blarg) && (strncmp((const char*)ExtensionName, (const char*)Extensions, Blarg) == 0))
				{
					return GL_TRUE;
				}

				Extensions += (Blarg + 1);
			}
			return GL_FALSE;
		}
		return GL_FALSE;
	}

private:
	static GLuint GLVersion_Major, GLVersion_Minor;

	static inline GLvoid Load1_2Extensions()
	{
		glDrawRangeElements = (PFNGLDRAWRANGEELEMENTSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawRangeElements");
		glTexImage3D = (PFNGLTEXIMAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexImage3D");
		glTexSubImage3D = (PFNGLTEXSUBIMAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexSubImage3D");
		glCopyTexSubImage3D = (PFNGLCOPYTEXSUBIMAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCopyTexSubImage3D");
	}

	static inline GLvoid Load1_3Extensions()
	{
		glActiveTexture = (PFNGLACTIVETEXTUREPROC)TinyExtender::GetProcAddress((const GLubyte*)"glActiveTexture");
		glSampleCoverage = (PFNGLSAMPLECOVERAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSampleCoverage");
		glCompressedTexImage3D = (PFNGLCOMPRESSEDTEXIMAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexImage3D");
		glCompressedTexImage2D = (PFNGLCOMPRESSEDTEXIMAGE2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexImage2D");
		glCompressedTexImage1D = (PFNGLCOMPRESSEDTEXIMAGE1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexImage1D");
		glCompressedTexSubImage3D = (PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexSubImage3D");
		glCompressedTexSubImage2D = (PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexSubImage2D");
		glCompressedTexSubImage1D = (PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompressedTexSubImage1D");
	}

	static inline GLvoid Load1_4Extensions()
	{
		glBlendFuncSeparate = (PFNGLBLENDFUNCSEPARATEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendFuncSeparate");
		glMultiDrawArrays = (PFNGLMULTIDRAWARRAYSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiDrawArrays");
		glMultiDrawElements = (PFNGLMULTIDRAWELEMENTSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiDrawElements");
		glPointParameterf = (PFNGLPOINTPARAMETERFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPointParameterf");
		glPointParameterfv = (PFNGLPOINTPARAMETERFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPointParameterfv");
		glPointParameteri = (PFNGLPOINTPARAMETERIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPointParameteri");
		glPointParameteriv = (PFNGLPOINTPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPointParameteriv");
		glFogCoordf = (PFNGLFOGCOORDFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFogCoordf");
		glFogCoordfv = (PFNGLFOGCOORDFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFogCoordfv");
		glFogCoordd = (PFNGLFOGCOORDDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFogCoordd");
		glFogCoorddv = (PFNGLFOGCOORDDVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFogCoorddv");
		glFogCoordPointer = (PFNGLFOGCOORDPOINTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFogCoordPointer");
		glSecondaryColor3b = (PFNGLSECONDARYCOLOR3BPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3b");
		glSecondaryColor3bv = (PFNGLSECONDARYCOLOR3BVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3bv");
		glSecondaryColor3d = (PFNGLSECONDARYCOLOR3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3d");
		glSecondaryColor3dv = (PFNGLSECONDARYCOLOR3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3dv");
		glSecondaryColor3f = (PFNGLSECONDARYCOLOR3FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3f");
		glSecondaryColor3fv = (PFNGLSECONDARYCOLOR3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3fv");
		glSecondaryColor3i = (PFNGLSECONDARYCOLOR3IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3i");
		glSecondaryColor3iv = (PFNGLSECONDARYCOLOR3IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3iv");
		glSecondaryColor3s = (PFNGLSECONDARYCOLOR3SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3s");
		glSecondaryColor3sv = (PFNGLSECONDARYCOLOR3SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3sv");
		glSecondaryColor3ub = (PFNGLSECONDARYCOLOR3UBPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3ub");
		glSecondaryColor3ubv = (PFNGLSECONDARYCOLOR3UBVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3ubv");
		glSecondaryColor3ui = (PFNGLSECONDARYCOLOR3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3ui");
		glSecondaryColor3uiv = (PFNGLSECONDARYCOLOR3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3uiv");
		glSecondaryColor3us = (PFNGLSECONDARYCOLOR3USPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3us");
		glSecondaryColor3usv = (PFNGLSECONDARYCOLOR3USVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColor3usv");
		glSecondaryColorPointer = (PFNGLSECONDARYCOLORPOINTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColorPointer");
		glWindowPos2d = (PFNGLWINDOWPOS2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2d");
		glWindowPos2dv = (PFNGLWINDOWPOS2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2dv");
		glWindowPos2f = (PFNGLWINDOWPOS2FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2f");
		glWindowPos2fv = (PFNGLWINDOWPOS2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2fv");
		glWindowPos2i = (PFNGLWINDOWPOS2IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2i");
		glWindowPos2iv = (PFNGLWINDOWPOS2IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2iv");
		glWindowPos2s = (PFNGLWINDOWPOS2SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2s");
		glWindowPos2sv = (PFNGLWINDOWPOS2SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos2sv");
		glWindowPos3d = (PFNGLWINDOWPOS3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3d");
		glWindowPos3dv = (PFNGLWINDOWPOS3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3dv");
		glWindowPos3f = (PFNGLWINDOWPOS3FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3f");
		glWindowPos3fv = (PFNGLWINDOWPOS3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3fv");
		glWindowPos3i = (PFNGLWINDOWPOS3IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3i");
		glWindowPos3iv = (PFNGLWINDOWPOS3IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3iv");
		glWindowPos3s = (PFNGLWINDOWPOS3SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3s");
		glWindowPos3sv = (PFNGLWINDOWPOS3SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWindowPos3sv");
		glBlendColor = (PFNGLBLENDCOLORPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendColor");
		glBlendEquation = (PFNGLBLENDEQUATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendEquation");
	}

	static inline GLvoid Load1_5Extensions()
	{
		glGenQueries = (PFNGLGENQUERIESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenQueries");
		glDeleteQueries = (PFNGLDELETEQUERIESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteQueries");
		glIsQuery = (PFNGLISQUERYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsQuery");
		glBeginQuery = (PFNGLBEGINQUERYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBeginQuery");
		glEndQuery = (PFNGLENDQUERYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEndQuery");
		glGetQueryiv = (PFNGLGETQUERYIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryiv");
		glGetQueryObjectiv = (PFNGLGETQUERYOBJECTIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryObjectiv");
		glGetQueryObjectuiv = (PFNGLGETQUERYOBJECTUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryObjectuiv");
		glBindBuffer = (PFNGLBINDBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindBuffer");
		glDeleteBuffers = (PFNGLDELETEBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteBuffers");
		glGenBuffers = (PFNGLGENBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenBuffers");
		glIsBuffer = (PFNGLISBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsBuffer");
		glBufferData = (PFNGLBUFFERDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBufferData");
		glBufferSubData = (PFNGLBUFFERSUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBufferSubData");
		glGetBufferSubData = (PFNGLGETBUFFERSUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetBufferSubData");
		glMapBuffer = (PFNGLMAPBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMapBuffer");
		glUnmapBuffer = (PFNGLUNMAPBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUnmapBuffer");
		glGetBufferParameteriv = (PFNGLGETBUFFERPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetBufferParameteriv");
		glGetBufferPointerv = (PFNGLGETBUFFERPOINTERVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetBufferPointerv");
	}

	static inline GLvoid Load2_0Extensions()
	{
		glBlendEquationSeparate = (PFNGLBLENDEQUATIONSEPARATEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendEquationSeparate");
		glDrawBuffers = (PFNGLDRAWBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawBuffers");
		glStencilOpSeparate = (PFNGLSTENCILOPSEPARATEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glStencilOpSeparate");
		glStencilFuncSeparate = (PFNGLSTENCILFUNCSEPARATEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glStencilFuncSeparate");
		glStencilMaskSeparate = (PFNGLSTENCILMASKSEPARATEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glStencilMaskSeparate");
		glAttachShader = (PFNGLATTACHSHADERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glAttachShader");
		glBindAttribLocation = (PFNGLBINDATTRIBLOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindAttribLocation");
		glCompileShader = (PFNGLCOMPILESHADERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCompileShader");
		glCreateProgram = (PFNGLCREATEPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCreateProgram");
		glDeleteProgram = (PFNGLDELETEPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteProgram");
		glDetachShader = (PFNGLDETACHSHADERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDetachShader");
		glDisableVertexAttribArray = (PFNGLDISABLEVERTEXATTRIBARRAYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDisableVertexAttribArray");
		glEnableVertexAttribArray = (PFNGLENABLEVERTEXATTRIBARRAYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEnableVertexAttribArray");
		glGetActiveAttrib = (PFNGLGETACTIVEATTRIBPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveAttrib");
		glGetActiveUniform = (PFNGLGETACTIVEUNIFORMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveUniform");
		glGetAttachedShaders = (PFNGLGETATTACHEDSHADERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetAttachedShaders");
		glGetAttribLocation = (PFNGLGETATTRIBLOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetAttribLocation");
		glGetProgramiv = (PFNGLGETPROGRAMIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramiv");
		glGetProgramInfoLog = (PFNGLGETPROGRAMINFOLOGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramInfoLog");
		glGetShaderSource = (PFNGLGETSHADERSOURCEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetShaderSource");
		glGetUniformLocation = (PFNGLGETUNIFORMLOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformLocation");
		glGetUniformfv = (PFNGLGETUNIFORMFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformfv");
		glGetUniformiv = (PFNGLGETUNIFORMIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformiv");
		glGetVertexAttribdv = (PFNGLGETVERTEXATTRIBDVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribdv");
		glGetVertexAttribfv = (PFNGLGETVERTEXATTRIBFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribfv");
		glGetVertexAttribiv = (PFNGLGETVERTEXATTRIBIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribiv");
		glGetVertexAttribPointerv = (PFNGLGETVERTEXATTRIBPOINTERVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribPointerv");
		glIsProgram = (PFNGLISPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsProgram");
		glIsShader = (PFNGLISSHADERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsShader");
		glLinkProgram = (PFNGLLINKPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glLinkProgram");
		glShaderSource = (PFNGLSHADERSOURCEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glShaderSource");
		glUseProgram = (PFNGLUSEPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUseProgram");
		glUniform1f = (PFNGLUNIFORM1FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1f");
		glUniform2f = (PFNGLUNIFORM2FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2f");
		glUniform3f = (PFNGLUNIFORM3FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3f");
		glUniform4f = (PFNGLUNIFORM4FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4f");
		glUniform1i = (PFNGLUNIFORM1IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1i");
		glUniform2i = (PFNGLUNIFORM2IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2i");
		glUniform3i = (PFNGLUNIFORM3IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3i");
		glUniform4i = (PFNGLUNIFORM4IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4i");
		glUniform1fv = (PFNGLUNIFORM1FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1fv");
		glUniform2fv = (PFNGLUNIFORM2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2fv");
		glUniform3fv = (PFNGLUNIFORM3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3fv");
		glUniform4fv = (PFNGLUNIFORM4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4fv");
		glUniform1iv = (PFNGLUNIFORM1IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1iv");
		glUniform2iv = (PFNGLUNIFORM2IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2iv");
		glUniform3iv = (PFNGLUNIFORM3IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3iv");
		glUniform4iv = (PFNGLUNIFORM4IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4iv");
		glUniformMatrix2fv = (PFNGLUNIFORMMATRIX2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2fv");
		glUniformMatrix3fv = (PFNGLUNIFORMMATRIX3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3fv");
		glUniformMatrix4fv = (PFNGLUNIFORMMATRIX4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4fv");
		glValidateProgram = (PFNGLVALIDATEPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glValidateProgram");
		glVertexAttrib1d = (PFNGLVERTEXATTRIB1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1d");
		glVertexAttrib1dv = (PFNGLVERTEXATTRIB1DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1dv");
		glVertexAttrib1f = (PFNGLVERTEXATTRIB1FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1f");
		glVertexAttrib1fv = (PFNGLVERTEXATTRIB1FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1fv");
		glVertexAttrib1s = (PFNGLVERTEXATTRIB1SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1s");
		glVertexAttrib1sv = (PFNGLVERTEXATTRIB1SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib1sv");
		glVertexAttrib2d = (PFNGLVERTEXATTRIB2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2d");
		glVertexAttrib2dv = (PFNGLVERTEXATTRIB2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2dv");
		glVertexAttrib2f = (PFNGLVERTEXATTRIB2FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2f");
		glVertexAttrib2fv = (PFNGLVERTEXATTRIB2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2fv");
		glVertexAttrib2s = (PFNGLVERTEXATTRIB2SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2s");
		glVertexAttrib2sv = (PFNGLVERTEXATTRIB2SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib2sv");
		glVertexAttrib3d = (PFNGLVERTEXATTRIB3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3d");
		glVertexAttrib3dv = (PFNGLVERTEXATTRIB3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3dv");
		glVertexAttrib3f = (PFNGLVERTEXATTRIB3FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3f");
		glVertexAttrib3fv = (PFNGLVERTEXATTRIB3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3fv");
		glVertexAttrib3s = (PFNGLVERTEXATTRIB3SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3s");
		glVertexAttrib3sv = (PFNGLVERTEXATTRIB3SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib3sv");
		glVertexAttrib4Nbv = (PFNGLVERTEXATTRIB4NBVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nbv");
		glVertexAttrib4Niv = (PFNGLVERTEXATTRIB4NIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Niv");
		glVertexAttrib4Nsv = (PFNGLVERTEXATTRIB4NSVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nsv");
		glVertexAttrib4Nub = (PFNGLVERTEXATTRIB4NUBPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nub");
		glVertexAttrib4Nubv = (PFNGLVERTEXATTRIB4NUBVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nubv");
		glVertexAttrib4Nuiv = (PFNGLVERTEXATTRIB4NUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nuiv");
		glVertexAttrib4Nusv = (PFNGLVERTEXATTRIB4NUSVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4Nusv");
		glVertexAttrib4bv = (PFNGLVERTEXATTRIB4BVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4bv");
		glVertexAttrib4d = (PFNGLVERTEXATTRIB4DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4d");
		glVertexAttrib4dv = (PFNGLVERTEXATTRIB4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4dv");
		glVertexAttrib4f = (PFNGLVERTEXATTRIB4FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4f");
		glVertexAttrib4fv = (PFNGLVERTEXATTRIB4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4fv");
		glVertexAttrib4iv = (PFNGLVERTEXATTRIB4IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4iv");
		glVertexAttrib4s = (PFNGLVERTEXATTRIB4SPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4s");
		glVertexAttrib4sv = (PFNGLVERTEXATTRIB4SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4sv");
		glVertexAttrib4ubv = (PFNGLVERTEXATTRIB4UBVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4ubv");
		glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4uiv");
		glVertexAttrib4usv = (PFNGLVERTEXATTRIB4USVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4usv");
		glVertexAttribPointer = (PFNGLVERTEXATTRIBPOINTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribPointer");
	}

	static inline GLvoid Load2_1Extensions()
	{
		glUniformMatrix2x3fv = (PFNGLUNIFORMMATRIX2X3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2x3fv");
		glUniformMatrix3x2fv = (PFNGLUNIFORMMATRIX3X2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3x2fv");
		glUniformMatrix2x4fv = (PFNGLUNIFORMMATRIX2X4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2x4fv");
		glUniformMatrix4x2fv = (PFNGLUNIFORMMATRIX4X2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4x2fv");
		glUniformMatrix3x4fv = (PFNGLUNIFORMMATRIX3X4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3x4fv");
		glUniformMatrix4x3fv = (PFNGLUNIFORMMATRIX4X3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4x3fv");
	}

	static inline GLvoid Load3_0Extensions()
	{
		glColorMaski = (PFNGLCOLORMASKIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glColorMaski");
		glGetBooleani_v = (PFNGLGETBOOLEANI_VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetBooleani_v");
		glGetIntegeri_v = (PFNGLGETINTEGERI_VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetIntegeri_v");
		glEnablei = (PFNGLENABLEIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEnablei");
		glDisablei = (PFNGLDISABLEIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDisablei");
		glIsEnabledi = (PFNGLISENABLEDIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsEnabledi");
		glBeginTransformFeedback = (PFNGLBEGINTRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBeginTransformFeedback");
		glEndTransformFeedback = (PFNGLENDTRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEndTransformFeedback");
		glBindBufferRange = (PFNGLBINDBUFFERRANGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindBufferRange");
		glBindBufferBase = (PFNGLBINDBUFFERBASEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindBufferBase");
		glTransformFeedbackVaryings = (PFNGLTRANSFORMFEEDBACKVARYINGSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTransformFeedbackVaryings");
		glGetTransformFeedbackVarying = (PFNGLGETTRANSFORMFEEDBACKVARYINGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetTransformFeedbackVarying");
		glClampColor = (PFNGLCLAMPCOLORPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClampColor");
		glBeginConditionalRender = (PFNGLBEGINCONDITIONALRENDERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBeginConditionalRender");
		glEndConditionalRender = (PFNGLENDCONDITIONALRENDERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEndConditionalRender");
		glVertexAttribIPointer = (PFNGLVERTEXATTRIBIPOINTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribIPointer");
		glGetVertexAttribIiv = (PFNGLGETVERTEXATTRIBIIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribIiv");
		glGetVertexAttribIuiv = (PFNGLGETVERTEXATTRIBIUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribIuiv");
		glVertexAttribI1i = (PFNGLVERTEXATTRIBI1IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI1i");
		glVertexAttribI2i = (PFNGLVERTEXATTRIBI2IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI2i");
		glVertexAttribI3i = (PFNGLVERTEXATTRIBI3IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI3i");
		glVertexAttribI4i = (PFNGLVERTEXATTRIBI4IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4i");
		glVertexAttribI1ui = (PFNGLVERTEXATTRIBI1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI1ui");
		glVertexAttribI2ui = (PFNGLVERTEXATTRIBI2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI2ui");
		glVertexAttribI3ui = (PFNGLVERTEXATTRIBI3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI3ui");
		glVertexAttribI4ui = (PFNGLVERTEXATTRIBI4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4ui");
		glVertexAttribI1iv = (PFNGLVERTEXATTRIBI1IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI1iv");
		glVertexAttribI2iv = (PFNGLVERTEXATTRIBI2IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI2iv");
		glVertexAttribI3iv = (PFNGLVERTEXATTRIBI3IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI3iv");
		glVertexAttribI4iv = (PFNGLVERTEXATTRIBI4IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4iv");
		glVertexAttribI1uiv = (PFNGLVERTEXATTRIBI1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI1uiv");
		glVertexAttribI2uiv = (PFNGLVERTEXATTRIBI2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI2uiv");
		glVertexAttribI3uiv = (PFNGLVERTEXATTRIBI3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI3uiv");
		glVertexAttribI4uiv = (PFNGLVERTEXATTRIBI4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4uiv");
		glVertexAttribI4bv = (PFNGLVERTEXATTRIBI4BVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4bv");
		glVertexAttribI4sv = (PFNGLVERTEXATTRIBI4SVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4sv");
		glVertexAttribI4ubv = (PFNGLVERTEXATTRIBI4UBVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4ubv");
		glVertexAttribI4usv = (PFNGLVERTEXATTRIBI4USVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribI4usv");
		glGetUniformuiv = (PFNGLGETUNIFORMUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformuiv");
		glBindFragDataLocation = (PFNGLBINDFRAGDATALOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindFragDataLocation");
		glGetFragDataLocation = (PFNGLGETFRAGDATALOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetFragDataLocation");
		glUniform1ui = (PFNGLUNIFORM1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1ui");
		glUniform2ui = (PFNGLUNIFORM2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2ui");
		glUniform3ui = (PFNGLUNIFORM3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3ui");
		glUniform4ui = (PFNGLUNIFORM4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4ui");
		glUniform1uiv = (PFNGLUNIFORM1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1uiv");
		glUniform2uiv = (PFNGLUNIFORM2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2uiv");
		glUniform3uiv = (PFNGLUNIFORM3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3uiv");
		glUniform4uiv = (PFNGLUNIFORM4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4uiv");
		glTexParameterIiv = (PFNGLTEXPARAMETERIIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexParameterIiv");
		glTexParameterIuiv = (PFNGLTEXPARAMETERIUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexParameterIuiv");
		glGetTexParameterIiv = (PFNGLGETTEXPARAMETERIIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetTexParameterIiv");
		glGetTexParameterIuiv = (PFNGLGETTEXPARAMETERIUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetTexParameterIuiv");
		glClearBufferiv = (PFNGLCLEARBUFFERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferiv");
		glClearBufferuiv = (PFNGLCLEARBUFFERUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferuiv");
		glClearBufferfv = (PFNGLCLEARBUFFERFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferfv");
		glClearBufferfi = (PFNGLCLEARBUFFERFIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferi");
		glGetStringi = (PFNGLGETSTRINGIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetStringi");
		glIsRenderbuffer = (PFNGLISRENDERBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsRenderbuffer");
		glBindRenderbuffer = (PFNGLBINDRENDERBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindRenderbuffer");
		glDeleteRenderbuffers = (PFNGLDELETERENDERBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteRenderbuffers");
		glGenRenderbuffers = (PFNGLGENRENDERBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenRenderbuffers");
		glRenderbufferStorage = (PFNGLRENDERBUFFERSTORAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glRenderbufferStorage");
		glGetRenderbufferParameteriv = (PFNGLGETRENDERBUFFERPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetRenderbufferParameteriv");
		glIsFramebuffer = (PFNGLISFRAMEBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsFramebuffer");
		glBindFramebuffer = (PFNGLBINDFRAMEBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindFramebuffer");
		glDeleteFramebuffers = (PFNGLDELETEFRAMEBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteFramebuffers");
		glGenFramebuffers = (PFNGLGENFRAMEBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenFramebuffers");
		glCheckFrameBufferStatus = (PFNGLCHECKFRAMEBUFFERSTATUSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCheckFrameBufferStatus");
		glFramebufferTexture1D = (PFNGLFRAMEBUFFERTEXTURE1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferTexture1D");
		glFramebufferTexture2D = (PFNGLFRAMEBUFFERTEXTURE2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferTexture2D");
		glFramebufferTexture3D = (PFNGLFRAMEBUFFERTEXTURE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferTexture3D");
		glFramebufferRenderbuffer = (PFNGLFRAMEBUFFERRENDERBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferRenderbuffer");
		glGetFramebufferAttachmentParameteriv = (PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetFramebufferAttachmentParameteriv");
		glGenerateMipmap = (PFNGLGENERATEMIPMAPPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenerateMapmap");
		glBlitFramebuffer = (PFNGLBLITFRAMEBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlitFramebuffer");
		glRenderbufferStorageMultisample = (PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glRenderbufferStorageMultisample");
		glFramebufferTextureLayer = (PFNGLFRAMEBUFFERTEXTURELAYERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferTextureLayer");
		glMapBufferRange = (PFNGLMAPBUFFERRANGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMapBufferRange");
		glFlushMappedBufferRange = (PFNGLFLUSHMAPPEDBUFFERRANGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFlushMappedBufferRange");
		glBindVertexArray = (PFNGLBINDVERTEXARRAYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindVertexArray");
		glDeleteVertexArrays = (PFNGLDELETEVERTEXARRAYSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteVertexArrays");
		glGenVertexArrays = (PFNGLGENVERTEXARRAYSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenVertexArrays");
		glIsVertexArray = (PFNGLISVERTEXARRAYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsVertexArray");
	}

	static inline GLvoid Load3_1Extensions()
	{
		glDrawArraysInstanced = (PFNGLDRAWARRAYSINSTANCEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawArraysInstanced");
		glDrawElementsInstanced = (PFNGLDRAWELEMENTSINSTANCEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsInstanced");
		glTexBuffer = (PFNGLTEXBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexBuffer");
		glPrimtiveRestartIndex = (PFNGLPRIMITIVERESTARTINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPrimtiveRestartIndex");
		glCopyBufferSubdata = (PFNGLCOPYBUFFERSUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCopyBufferSubdata");
		glGetUniformIndices = (PFNGLGETUNIFORMINDICESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformIndices");
		glGetActiveUniformsiv = (PFNGLGETACTIVEUNIFORMSIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveUniformsiv");
		glGetActiveUniformName = (PFNGLGETACTIVEUNIFORMNAMEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveUniformName");
		glGetUniformBlockIndex = (PFNGLGETUNIFORMBLOCKINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformBlockIndex");
		glGetActiveUniformBlockiv = (PFNGLGETACTIVEUNIFORMBLOCKIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveUniformBlockiv");
		glGetActiveUniformBlockName = (PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveUniformBlockName");
		glUniformBlockBinding = (PFNGLUNIFORMBLOCKBINDINGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformBlockBinding");
	}

	static inline GLvoid Load3_2Extensions()
	{
		glDrawElementsBaseVertex = (PFNGLDRAWELEMENTSBASEVERTEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsBaseVertex");
		glDrawRangeElementsBaseVertex = (PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawRangeElementsBaseVertex");
		glDrawElementsInstancedBaseVertex = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertex");
		glMultiDrawElementsBaseVertex = (PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiDrawElementsBaseVertex");
		glProvokingVertex = (PFNGLPROVOKINGVERTEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProvokingVertex");
		glFenceSync = (PFNGLFENCESYNCPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFenceSync");
		glIsSync = (PFNGLISSYNCPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsSync");
		glDeleteSync = (PFNGLDELETESYNCPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteSync");
		glClientWaitSync = (PFNGLCLIENTWAITSYNCPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClientWaitSync");
		glWaitSync = (PFNGLWAITSYNCPROC)TinyExtender::GetProcAddress((const GLubyte*)"glWaitSync");
		glGetInteger64v = (PFNGLGETINTEGER64VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetInteger64v");
		glGetSynciv = (PFNGLGETSYNCIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSynciv");
		glGetInteger64i_v = (PFNGLGETINTEGER64I_VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetInteger64i_v");
		glGetBufferParameteri64v = (PFNGLGETBUFFERPARAMETERI64VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetBufferParameteri64v");
		glFramebufferTexture = (PFNGLFRAMEBUFFERTEXTUREPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferTexture");
		glTexImage2DMultiSample = (PFNGLTEXIMAGE2DMULTISAMPLEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexImage2DMultiSample");
		glTexImage3DMultisample = (PFNGLTEXIMAGE3DMULTISAMPLEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexImage3DMultisample");
		glGetMultisamplefv = (PFNGLGETMULTISAMPLEFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetMultisamplefv");
		glSampleMaski = (PFNGLSAMPLEMASKIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSampleMaski");
	}
	
	static inline GLvoid Load3_3Extensions()
	{
		glBindFragDataLocationIndexed = (PFNGLBINDFRAGDATALOCATIONINDEXEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindFragDataLocationIndexed");
		glGetFragDataIndex = (PFNGLGETFRAGDATAINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetFragDataIndex");
		glGenSamplers = (PFNGLGENSAMPLERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenSamplers");
		glDeleteSamplers = (PFNGLDELETESAMPLERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteSamplers");
		glIsSampler = (PFNGLISSAMPLERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsSampler");
		glBindSampler = (PFNGLBINDSAMPLERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindSampler");
		glSamplerParameteri = (PFNGLSAMPLERPARAMETERIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameteri");
		glSamplerParameteriv = (PFNGLSAMPLERPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameteriv");
		glSamplerParameterf = (PFNGLSAMPLERPARAMETERFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameterf");
		glSamplerParameterfv = (PFNGLSAMPLERPARAMETERFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameterfv");
		glSamplerParameterIiv = (PFNGLSAMPLERPARAMETERIIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameterIiv");
		glSamplerParameterIuiv = (PFNGLSAMPLERPARAMETERIUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSamplerParameterIuiv");
		glGetSamplerParameteriv = (PFNGLGETSAMPLERPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSamplerParameteriv");
		glGetSamplerParameterIiv = (PFNGLGETSAMPLERPARAMETERIIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSamplerParameterIiv");
		glGetSamplerParameterfv = (PFNGLGETSAMPLERPARAMETERFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSamplerParameterfv");
		glGetSamplerParameterIuiv = (PFNGLGETSAMPLERPARAMETERIUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSamplerParameterIuiv");
		glQueryCounter = (PFNGLQUERYCOUNTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glQueryCounter");
		glGetQueryObjecti64v = (PFNGLGETQUERYOBJECTI64VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryObjecti64v");
		glGetQueryObjectui64v = (PFNGLGETQUERYOBJECTUI64VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryObjectui64v");
		glVertexAttribDivisor = (PFNGLVERTEXATTRIBDIVISORPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribDivisor");
		glVertexAttribP1ui = (PFNGLVERTEXATTRIBP1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP1ui");
		glVertexAttribP1uiv = (PFNGLVERTEXATTRIBP1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP1uiv");
		glVertexAttribP2ui = (PFNGLVERTEXATTRIBP2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP2ui");
		glVertexAttribP2uiv = (PFNGLVERTEXATTRIBP2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP2uiv");
		glVertexAttribP3ui = (PFNGLVERTEXATTRIBP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP3ui");
		glVertexAttribP3uiv = (PFNGLVERTEXATTRIBP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP3uiv");
		glVertexAttribP4ui = (PFNGLVERTEXATTRIBP4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribP4ui");
		glVertexAttrib4uiv = (PFNGLVERTEXATTRIB4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttrib4uiv");
		glVertexP2ui = (PFNGLVERTEXP2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP2ui");
		glVertexP2uiv = (PFNGLVERTEXP2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP2uiv");
		glVertexP3ui = (PFNGLVERTEXP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP3ui");
		glVertexP3uiv = (PFNGLVERTEXP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP3uiv");
		glVertexP4ui = (PFNGLVERTEXP4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP4ui");
		glVertexP4uiv = (PFNGLVERTEXP4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexP4uiv");
		glTexCoordP1ui = (PFNGLTEXCOORDP1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP1ui");
		glTexCoordP1uiv = (PFNGLTEXCOORDP1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP1uiv");
		glTexCoordP2ui = (PFNGLTEXCOORDP2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP2ui");
		glTexCoordP2uiv = (PFNGLTEXCOORDP2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP2uiv");
		glTexCoordP3ui = (PFNGLTEXCOORDP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP3ui");
		glTexCoordP3uiv = (PFNGLTEXCOORDP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP3uiv");
		glTexCoordP4ui = (PFNGLTEXCOORDP4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP4ui");
		glTexCoordP4uiv = (PFNGLTEXCOORDP4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexCoordP4uiv");
		glMultiTexCoordP1ui = (PFNGLMULTITEXCOORDP1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP1ui");
		glMultiTexCoordP1uiv = (PFNGLMULTITEXCOORDP1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP1uiv");
		glMultiTexCoordP2ui = (PFNGLMULTITEXCOORDP2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP2ui");
		glMultiTexCoordP2uiv = (PFNGLMULTITEXCOORDP2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP2uiv");
		glMultiTexCoordP3ui = (PFNGLMULTITEXCOORDP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP3ui");
		glMultiTexCoordP3uiv = (PFNGLMULTITEXCOORDP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP3uiv");
		glMultiTexCoordP4ui = (PFNGLMULTITEXCOORDP4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP4ui");
		glMultiTexCoordP4uiv = (PFNGLMULTITEXCOORDP4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiTexCoordP4uiv");
		glNormalP3ui = (PFNGLNORMALP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glNormalP3ui");
		glNormalP3uiv = (PFNGLNORMALP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glNormalP3uiv");
		glColorP3ui = (PFNGLCOLORP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glColorP3ui");
		glColorP3uiv = (PFNGLCOLORP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glColorP3uiv");
		glColorP4ui = (PFNGLCOLORP4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glColorP4ui");
		glColorP4uiv = (PFNGLCOLORP4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glColorP4uiv");
		glSecondaryColorP3ui = (PFNGLSECONDARYCOLORP3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColorP3ui");
		glSecondaryColorP3uiv = (PFNGLSECONDARYCOLORP3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glSecondaryColorP3uiv");
	}

	static inline GLvoid Load4_0Extensions()
	{
		glMinSampleShading = (PFNGLMINSAMPLESHADINGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMinSampleShading");
		glBlendEquationi = (PFNGLBLENDEQUATIONIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendEquationi");
		glBlendEquationSeparatei = (PFNGLBLENDEQUATIONSEPARATEIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendEquationSeparatei");
		glBlendFunci = (PFNGLBLENDFUNCIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendFunci");
		glBlendFuncSeparatei = (PFNGLBLENDFUNCSEPARATEIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBlendFuncSeparatei");
		glDrawArraysIndirect = (PFNGLDRAWARRAYSINDIRECTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawArraysIndirect");
		glDrawElementsIndirect = (PFNGLDRAWELEMENTSINDIRECTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsIndirect");
		glUniform1d = (PFNGLUNIFORM1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1d");
		glUniform2d = (PFNGLUNIFORM2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2d");
		glUniform3d = (PFNGLUNIFORM3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3d");
		glUniform4d = (PFNGLUNIFORM4DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4d");
		glUniform1dv = (PFNGLUNIFORM1DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform1dv");
		glUniform2dv = (PFNGLUNIFORM2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform2dv");
		glUniform3dv = (PFNGLUNIFORM3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform3dv");
		glUniform4dv = (PFNGLUNIFORM4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniform4dv");
		glUniformMatrix2dv = (PFNGLUNIFORMMATRIX2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2dv");
		glUniformMatrix3dv = (PFNGLUNIFORMMATRIX3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3dv");
		glUniformMatrix4dv = (PFNGLUNIFORMMATRIX4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4dv");
		glUniformMatrix2x3dv = (PFNGLUNIFORMMATRIX2X3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2x3dv");
		glUniformMatrix2x4dv = (PFNGLUNIFORMMATRIX2X4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix2x4dv");
		glUniformMatrix3x2dv = (PFNGLUNIFORMMATRIX3X2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3x2dv");
		glUniformMatrix3x4dv = (PFNGLUNIFORMMATRIX3X4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix3x4dv");
		glUniformMatrix4x2dv = (PFNGLUNIFORMMATRIX4X2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4x2dv");
		glUniformMatrix4x3dv = (PFNGLUNIFORMMATRIX4X3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformMatrix4x3dv");
		glGetUniformdv = (PFNGLGETUNIFORMDVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformdv");
		glGetSubroutineUniformLocation = (PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSubroutineUniformLocation");
		glGetSubroutineIndex = (PFNGLGETSUBROUTINEINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetSubroutineIndex");
		glGetActiveSubroutineUniformiv = (PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformiv");
		glGetActiveSubroutineUniformName = (PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveSubroutineUniformName");
		glGetActiveSubroutineName = (PFNGLGETACTIVESUBROUTINENAMEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveSubroutineName");
		glUniformSubroutinesuiv = (PFNGLUNIFORMSUBROUTINESUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUniformSubroutinesuiv");
		glGetUniformSubroutineuiv = (PFNGLGETUNIFORMSUBROUTINEUIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetUniformSubroutineuiv");
		glGetProgramStageiv = (PFNGLGETPROGRAMSTAGEIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramStageiv");
		glPatchParameteri = (PFNGLPATCHPARAMETERIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPatchParameteri");
		glPatchParameterfv = (PFNGLPATCHPARAMETERFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPatchParameterfv");
		glBindTransformFeedback = (PFNGLBINDTRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindTransformFeedback");
		glDeleteTransformFeedbacks = (PFNGLDELETETRANSFORMFEEDBACKSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteTransformFeedbacks");
		glGenTransformFeedbacks = (PFNGLGENTRANSFORMFEEDBACKSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenTransformFeedbacks");
		glIsTransformFeedback = (PFNGLISTRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsTransformFeedback");
		glPauseTransformFeedback = (PFNGLPAUSETRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPauseTransformFeedback");
		glResumeTransformFeedback = (PFNGLRESUMETRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glResumeTransformFeedback");
		glDrawTransformFeedback = (PFNGLDRAWTRANSFORMFEEDBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawTransformFeedback");
		glDrawTransformFeedbackStream = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawTransformFeedbackStream");
		glBeginQueryIndexed = (PFNGLBEGINQUERYINDEXEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBeginQueryIndexed");
		glEndQueryIndexed = (PFNGLENDQUERYINDEXEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glEndQueryIndexed");
		glGetQueryIndexediv = (PFNGLGETQUERYINDEXEDIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetQueryIndexediv");
	}

	static inline GLvoid Load4_1Extensions()
	{
		glReleaseShaderCompiler = (PFNGLRELEASESHADERCOMPILERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glReleaseShaderCompiler");
		glShaderBinary = (PFNGLSHADERBINARYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glShaderBinary");
		glGetShaderPrecisionFormat = (PFNGLGETSHADERPRECISIONFORMATPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetShaderPrecisionFormat");
		glDepthRangef = (PFNGLDEPTHRANGEFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDepthRangef");
		glClearDepthf = (PFNGLCLEARDEPTHFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearDepthf");
		glGetProgramBinary = (PFNGLGETPROGRAMBINARYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramBinary");
		glProgramBinary = (PFNGLPROGRAMBINARYPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramBinary");
		glProgramParameteri = (PFNGLPROGRAMPARAMETERIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramParameteri");
		glUseProgramStages = (PFNGLUSEPROGRAMSTAGESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glUseProgramStages");
		glActiveShaderProgram = (PFNGLACTIVESHADERPROGRAMPROC)TinyExtender::GetProcAddress((const GLubyte*)"glActiveShaderProgram");
		glCreateShaderProgramv = (PFNGLCREATESHADERPROGRAMVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCreateShaderProgramv");
		glBindProgramPipeline = (PFNGLBINDPROGRAMPIPELINEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindProgramPipeline");
		glDeleteProgramPipelines = (PFNGLDELETEPROGRAMPIPELINESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDeleteProgramPipelines");
		glGenProgramPipelines = (PFNGLGENPROGRAMPIPELINESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGenProgramPipelines");
		glIsProgramPipeline = (PFNGLISPROGRAMPIPELINEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glIsProgramPipeline");
		glGetProgramPipelineiv = (PFNGLGETPROGRAMPIPELINEIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramPipelineiv");
		glProgramUniform1i = (PFNGLPROGRAMUNIFORM1IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1i");
		glProgramUniform1iv = (PFNGLPROGRAMUNIFORM1IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1iv");
		glProgramUniform1f = (PFNGLPROGRAMUNIFORM1FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1f");
		glProgramUniform1fv = (PFNGLPROGRAMUNIFORM1FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1fv");
		glProgramUniform1d = (PFNGLPROGRAMUNIFORM1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1d");
		glProgramUniform1dv = (PFNGLPROGRAMUNIFORM1DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1dv");
		glProgramUniform1ui = (PFNGLPROGRAMUNIFORM1UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1ui");
		glProgramUniform1uiv = (PFNGLPROGRAMUNIFORM1UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform1uiv");
		glProgramUniform2i = (PFNGLPROGRAMUNIFORM2IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2i");
		glProgramUniform2iv = (PFNGLPROGRAMUNIFORM2IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2iv");
		glProgramUniform2f = (PFNGLPROGRAMUNIFORM2FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2f");
		glProgramUniform2fv = (PFNGLPROGRAMUNIFORM2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2fv");
		glProgramUniform2d = (PFNGLPROGRAMUNIFORM2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2d");
		glProgramUniform2dv = (PFNGLPROGRAMUNIFORM2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2dv");
		glProgramUniform2ui = (PFNGLPROGRAMUNIFORM2UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2ui");
		glProgramUniform2uiv = (PFNGLPROGRAMUNIFORM2UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform2uiv");
		glProgramUniform3i = (PFNGLPROGRAMUNIFORM3IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3i");
		glProgramUniform3iv = (PFNGLPROGRAMUNIFORM3IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3iv");
		glProgramUniform3f = (PFNGLPROGRAMUNIFORM3FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3f");
		glProgramUniform3fv = (PFNGLPROGRAMUNIFORM3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3fv");
		glProgramUniform3d = (PFNGLPROGRAMUNIFORM3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3d");
		glProgramUniform3dv = (PFNGLPROGRAMUNIFORM3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3dv");
		glProgramUniform3ui = (PFNGLPROGRAMUNIFORM3UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3ui");
		glProgramUniform3uiv = (PFNGLPROGRAMUNIFORM3UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform3uiv");
		glProgramUniform4i = (PFNGLPROGRAMUNIFORM4IPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4i");
		glProgramUniform4iv = (PFNGLPROGRAMUNIFORM4IVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4iv");
		glProgramUniform4f = (PFNGLPROGRAMUNIFORM4FPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4f");
		glProgramUniform4fv = (PFNGLPROGRAMUNIFORM4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4fv");
		glProgramUniform4d = (PFNGLPROGRAMUNIFORM4DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4d");
		glProgramUniform4dv = (PFNGLPROGRAMUNIFORM4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4dv");
		glProgramUniform4ui = (PFNGLPROGRAMUNIFORM4UIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4ui");
		glProgramUniform4uiv = (PFNGLPROGRAMUNIFORM4UIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniform4uiv");
		glProgramUniformMatrix2fv = (PFNGLPROGRAMUNIFORMMATRIX2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2fv");
		glProgramUniformMatrix3fv = (PFNGLPROGRAMUNIFORMMATRIX3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3fv");
		glProgramUniformMatrix4fv = (PFNGLPROGRAMUNIFORMMATRIX4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4fv");
		glProgramUniformMatrix2dv = (PFNGLPROGRAMUNIFORMMATRIX2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2dv");
		glProgramUniformMatrix3dv = (PFNGLPROGRAMUNIFORMMATRIX3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3dv");
		glProgramUniformMatrix4dv = (PFNGLPROGRAMUNIFORMMATRIX4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4dv");
		glProgramUniformMatrix2x3fv = (PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3fv");
		glProgramUniformMatrix3x2fv = (PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2fv");
		glProgramUniformMatrix2x4fv = (PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4fv");
		glProgramUniformMatrix4x2fv = (PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2fv");
		glProgramUniformMatrix3x4fv = (PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4fv");
		glProgramUniformMatrix4x3fv = (PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3fv");
		glProgramUniformMatrix2x3dv = (PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2x3dv");
		glProgramUniformMatrix3x2dv = (PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3x2dv");
		glProgramUniformMatrix2x4dv = (PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix2x4dv");
		glProgramUniformMatrix4x2dv = (PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4x2dv");
		glProgramUniformMatrix3x4dv = (PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix3x4dv");
		glProgramUniformMatrix4x3dv = (PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glProgramUniformMatrix4x3dv");
		glValidateProgramPipeline = (PFNGLVALIDATEPROGRAMPIPELINEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glValidateProgramPipeline");
		glGetProgramPipelineInfoLog = (PFNGLGETPROGRAMPIPELINEINFOLOGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramPipelineInfoLog");
		glVertexAttribL1d = (PFNGLVERTEXATTRIBL1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL1d");
		glVertexAttribL2d = (PFNGLVERTEXATTRIBL2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL2d");
		glVertexAttribL3d = (PFNGLVERTEXATTRIBL3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL3d");
		glVertexAttribL4d = (PFNGLVERTEXATTRIBL4DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL4d");
		glVertexAttribL1dv = (PFNGLVERTEXATTRIBL1DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL1dv");
		glVertexAttribL2dv = (PFNGLVERTEXATTRIBL2DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL2dv");
		glVertexAttribL3dv = (PFNGLVERTEXATTRIBL3DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL3dv");
		glVertexAttribL4dv = (PFNGLVERTEXATTRIBL4DVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribL4dv");
		glVertexAttribLPointer = (PFNGLVERTEXATTRIBLPOINTERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribLPointer");
		glGetVertexAttribLdv = (PFNGLGETVERTEXATTRIBLDVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetVertexAttribLdv");
		glViewportarrayv = (PFNGLVIEWPORTARRAYVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glViewportarrayv");
		glViewportIndexedf = (PFNGLVIEWPORTINDEXEDFPROC)TinyExtender::GetProcAddress((const GLubyte*)"glViewportIndexedf");
		glViewportIndexedfv = (PFNGLVIEWPORTINDEXEDFVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glViewportIndexedfv");
		glScissorArrayv = (PFNGLSCISSORARRAYVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glScissorArrayv");
		glScissorIndexed = (PFNGLSCISSORINDEXEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glScissorIndexed");
		glScissorIndexedv = (PFNGLSCISSORINDEXEDVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glScissorIndexedv");
		glDepthRangeIndexed = (PFNGLDEPTHRANGEINDEXEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDepthRangeIndexed");
		glGetFloati_v = (PFNGLGETFLOATI_VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetFloati_v");
		glGetDoublei_v = (PFNGLGETDOUBLEI_VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetDoublei_v");
	}

	static inline GLvoid Load4_2Extensions()
	{
		glDrawArraysInstancedBaseInstance = (PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawArraysInstancedBaseInstance");
		glDrawElementsInstancedBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseInstance");
		glDrawElementsInstancedBaseVertexBaseInstance = (PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawElementsInstancedBaseVertexBaseInstance");
		glGetInternalFormativ = (PFNGLGETINTERNALFORMATIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetInternalFormativ");
		glGetActiveAtomicCounterBufferiv = (PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetActiveAtomicCounterBufferiv");
		glBindImageTexture = (PFNGLBINDIMAGETEXTUREPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindImageTexture");
		glMemoryBarrier = (PFNGLMEMORYBARRIERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMemoryBarrier");
		glTexStorage1D = (PFNGLTEXSTORAGE1DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexStorage1D");
		glTexStorage2D = (PFNGLTEXSTORAGE2DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexStorage2D");
		glTexStorage3D = (PFNGLTEXSTORAGE3DPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexStorage3D");
		glDrawTransformFeedbackInstanced = (PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawTransformFeedbackInstanced");
		glDrawTransformFeedbackStreamInstanced = (PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDrawTransformFeedbackStreamInstanced");
	}

	static inline GLvoid Load4_3Extensions()
	{
		glClearBufferData = (PFNGLCLEARBUFFERDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferData");
		glClearBufferSubdata = (PFNGLCLEARBUFFERSUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearBufferSubdata");
		glDispatchCompute = (PFNGLDISPATCHCOMPUTEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDispatchCompute");
		glDispatchComputeIndirect = (PFNGLDISPATCHCOMPUTEINDIRECTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDispatchComputeIndirect");
		glCopyImageSubdata = (PFNGLCOPYIMAGESUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glCopyImageSubdata");
		glFramebufferParameteri = (PFNGLFRAMEBUFFERPARAMETERIPROC)TinyExtender::GetProcAddress((const GLubyte*)"glFramebufferParameteri");
		glGetFramebufferParameteriv = (PFNGLGETFRAMEBUFFERPARAMETERIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetFramebufferParameteriv");
		glGetInternalFormati64v = (PFNGLGETINTERNALFORMATI64VPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetInternalFormati64v");
		glInvalidateTexSubImage = (PFNGLINVALIDATETEXSUBIMAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateTexSubImage");
		glInvalidateTexImage = (PFNGLINVALIDATETEXIMAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateTexImage");
		glInvalidateBufferSubdata = (PFNGLINVALIDATEBUFFERSUBDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateBufferSubdata");
		glInvalidateBufferData = (PFNGLINVALIDATEBUFFERDATAPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateBufferData");
		glInvalidateFramebuffer = (PFNGLINVALIDATEFRAMEBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateFramebuffer");
		glInvalidateSubFramebuffer = (PFNGLINVALIDATESUBFRAMEBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glInvalidateSubFramebuffer");
		glMultiDrawArraysIndirect = (PFNGLMULTIDRAWARRAYSINDIRECTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiDrawArraysIndirect");
		glMultiDrawElementsIndirect = (PFNGLMULTIDRAWELEMENTSINDIRECTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glMultiDrawElementsIndirect");
		glGetProgramInterfaceiv = (PFNGLGETPROGRAMINTERFACEIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramInterfaceiv");
		glGetProgramResourceIndex = (PFNGLGETPROGRAMRESOURCEINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramResourceIndex");
		glGetProgramResourceName = (PFNGLGETPROGRAMRESOURCENAMEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramResourceName");
		glGetProgramResourceiv = (PFNGLGETPROGRAMRESOURCEIVPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramResourceiv");
		glGetProgramResourceLocation = (PFNGLGETPROGRAMRESOURCELOCATIONPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramResourceLocation");
		glGetProgramResourceLocationIndex = (PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetProgramResourceLocationIndex");
		glShaderStorageBlockBinding = (PFNGLSHADERSTORAGEBLOCKBINDINGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glShaderStorageBlockBinding");
		glTexBufferRange = (PFNGLTEXBUFFERRANGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexBufferRange");
		glTexStorage2DMultisample = (PFNGLTEXSTORAGE2DMULTISAMPLEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexStorage2DMultisample");
		glTexStorage3DMultisample = (PFNGLTEXSTORAGE3DMULTISAMPLEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTexStorage3DMultisample");
		glTextureView = (PFNGLTEXTUREVIEWPROC)TinyExtender::GetProcAddress((const GLubyte*)"glTextureView");
		glBindVertexBuffer = (PFNGLBINDVERTEXBUFFERPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindVertexBuffer");
		glVertexAttribFormat = (PFNGLVERTEXATTRIBFORMATPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribFormat");
		glVertexAttribIFormat = (PFNGLVERTEXATTRIBIFORMATPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribIFormat");
		glVertexAttribLFormat = (PFNGLVERTEXATTRIBLFORMATPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribLFormat");
		glVertexAttribBinding = (PFNGLVERTEXATTRIBBINDINGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexAttribBinding");
		glVertexBindingDivisor = (PFNGLVERTEXBINDINGDIVISORPROC)TinyExtender::GetProcAddress((const GLubyte*)"glVertexBindingDivisor");
		glDebugMessageControl = (PFNGLDEBUGMESSAGECONTROLPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDebugMessageControl");
		glDebugMessageInsert = (PFNGLDEBUGMESSAGEINSERTPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDebugMessageInsert");
		glDebugMessageCallback = (PFNGLDEBUGMESSAGECALLBACKPROC)TinyExtender::GetProcAddress((const GLubyte*)"glDebugMessageCallback");
		glGetDebugMessageLog = (PFNGLGETDEBUGMESSAGELOGPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetDebugMessageLog");
		glPushDebugGroup = (PFNGLPUSHDEBUGGROUPPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPushDebugGroup");
		glPopDebugGroup = (PFNGLPOPDEBUGGROUPPROC)TinyExtender::GetProcAddress((const GLubyte*)"glPopDebugGroup");
		glObjectLabel = (PFNGLOBJECTLABELPROC)TinyExtender::GetProcAddress((const GLubyte*)"glObjectLabel");
		glObjectPtrLabel = (PFNGLOBJECTPTRLABELPROC)TinyExtender::GetProcAddress((const GLubyte*)"glObjectPtrLabel");
		glGetObjectPtrLabel = (PFNGLGETOBJECTPTRLABELPROC)TinyExtender::GetProcAddress((const GLubyte*)"glGetObjectPtrLabel");
	}

	static inline GLvoid Load4_4Extensions()
	{
		glBufferStorage = (PFNGLBUFFERSTORAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBufferStorage");
		glClearTexImage = (PFNGLCLEARTEXIMAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearTexImage");
		glClearTexSubImage = (PFNGLCLEARTEXSUBIMAGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glClearTexSubImage");
		glBindBuffersBase = (PFNGLBINDBUFFERSBASEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindBuffersBase");
		glBindBuffersRange = (PFNGLBINDBUFFERSRANGEPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindBuffersRange");
		glBindTextures = (PFNGLBINDTEXTURESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindTextures");
		glBindSamplers = (PFNGLBINDSAMPLERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindSamplers");
		glBindImageTextures = (PFNGLBINDIMAGETEXTURESPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindImageTextures");
		glBindVertexBuffers = (PFNGLBINDVERTEXBUFFERSPROC)TinyExtender::GetProcAddress((const GLubyte*)"glBindVertexBuffers");
	}

	static GLvoid InitializeGLVersion()
	{
		const GLubyte* VersionString = glGetString(GL_VERSION);

		TinyExtender::GLVersion_Major = VersionString[0] - '0';
		TinyExtender::GLVersion_Minor = VersionString[2] - '0';
	}

	static GLvoid PrintErrorMessage(GLuint Version_Major, GLuint Version_Minor)
	{
		printf("Error: OpenGL version %i.%i not supported. stopping here\n", Version_Major, Version_Minor);
	}

	static void* GetProcAddress(const GLubyte* ProcName)
	{
#if defined(_WIN32)
		return wglGetProcAddress((LPCTSTR)ProcName);
#endif

#if defined(__linux__)
		return glXGetProcAddress(ProcName);
#endif
	}
};

#endif

//OpenGL 1.2 Extensions
PFNGLDRAWRANGEELEMENTSPROC __teDrawRangeElements = 0;
PFNGLTEXIMAGE3DPROC __teTexImage3D = 0;
PFNGLTEXSUBIMAGE3DPROC __teTexSubImage3D = 0;
PFNGLCOPYTEXSUBIMAGE3DPROC __teCopyTexSubImage3D = 0;
//OpenGL 1.3 Extensions
PFNGLACTIVETEXTUREPROC __teActiveTexture = 0;
PFNGLSAMPLECOVERAGEPROC __teSampleCoverage = 0;
PFNGLCOMPRESSEDTEXIMAGE3DPROC __teCompressedTexImage3D = 0;
PFNGLCOMPRESSEDTEXIMAGE2DPROC __teCompressedTexImage2D = 0;
PFNGLCOMPRESSEDTEXIMAGE1DPROC __teCompressedTexImage1D = 0;
PFNGLCOMPRESSEDTEXSUBIMAGE3DPROC __teCompressedTexSubImage3D = 0;
PFNGLCOMPRESSEDTEXSUBIMAGE2DPROC __teCompressedTexSubImage2D = 0;
PFNGLCOMPRESSEDTEXSUBIMAGE1DPROC __teCompressedTexSubImage1D = 0;
#if defined(__WIN32)
PFNGLGETCOMPRESSEDTEXIMAGEPROC __teGetCompressedTexImage = 0;
PFNGLCLIENTACTIVETEXTUREPROC __teClientActiveTexture = 0;
PFNGLMULTITEXCOORD1DPROC __teMultiTexCoord1d = 0;
PFNGLMULTITEXCOORD1DVPROC __teMultiTexCoord1dv = 0;
PFNGLMULTITEXCOORD1FPROC __teMultiTexCoord1f = 0;
PFNGLMULTITEXCOORD1FVPROC __teMultiTexCoord1fv = 0;
PFNGLMULTITEXCOORD1IPROC __teMultiTexCoord1i = 0;
PFNGLMULTITEXCOORD1IVPROC __teMultiTexCoord1iv = 0;
PFNGLMULTITEXCOORD1SPROC __teMultiTexCoord1s = 0;
PFNGLMULTITEXCOORD1SVPROC __teMultiTexCoord1sv = 0;
PFNGLMULTITEXCOORD2DPROC __teMultiTexCoord2d = 0;
PFNGLMULTITEXCOORD2DVPROC __teMultiTexCoord2dv = 0;
PFNGLMULTITEXCOORD2FPROC __teMultiTexCoord2f = 0;
PFNGLMULTITEXCOORD2FVPROC __teMultiTexCoord2fv = 0;
PFNGLMULTITEXCOORD2IPROC __teMultiTexCoord2i = 0;
PFNGLMULTITEXCOORD2IVPROC __teMultiTexCoord2iv = 0;
PFNGLMULTITEXCOORD2SPROC __teMultiTexCoord2s = 0;
PFNGLMULTITEXCOORD2SVPROC __teMultiTexCoord2sv = 0;
PFNGLMULTITEXCOORD3DPROC __teMultiTexCoord3d = 0;
PFNGLMULTITEXCOORD3DVPROC __teMultiTexCoord3dv = 0;
PFNGLMULTITEXCOORD3FPROC __teMultiTexCoord3f = 0;
PFNGLMULTITEXCOORD3FVPROC __teMultiTexCoord3fv = 0;
PFNGLMULTITEXCOORD3IPROC __teMultiTexCoord3i = 0;
PFNGLMULTITEXCOORD3IVPROC __teMultiTexCoord3iv = 0;
PFNGLMULTITEXCOORD3SPROC __teMultiTexCoord3s = 0;
PFNGLMULTITEXCOORD3SVPROC __teMultiTexCoord3sv = 0;
PFNGLMULTITEXCOORD4DPROC __teMultiTexCoord4d = 0;
PFNGLMULTITEXCOORD4DVPROC __teMultiTexCoord4dv = 0;
PFNGLMULTITEXCOORD4FPROC __teMultiTexCoord4f = 0;
PFNGLMULTITEXCOORD4FVPROC __teMultiTexCoord4fv = 0;
PFNGLMULTITEXCOORD4IPROC __teMultiTexCoord4i = 0;
PFNGLMULTITEXCOORD4IVPROC __teMultiTexCoord4iv = 0;
PFNGLMULTITEXCOORD4SPROC __teMultiTexCoord4s = 0;
PFNGLMULTITEXCOORD4SVPROC __teMultiTexCoord4sv = 0;
PFNGLLOADTRANSPOSEMATRIXFPROC __teLoadTransposeMatrixf = 0;
PFNGLLOADTRANSPOSEMATRIXDPROC __teLoadTransposeMatrixd = 0;
PFNGLMULTTRANSPOSEMATRIXFPROC __teMultTransposeMatrixf = 0;
PFNGLMULTTRANSPOSEMATRIXDPROC __teMultTransposeMatrixd = 0;
#endif
//OpenGL 1.4 Extensions
PFNGLBLENDFUNCSEPARATEPROC __teBlendFuncSeparate = 0;
PFNGLMULTIDRAWARRAYSPROC __teMultiDrawArrays = 0;
PFNGLMULTIDRAWELEMENTSPROC __teMultiDrawElements = 0;
PFNGLPOINTPARAMETERFPROC __tePointParameterf = 0;
PFNGLPOINTPARAMETERFVPROC __tePointParameterfv = 0;
PFNGLPOINTPARAMETERIPROC __tePointParameteri = 0;
PFNGLPOINTPARAMETERIVPROC __tePointParameteriv = 0;
PFNGLFOGCOORDFPROC __teFogCoordf = 0;
PFNGLFOGCOORDFVPROC __teFogCoordfv = 0;
PFNGLFOGCOORDDPROC __teFogCoordd = 0;
PFNGLFOGCOORDDVPROC __teFogCoorddv = 0;
PFNGLFOGCOORDPOINTERPROC __teFogCoordPointer = 0;
PFNGLSECONDARYCOLOR3BPROC __teSecondaryColor3b = 0;
PFNGLSECONDARYCOLOR3BVPROC __teSecondaryColor3bv = 0;
PFNGLSECONDARYCOLOR3DPROC __teSecondaryColor3d = 0;
PFNGLSECONDARYCOLOR3DVPROC __teSecondaryColor3dv = 0;
PFNGLSECONDARYCOLOR3FPROC __teSecondaryColor3f = 0;
PFNGLSECONDARYCOLOR3FVPROC __teSecondaryColor3fv = 0;
PFNGLSECONDARYCOLOR3IPROC __teSecondaryColor3i = 0;
PFNGLSECONDARYCOLOR3IVPROC __teSecondaryColor3iv = 0;
PFNGLSECONDARYCOLOR3SPROC __teSecondaryColor3s = 0;
PFNGLSECONDARYCOLOR3SVPROC __teSecondaryColor3sv = 0;
PFNGLSECONDARYCOLOR3UBPROC __teSecondaryColor3ub = 0;
PFNGLSECONDARYCOLOR3UBVPROC __teSecondaryColor3ubv = 0;
PFNGLSECONDARYCOLOR3UIPROC __teSecondaryColor3ui = 0;
PFNGLSECONDARYCOLOR3UIVPROC __teSecondaryColor3uiv = 0;
PFNGLSECONDARYCOLOR3USPROC __teSecondaryColor3us = 0;
PFNGLSECONDARYCOLOR3USVPROC __teSecondaryColor3usv = 0;
PFNGLSECONDARYCOLORPOINTERPROC __teSecondaryColorPointer = 0;
PFNGLWINDOWPOS2DPROC __teWindowPos2d = 0;
PFNGLWINDOWPOS2DVPROC __teWindowPos2dv = 0;
PFNGLWINDOWPOS2FPROC __teWindowPos2f = 0;
PFNGLWINDOWPOS2FVPROC __teWindowPos2fv = 0;
PFNGLWINDOWPOS2IPROC __teWindowPos2i = 0;
PFNGLWINDOWPOS2IVPROC __teWindowPos2iv = 0;
PFNGLWINDOWPOS2SPROC __teWindowPos2s = 0;
PFNGLWINDOWPOS2SVPROC __teWindowPos2sv = 0;
PFNGLWINDOWPOS3DPROC __teWindowPos3d = 0;
PFNGLWINDOWPOS3DVPROC __teWindowPos3dv = 0;
PFNGLWINDOWPOS3FPROC __teWindowPos3f = 0;
PFNGLWINDOWPOS3FVPROC __teWindowPos3fv = 0;
PFNGLWINDOWPOS3IPROC __teWindowPos3i = 0;
PFNGLWINDOWPOS3IVPROC __teWindowPos3iv = 0;
PFNGLWINDOWPOS3SPROC __teWindowPos3s = 0;
PFNGLWINDOWPOS3SVPROC __teWindowPos3sv = 0;
PFNGLBLENDCOLORPROC __teBlendColor = 0;
PFNGLBLENDEQUATIONPROC __teBlendEquation = 0;
//OpenGL 1.5 Extensions
PFNGLGENQUERIESPROC __teGenQueries = 0;
PFNGLDELETEQUERIESPROC __teDeleteQueries = 0;
PFNGLISQUERYPROC __teIsQuery = 0;
PFNGLBEGINQUERYPROC __teBeginQuery = 0;
PFNGLENDQUERYPROC __teEndQuery = 0;
PFNGLGETQUERYIVPROC __teGetQueryiv = 0;
PFNGLGETQUERYOBJECTIVPROC __teGetQueryObjectiv = 0;
PFNGLGETQUERYOBJECTUIVPROC __teGetQueryObjectuiv = 0;
PFNGLBINDBUFFERPROC __teBindBuffer = 0;
PFNGLDELETEBUFFERSPROC __teDeleteBuffers = 0;
PFNGLGENBUFFERSPROC __teGenBuffers = 0;
PFNGLISBUFFERPROC __teIsBuffer = 0;
PFNGLBUFFERDATAPROC __teBufferData = 0;
PFNGLBUFFERSUBDATAPROC __teBufferSubData = 0;
PFNGLGETBUFFERSUBDATAPROC __teGetBufferSubData = 0;
PFNGLMAPBUFFERPROC __teMapBuffer = 0;
PFNGLUNMAPBUFFERPROC __teUnmapBuffer = 0;
PFNGLGETBUFFERPARAMETERIVPROC __teGetBufferParameteriv = 0;
PFNGLGETBUFFERPOINTERVPROC __teGetBufferPointerv = 0;
//OpenGL 2.0 Extensions
PFNGLBLENDEQUATIONSEPARATEPROC __teBlendEquationSeparate = 0;
PFNGLDRAWBUFFERSPROC __teDrawBuffers = 0;
PFNGLSTENCILOPSEPARATEPROC __teStencilOpSeparate = 0;
PFNGLSTENCILFUNCSEPARATEPROC __teStencilFuncSeparate = 0;
PFNGLSTENCILMASKSEPARATEPROC __teStencilMaskSeparate = 0;
PFNGLATTACHSHADERPROC __teAttachShader = 0;
PFNGLBINDATTRIBLOCATIONPROC __teBindAttribLocation = 0;
PFNGLCOMPILESHADERPROC __teCompileShader = 0;
PFNGLCREATEPROGRAMPROC __teCreateProgram = 0;
PFNGLCREATESHADERPROC __teCreateShader = 0;
PFNGLDELETEPROGRAMPROC __teDeleteProgram = 0;
PFNGLDELETESHADERPROC __teDeleteShader = 0;
PFNGLDETACHSHADERPROC __teDetachShader = 0;
PFNGLDISABLEVERTEXATTRIBARRAYPROC __teDisableVertexAttribArray = 0;
PFNGLENABLEVERTEXATTRIBARRAYPROC __teEnableVertexAttribArray = 0;
PFNGLGETACTIVEATTRIBPROC __teGetActiveAttrib = 0;
PFNGLGETACTIVEUNIFORMPROC __teGetActiveUniform = 0;
PFNGLGETATTACHEDSHADERSPROC __teGetAttachedShaders = 0;
PFNGLGETATTRIBLOCATIONPROC __teGetAttribLocation = 0;
PFNGLGETPROGRAMIVPROC __teGetProgramiv = 0;
PFNGLGETPROGRAMINFOLOGPROC __teGetProgramInfoLog = 0;
PFNGLGETSHADERIVPROC __teGetShaderiv = 0;
PFNGLGETSHADERINFOLOGPROC __teGetShaderInfoLog = 0;
PFNGLGETSHADERSOURCEPROC __teGetShaderSource = 0;
PFNGLGETUNIFORMLOCATIONPROC __teGetUniformLocation = 0;
PFNGLGETUNIFORMFVPROC __teGetUniformfv = 0;
PFNGLGETUNIFORMIVPROC __teGetUniformiv = 0;
PFNGLGETVERTEXATTRIBDVPROC __teGetVertexAttribdv = 0;
PFNGLGETVERTEXATTRIBFVPROC __teGetVertexAttribfv = 0;
PFNGLGETVERTEXATTRIBIVPROC __teGetVertexAttribiv = 0;
PFNGLGETVERTEXATTRIBPOINTERVPROC __teGetVertexAttribPointerv = 0;
PFNGLISPROGRAMPROC __teIsProgram = 0;
PFNGLISSHADERPROC __teIsShader = 0;
PFNGLLINKPROGRAMPROC __teLinkProgram = 0;
PFNGLSHADERSOURCEPROC __teShaderSource = 0;
PFNGLUSEPROGRAMPROC __teUseProgram = 0;
PFNGLUNIFORM1FPROC __teUniform1f = 0;
PFNGLUNIFORM2FPROC __teUniform2f = 0;
PFNGLUNIFORM3FPROC __teUniform3f = 0;
PFNGLUNIFORM4FPROC __teUniform4f = 0;
PFNGLUNIFORM1IPROC __teUniform1i = 0;
PFNGLUNIFORM2IPROC __teUniform2i = 0;
PFNGLUNIFORM3IPROC __teUniform3i = 0;
PFNGLUNIFORM4IPROC __teUniform4i = 0;
PFNGLUNIFORM1FVPROC __teUniform1fv = 0;
PFNGLUNIFORM2FVPROC __teUniform2fv = 0;
PFNGLUNIFORM3FVPROC __teUniform3fv = 0;
PFNGLUNIFORM4FVPROC __teUniform4fv = 0;
PFNGLUNIFORM1IVPROC __teUniform1iv = 0;
PFNGLUNIFORM2IVPROC __teUniform2iv = 0;
PFNGLUNIFORM3IVPROC __teUniform3iv = 0;
PFNGLUNIFORM4IVPROC __teUniform4iv = 0;
PFNGLUNIFORMMATRIX2FVPROC __teUniformMatrix2fv = 0;
PFNGLUNIFORMMATRIX3FVPROC __teUniformMatrix3fv = 0;
PFNGLUNIFORMMATRIX4FVPROC __teUniformMatrix4fv = 0;
PFNGLVALIDATEPROGRAMPROC __teValidateProgram = 0;
PFNGLVERTEXATTRIB1DPROC __teVertexAttrib1d = 0;
PFNGLVERTEXATTRIB1DVPROC __teVertexAttrib1dv = 0;
PFNGLVERTEXATTRIB1FPROC __teVertexAttrib1f = 0;
PFNGLVERTEXATTRIB1FVPROC __teVertexAttrib1fv = 0;
PFNGLVERTEXATTRIB1SPROC __teVertexAttrib1s = 0;
PFNGLVERTEXATTRIB1SVPROC __teVertexAttrib1sv = 0;
PFNGLVERTEXATTRIB2DPROC __teVertexAttrib2d = 0;
PFNGLVERTEXATTRIB2DVPROC __teVertexAttrib2dv = 0;
PFNGLVERTEXATTRIB2FPROC __teVertexAttrib2f = 0;
PFNGLVERTEXATTRIB2FVPROC __teVertexAttrib2fv = 0;
PFNGLVERTEXATTRIB2SPROC __teVertexAttrib2s = 0;
PFNGLVERTEXATTRIB2SVPROC __teVertexAttrib2sv = 0;
PFNGLVERTEXATTRIB3DPROC __teVertexAttrib3d = 0;
PFNGLVERTEXATTRIB3DVPROC __teVertexAttrib3dv = 0;
PFNGLVERTEXATTRIB3FPROC __teVertexAttrib3f = 0;
PFNGLVERTEXATTRIB3FVPROC __teVertexAttrib3fv = 0;
PFNGLVERTEXATTRIB3SPROC __teVertexAttrib3s = 0;
PFNGLVERTEXATTRIB3SVPROC __teVertexAttrib3sv = 0;
PFNGLVERTEXATTRIB4NBVPROC __teVertexAttrib4Nbv = 0;
PFNGLVERTEXATTRIB4NIVPROC __teVertexAttrib4Niv = 0;
PFNGLVERTEXATTRIB4NSVPROC __teVertexAttrib4Nsv = 0;
PFNGLVERTEXATTRIB4NUBPROC __teVertexAttrib4Nub = 0;
PFNGLVERTEXATTRIB4NUBVPROC __teVertexAttrib4Nubv = 0;
PFNGLVERTEXATTRIB4NUIVPROC __teVertexAttrib4Nuiv = 0;
PFNGLVERTEXATTRIB4NUSVPROC __teVertexAttrib4Nusv = 0;
PFNGLVERTEXATTRIB4BVPROC __teVertexAttrib4bv = 0;
PFNGLVERTEXATTRIB4DPROC __teVertexAttrib4d = 0;
PFNGLVERTEXATTRIB4DVPROC __teVertexAttrib4dv = 0;
PFNGLVERTEXATTRIB4FPROC __teVertexAttrib4f = 0;
PFNGLVERTEXATTRIB4FVPROC __teVertexAttrib4fv = 0;
PFNGLVERTEXATTRIB4IVPROC __teVertexAttrib4iv = 0;
PFNGLVERTEXATTRIB4SPROC __teVertexAttrib4s = 0;
PFNGLVERTEXATTRIB4SVPROC __teVertexAttrib4sv = 0;
PFNGLVERTEXATTRIB4UBVPROC __teVertexAttrib4ubv = 0;
PFNGLVERTEXATTRIB4UIVPROC __teVertexAttrib4uiv = 0;
PFNGLVERTEXATTRIB4USVPROC __teVertexAttrib4usv = 0;
PFNGLVERTEXATTRIBPOINTERPROC __teVertexAttribPointer = 0;

//OpenGL 2.1 Extensions
PFNGLUNIFORMMATRIX2X3FVPROC __teUniformMatrix2x3fv = 0;
PFNGLUNIFORMMATRIX3X2FVPROC __teUniformMatrix3x2fv = 0;
PFNGLUNIFORMMATRIX2X4FVPROC __teUniformMatrix2x4fv = 0;
PFNGLUNIFORMMATRIX4X2FVPROC __teUniformMatrix4x2fv = 0;
PFNGLUNIFORMMATRIX3X4FVPROC __teUniformMatrix3x4fv = 0;
PFNGLUNIFORMMATRIX4X3FVPROC __teUniformMatrix4x3fv = 0;

PFNGLCOLORMASKIPROC __teColorMaski = 0;
PFNGLGETBOOLEANI_VPROC __teGetBooleani_v = 0;
PFNGLGETINTEGERI_VPROC __teGetIntegeri_v = 0;
PFNGLENABLEIPROC __teEnablei = 0;
PFNGLDISABLEIPROC __teDisablei = 0;
PFNGLISENABLEDIPROC __teIsEnabledi = 0;
PFNGLBEGINTRANSFORMFEEDBACKPROC __teBeginTransformFeedback = 0;
PFNGLENDTRANSFORMFEEDBACKPROC __teEndTransformFeedback = 0;
PFNGLBINDBUFFERRANGEPROC __teBindBufferRange = 0;
PFNGLBINDBUFFERBASEPROC __teBindBufferBase = 0;
PFNGLTRANSFORMFEEDBACKVARYINGSPROC __teTransformFeedbackVaryings = 0;
PFNGLGETTRANSFORMFEEDBACKVARYINGPROC __teGetTransformFeedbackVarying = 0;
PFNGLCLAMPCOLORPROC __teClampColor = 0;
PFNGLBEGINCONDITIONALRENDERPROC __teBeginConditionalRender = 0;
PFNGLENDCONDITIONALRENDERPROC __teEndConditionalRender = 0;
PFNGLVERTEXATTRIBIPOINTERPROC __teVertexAttribIPointer = 0;
PFNGLGETVERTEXATTRIBIIVPROC __teGetVertexAttribIiv = 0;
PFNGLGETVERTEXATTRIBIUIVPROC __teGetVertexAttribIuiv = 0;
PFNGLVERTEXATTRIBI1IPROC __teVertexAttribI1i = 0;
PFNGLVERTEXATTRIBI2IPROC __teVertexAttribI2i = 0;
PFNGLVERTEXATTRIBI3IPROC __teVertexAttribI3i = 0;
PFNGLVERTEXATTRIBI4IPROC __teVertexAttribI4i = 0;
PFNGLVERTEXATTRIBI1UIPROC __teVertexAttribI1ui = 0;
PFNGLVERTEXATTRIBI2UIPROC __teVertexAttribI2ui = 0;
PFNGLVERTEXATTRIBI3UIPROC __teVertexAttribI3ui = 0;
PFNGLVERTEXATTRIBI4UIPROC __teVertexAttribI4ui = 0;
PFNGLVERTEXATTRIBI1IVPROC __teVertexAttribI1iv = 0;
PFNGLVERTEXATTRIBI2IVPROC __teVertexAttribI2iv = 0;
PFNGLVERTEXATTRIBI3IVPROC __teVertexAttribI3iv = 0;
PFNGLVERTEXATTRIBI4IVPROC __teVertexAttribI4iv = 0;
PFNGLVERTEXATTRIBI1UIVPROC __teVertexAttribI1uiv = 0;
PFNGLVERTEXATTRIBI2UIVPROC __teVertexAttribI2uiv = 0;
PFNGLVERTEXATTRIBI3UIVPROC __teVertexAttribI3uiv = 0;
PFNGLVERTEXATTRIBI4UIVPROC __teVertexAttribI4uiv = 0;
PFNGLVERTEXATTRIBI4BVPROC __teVertexAttribI4bv = 0;
PFNGLVERTEXATTRIBI4SVPROC __teVertexAttribI4sv = 0;
PFNGLVERTEXATTRIBI4UBVPROC __teVertexAttribI4ubv = 0;
PFNGLVERTEXATTRIBI4USVPROC __teVertexAttribI4usv = 0;
PFNGLGETUNIFORMUIVPROC __teGetUniformuiv = 0;
PFNGLBINDFRAGDATALOCATIONPROC __teBindFragDataLocation = 0;
PFNGLGETFRAGDATALOCATIONPROC __teGetFragDataLocation = 0;
PFNGLUNIFORM1UIPROC __teUniform1ui = 0;
PFNGLUNIFORM2UIPROC __teUniform2ui = 0;
PFNGLUNIFORM3UIPROC __teUniform3ui = 0;
PFNGLUNIFORM4UIPROC __teUniform4ui = 0;
PFNGLUNIFORM1UIVPROC __teUniform1uiv = 0;
PFNGLUNIFORM2UIVPROC __teUniform2uiv = 0;
PFNGLUNIFORM3UIVPROC __teUniform3uiv = 0;
PFNGLUNIFORM4UIVPROC __teUniform4uiv = 0;
PFNGLTEXPARAMETERIIVPROC __teTexParameterIiv = 0;
PFNGLTEXPARAMETERIUIVPROC __teTexParameterIuiv = 0;
PFNGLGETTEXPARAMETERIIVPROC __teGetTexParameterIiv = 0;
PFNGLGETTEXPARAMETERIUIVPROC __teGetTexParameterIuiv = 0;
PFNGLCLEARBUFFERIVPROC __teClearBufferiv = 0;
PFNGLCLEARBUFFERUIVPROC __teClearBufferuiv = 0;
PFNGLCLEARBUFFERFVPROC __teClearBufferfv = 0;
PFNGLCLEARBUFFERFIPROC __teClearBufferfi = 0;
PFNGLGETSTRINGIPROC __teGetStringi = 0;
PFNGLISRENDERBUFFERPROC __teIsRenderbuffer = 0;
PFNGLBINDRENDERBUFFERPROC __teBindRenderbuffer = 0;
PFNGLDELETERENDERBUFFERSPROC __teDeleteRenderbuffers = 0;
PFNGLGENRENDERBUFFERSPROC __teGenRenderbuffers = 0;
PFNGLRENDERBUFFERSTORAGEPROC __teRenderbufferStorage = 0;
PFNGLGETRENDERBUFFERPARAMETERIVPROC __teGetRenderbufferParameteriv = 0;
PFNGLISFRAMEBUFFERPROC __teIsFramebuffer = 0;
PFNGLBINDFRAMEBUFFERPROC __teBindFramebuffer = 0;
PFNGLDELETEFRAMEBUFFERSPROC __teDeleteFramebuffers = 0;
PFNGLGENFRAMEBUFFERSPROC __teGenFramebuffers = 0;
PFNGLCHECKFRAMEBUFFERSTATUSPROC __teCheckFramebufferStatus = 0;
PFNGLFRAMEBUFFERTEXTURE1DPROC __teFramebufferTexture1D = 0;
PFNGLFRAMEBUFFERTEXTURE2DPROC __teFramebufferTexture2D = 0;
PFNGLFRAMEBUFFERTEXTURE3DPROC __teFramebufferTexture3D = 0;
PFNGLFRAMEBUFFERRENDERBUFFERPROC __teFramebufferRenderbuffer = 0;
PFNGLGETFRAMEBUFFERATTACHMENTPARAMETERIVPROC __teGetFramebufferAttachmentParameteriv = 0;
PFNGLGENERATEMIPMAPPROC __teGenerateMipmap = 0;
PFNGLBLITFRAMEBUFFERPROC __teBlitFramebuffer = 0;
PFNGLRENDERBUFFERSTORAGEMULTISAMPLEPROC __teRenderbufferStorageMultisample = 0;
PFNGLFRAMEBUFFERTEXTURELAYERPROC __teFramebufferTextureLayer = 0;
PFNGLMAPBUFFERRANGEPROC __teMapBufferRange = 0;
PFNGLFLUSHMAPPEDBUFFERRANGEPROC __teFlushMappedBufferRange = 0;
PFNGLBINDVERTEXARRAYPROC __teBindVertexArray = 0;
PFNGLDELETEVERTEXARRAYSPROC __teDeleteVertexArrays = 0;
PFNGLGENVERTEXARRAYSPROC __teGenVertexArrays = 0;
PFNGLISVERTEXARRAYPROC __teIsVertexArray = 0;

//OpenGL 3.1 Extensions
PFNGLDRAWARRAYSINSTANCEDPROC __teDrawArraysInstanced = 0;
PFNGLDRAWELEMENTSINSTANCEDPROC __teDrawElementsInstanced = 0;
PFNGLTEXBUFFERPROC __teTexBuffer = 0;
PFNGLPRIMITIVERESTARTINDEXPROC __tePrimitiveRestartIndex = 0;
PFNGLCOPYBUFFERSUBDATAPROC __teCopyBufferSubdata = 0;
PFNGLGETUNIFORMINDICESPROC __teGetUniformIndices = 0;
PFNGLGETACTIVEUNIFORMSIVPROC __teGetActiveUniformsiv = 0;
PFNGLGETACTIVEUNIFORMNAMEPROC __teGetActiveUniformName = 0;
PFNGLGETUNIFORMBLOCKINDEXPROC __teGetUniformBlockIndex = 0;
PFNGLGETACTIVEUNIFORMBLOCKIVPROC __teGetActiveUniformBlockiv = 0;
PFNGLGETACTIVEUNIFORMBLOCKNAMEPROC __teGetActiveUniformBlockName = 0;
PFNGLUNIFORMBLOCKBINDINGPROC __teUniformBlockBinding = 0;

//OpenGL 3.2 Extensions
PFNGLDRAWELEMENTSBASEVERTEXPROC __teDrawElementsBaseVertex = 0;
PFNGLDRAWRANGEELEMENTSBASEVERTEXPROC __teDrawRangeElementsBaseVertex = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXPROC __teDrawElementsInstancedBaseVertex = 0;
PFNGLMULTIDRAWELEMENTSBASEVERTEXPROC __teMultiDrawElementsBaseVertex = 0;
PFNGLPROVOKINGVERTEXPROC __teProvokingVertex = 0;
PFNGLFENCESYNCPROC __teFenceSync = 0;
PFNGLISSYNCPROC __teIsSync = 0;
PFNGLDELETESYNCPROC __teDeleteSync = 0;
PFNGLCLIENTWAITSYNCPROC __teClientWaitSync = 0;
PFNGLWAITSYNCPROC __teWaitSync = 0;
PFNGLGETINTEGER64VPROC __teGetInteger64v = 0;
PFNGLGETSYNCIVPROC __teGetSynciv = 0;
PFNGLGETINTEGER64I_VPROC __teGetInteger64i_v = 0;
PFNGLGETBUFFERPARAMETERI64VPROC __teGetBufferParameteri64v = 0;
PFNGLFRAMEBUFFERTEXTUREPROC __teFramebufferTexture = 0;
PFNGLTEXIMAGE2DMULTISAMPLEPROC __teTexImage2DMultisample = 0;
PFNGLTEXIMAGE3DMULTISAMPLEPROC __teTexImage3DMultisample = 0;
PFNGLGETMULTISAMPLEFVPROC __teGetMultisamplefv = 0;
PFNGLSAMPLEMASKIPROC __teSampleMaski = 0;

//OpenGL 3.3 Extensions
PFNGLBINDFRAGDATALOCATIONINDEXEDPROC __teBindFragDataLocationIndexed = 0;
PFNGLGETFRAGDATAINDEXPROC __teGetFragDataIndex = 0;
PFNGLGENSAMPLERSPROC __teGenSamplers = 0;
PFNGLDELETESAMPLERSPROC __teDeleteSamplers = 0;
PFNGLISSAMPLERPROC __teIsSampler = 0;
PFNGLBINDSAMPLERPROC __teBindSampler = 0;
PFNGLSAMPLERPARAMETERIPROC __teSamplerParameteri = 0;
PFNGLSAMPLERPARAMETERIVPROC __teSamplerParameteriv = 0;
PFNGLSAMPLERPARAMETERFPROC __teSamplerParameterf = 0;
PFNGLSAMPLERPARAMETERFVPROC __teSamplerParameterfv = 0;
PFNGLSAMPLERPARAMETERIIVPROC __teSamplerParameterIiv = 0;
PFNGLSAMPLERPARAMETERIUIVPROC __teSamplerParameterIuiv = 0;
PFNGLGETSAMPLERPARAMETERIVPROC __teGetSamplerParameteriv = 0;
PFNGLGETSAMPLERPARAMETERIIVPROC __teGetSamplerParameterIiv = 0;
PFNGLGETSAMPLERPARAMETERFVPROC __teGetSamplerParameterfv = 0;
PFNGLGETSAMPLERPARAMETERIUIVPROC __teGetSamplerParameterIuiv = 0;
PFNGLQUERYCOUNTERPROC __teQueryCounter = 0;
PFNGLGETQUERYOBJECTI64VPROC __teGetQueryObjecti64v = 0;
PFNGLGETQUERYOBJECTUI64VPROC __teGetQueryObjectui64v = 0;
PFNGLVERTEXATTRIBDIVISORPROC __teVertexAttribDivisor = 0;
PFNGLVERTEXATTRIBP1UIPROC __teVertexAttribP1ui = 0;
PFNGLVERTEXATTRIBP1UIVPROC __teVertexAttribP1uiv = 0;
PFNGLVERTEXATTRIBP2UIPROC __teVertexAttribP2ui = 0;
PFNGLVERTEXATTRIBP2UIVPROC __teVertexAttribP2uiv = 0;
PFNGLVERTEXATTRIBP3UIPROC __teVertexAttribP3ui = 0;
PFNGLVERTEXATTRIBP3UIVPROC __teVertexAttribP3uiv = 0;
PFNGLVERTEXATTRIBP4UIPROC __teVertexAttribP4ui = 0;
PFNGLVERTEXATTRIBP4UIVPROC __teVertexAttribP4uiv = 0;
PFNGLVERTEXP2UIPROC __teVertexP2ui = 0;
PFNGLVERTEXP2UIVPROC __teVertexP2uiv = 0;
PFNGLVERTEXP3UIPROC __teVertexP3ui = 0;
PFNGLVERTEXP3UIVPROC __teVertexP3uiv = 0;
PFNGLVERTEXP4UIPROC __teVertexP4ui = 0;
PFNGLVERTEXP4UIVPROC __teVertexP4uiv = 0;
PFNGLTEXCOORDP1UIPROC __teTexCoordP1ui = 0;
PFNGLTEXCOORDP1UIVPROC __teTexCoordP1uiv = 0;
PFNGLTEXCOORDP2UIPROC __teTexCoordP2ui = 0;
PFNGLTEXCOORDP2UIVPROC __teTexCoordP2uiv = 0;
PFNGLTEXCOORDP3UIPROC __teTexCoordP3ui = 0;
PFNGLTEXCOORDP3UIVPROC __teTexCoordP3uiv = 0;
PFNGLTEXCOORDP4UIPROC __teTexCoordP4ui = 0;
PFNGLTEXCOORDP4UIVPROC __teTexCoordP4uiv = 0;
PFNGLMULTITEXCOORDP1UIPROC __teMultiTexCoordP1ui = 0;
PFNGLMULTITEXCOORDP1UIVPROC __teMultiTexCoordP1uiv = 0;
PFNGLMULTITEXCOORDP2UIPROC __teMultiTexCoordP2ui = 0;
PFNGLMULTITEXCOORDP2UIVPROC __teMultiTexCoordP2uiv = 0;
PFNGLMULTITEXCOORDP3UIPROC __teMultiTexCoordP3ui = 0;
PFNGLMULTITEXCOORDP3UIVPROC __teMultiTexCoordP3uiv = 0;
PFNGLMULTITEXCOORDP4UIPROC __teMultiTexCoordP4ui = 0;
PFNGLMULTITEXCOORDP4UIVPROC __teMultiTexCoordP4uiv = 0;
PFNGLNORMALP3UIPROC __teNormalP3ui = 0;
PFNGLNORMALP3UIVPROC __teNormalP3uiv = 0;
PFNGLCOLORP3UIPROC __teColorP3ui = 0;
PFNGLCOLORP3UIVPROC __teColorP3uiv = 0;
PFNGLCOLORP4UIPROC __teColorP4ui = 0;
PFNGLCOLORP4UIVPROC __teColorP4uiv = 0;
PFNGLSECONDARYCOLORP3UIPROC __teSecondaryColorP3ui = 0;
PFNGLSECONDARYCOLORP3UIVPROC __teSecondaryColorP3uiv = 0;

//OpenGL 4.0 Extensions
PFNGLMINSAMPLESHADINGPROC __teMinSampleShading = 0;
PFNGLBLENDEQUATIONIPROC __teBlendEquationi = 0;
PFNGLBLENDEQUATIONSEPARATEIPROC __teBlendEquationSeparatei = 0;
PFNGLBLENDFUNCIPROC __teBlendFunci = 0;
PFNGLBLENDFUNCSEPARATEIPROC __teBlendFuncSeparatei = 0;
PFNGLDRAWARRAYSINDIRECTPROC __teDrawArraysIndirect = 0;
PFNGLDRAWELEMENTSINDIRECTPROC __teDrawElementsIndirect = 0;
PFNGLUNIFORM1DPROC __teUniform1d = 0;
PFNGLUNIFORM2DPROC __teUniform2d = 0;
PFNGLUNIFORM3DPROC __teUniform3d = 0;
PFNGLUNIFORM4DPROC __teUniform4d = 0;
PFNGLUNIFORM1DVPROC __teUniform1dv = 0;
PFNGLUNIFORM2DVPROC __teUniform2dv = 0;
PFNGLUNIFORM3DVPROC __teUniform3dv = 0;
PFNGLUNIFORM4DVPROC __teUniform4dv = 0;
PFNGLUNIFORMMATRIX2DVPROC __teUniformMatrix2dv = 0;
PFNGLUNIFORMMATRIX3DVPROC __teUniformMatrix3dv = 0;
PFNGLUNIFORMMATRIX4DVPROC __teUniformMatrix4dv = 0;
PFNGLUNIFORMMATRIX2X3DVPROC __teUniformMatrix2x3dv = 0;
PFNGLUNIFORMMATRIX2X4DVPROC __teUniformMatrix2x4dv = 0;
PFNGLUNIFORMMATRIX3X2DVPROC __teUniformMatrix3x2dv = 0;
PFNGLUNIFORMMATRIX3X4DVPROC __teUniformMatrix3x4dv = 0;
PFNGLUNIFORMMATRIX4X2DVPROC __teUniformMatrix4x2dv = 0;
PFNGLUNIFORMMATRIX4X3DVPROC __teUniformMatrix4x3dv = 0;
PFNGLGETUNIFORMDVPROC __teGetUniformdv = 0;
PFNGLGETSUBROUTINEUNIFORMLOCATIONPROC __teGetSubroutineUniformLocation = 0;
PFNGLGETSUBROUTINEINDEXPROC __teGetSubroutineIndex = 0;
PFNGLGETACTIVESUBROUTINEUNIFORMIVPROC __teGetActiveSubroutineUniformiv = 0;
PFNGLGETACTIVESUBROUTINEUNIFORMNAMEPROC __teGetActiveSubroutineUniformName = 0;
PFNGLGETACTIVESUBROUTINENAMEPROC __teGetActiveSubroutineName = 0;
PFNGLUNIFORMSUBROUTINESUIVPROC __teUniformSubroutinesuiv = 0;
PFNGLGETUNIFORMSUBROUTINEUIVPROC __teGetUniformSubroutineuiv = 0;
PFNGLGETPROGRAMSTAGEIVPROC __teGetProgramStageiv = 0;
PFNGLPATCHPARAMETERIPROC __tePatchParameteri = 0;
PFNGLPATCHPARAMETERFVPROC __tePatchParameterfv = 0;
PFNGLBINDTRANSFORMFEEDBACKPROC __teBindTransformFeedback = 0;
PFNGLDELETETRANSFORMFEEDBACKSPROC __teDeleteTransformFeedbacks = 0;
PFNGLGENTRANSFORMFEEDBACKSPROC __teGenTransformFeedbacks = 0;
PFNGLISTRANSFORMFEEDBACKPROC __teIsTransformFeedback = 0;
PFNGLPAUSETRANSFORMFEEDBACKPROC __tePauseTransformFeedback = 0;
PFNGLRESUMETRANSFORMFEEDBACKPROC __teResumeTransformFeedback = 0;
PFNGLDRAWTRANSFORMFEEDBACKPROC __teDrawTransformFeedback = 0;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMPROC __teDrawTransformFeedbackStream = 0;
PFNGLBEGINQUERYINDEXEDPROC __teBeginQueryIndexed = 0;
PFNGLENDQUERYINDEXEDPROC __teEndQueryIndexed = 0;
PFNGLGETQUERYINDEXEDIVPROC __teGetQueryIndexediv = 0;

//OpenGL 4.1 Extensions
PFNGLRELEASESHADERCOMPILERPROC __teReleaseShaderCompiler = 0;
PFNGLSHADERBINARYPROC __teShaderBinary = 0;
PFNGLGETSHADERPRECISIONFORMATPROC __teGetShaderPrecisionFormat = 0;
PFNGLDEPTHRANGEFPROC __teDepthRangef = 0;
PFNGLCLEARDEPTHFPROC __teClearDepthf = 0;
PFNGLGETPROGRAMBINARYPROC __teGetProgramBinary = 0;
PFNGLPROGRAMBINARYPROC __teProgramBinary = 0;
PFNGLPROGRAMPARAMETERIPROC __teProgramParameteri = 0;
PFNGLUSEPROGRAMSTAGESPROC __teUseProgramStages = 0;
PFNGLACTIVESHADERPROGRAMPROC __teActiveShaderProgram = 0;
PFNGLCREATESHADERPROGRAMVPROC __teCreateShaderProgramv = 0;
PFNGLBINDPROGRAMPIPELINEPROC __teBindProgramPipeline = 0;
PFNGLDELETEPROGRAMPIPELINESPROC __teDeleteProgramPipelines = 0;
PFNGLGENPROGRAMPIPELINESPROC __teGenProgramPipelines = 0;
PFNGLISPROGRAMPIPELINEPROC __teIsProgramPipeline = 0;
PFNGLGETPROGRAMPIPELINEIVPROC __teGetProgramPipelineiv = 0;
PFNGLPROGRAMUNIFORM1IPROC __teProgramUniform1i = 0;
PFNGLPROGRAMUNIFORM1IVPROC __teProgramUniform1iv = 0;
PFNGLPROGRAMUNIFORM1FPROC __teProgramUniform1f = 0;
PFNGLPROGRAMUNIFORM1FVPROC __teProgramUniform1fv = 0;
PFNGLPROGRAMUNIFORM1DPROC __teProgramUniform1d = 0;
PFNGLPROGRAMUNIFORM1DVPROC __teProgramUniform1dv = 0;
PFNGLPROGRAMUNIFORM1UIPROC __teProgramUniform1ui = 0;
PFNGLPROGRAMUNIFORM1UIVPROC __teProgramUniform1uiv = 0;
PFNGLPROGRAMUNIFORM2IPROC __teProgramUniform2i = 0;
PFNGLPROGRAMUNIFORM2IVPROC __teProgramUniform2iv = 0;
PFNGLPROGRAMUNIFORM2FPROC __teProgramUniform2f = 0;
PFNGLPROGRAMUNIFORM2FVPROC __teProgramUniform2fv = 0;
PFNGLPROGRAMUNIFORM2DPROC __teProgramUniform2d = 0;
PFNGLPROGRAMUNIFORM2DVPROC __teProgramUniform2dv = 0;
PFNGLPROGRAMUNIFORM2UIPROC __teProgramUniform2ui = 0;
PFNGLPROGRAMUNIFORM2UIVPROC __teProgramUniform2uiv = 0;
PFNGLPROGRAMUNIFORM3IPROC __teProgramUniform3i = 0;
PFNGLPROGRAMUNIFORM3IVPROC __teProgramUniform3iv = 0;
PFNGLPROGRAMUNIFORM3FPROC __teProgramUniform3f = 0;
PFNGLPROGRAMUNIFORM3FVPROC __teProgramUniform3fv = 0;
PFNGLPROGRAMUNIFORM3DPROC __teProgramUniform3d = 0;
PFNGLPROGRAMUNIFORM3DVPROC __teProgramUniform3dv = 0;
PFNGLPROGRAMUNIFORM3UIPROC __teProgramUniform3ui = 0;
PFNGLPROGRAMUNIFORM3UIVPROC __teProgramUniform3uiv = 0;
PFNGLPROGRAMUNIFORM4IPROC __teProgramUniform4i = 0;
PFNGLPROGRAMUNIFORM4IVPROC __teProgramUniform4iv = 0;
PFNGLPROGRAMUNIFORM4FPROC __teProgramUniform4f = 0;
PFNGLPROGRAMUNIFORM4FVPROC __teProgramUniform4fv = 0;
PFNGLPROGRAMUNIFORM4DPROC __teProgramUniform4d = 0;
PFNGLPROGRAMUNIFORM4DVPROC __teProgramUniform4dv = 0;
PFNGLPROGRAMUNIFORM4UIPROC __teProgramUniform4ui = 0;
PFNGLPROGRAMUNIFORM4UIVPROC __teProgramUniform4uiv = 0;
PFNGLPROGRAMUNIFORMMATRIX2FVPROC __teProgramUniformMatrix2fv = 0;
PFNGLPROGRAMUNIFORMMATRIX3FVPROC __teProgramUniformMatrix3fv = 0;
PFNGLPROGRAMUNIFORMMATRIX4FVPROC __teProgramUniformMatrix4fv = 0;
PFNGLPROGRAMUNIFORMMATRIX2DVPROC __teProgramUniformMatrix2dv = 0;
PFNGLPROGRAMUNIFORMMATRIX3DVPROC __teProgramUniformMatrix3dv = 0;
PFNGLPROGRAMUNIFORMMATRIX4DVPROC __teProgramUniformMatrix4dv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X3FVPROC __teProgramUniformMatrix2x3fv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X2FVPROC __teProgramUniformMatrix3x2fv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X4FVPROC __teProgramUniformMatrix2x4fv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X2FVPROC __teProgramUniformMatrix4x2fv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X4FVPROC __teProgramUniformMatrix3x4fv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X3FVPROC __teProgramUniformMatrix4x3fv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X3DVPROC __teProgramUniformMatrix2x3dv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X2DVPROC __teProgramUniformMatrix3x2dv = 0;
PFNGLPROGRAMUNIFORMMATRIX2X4DVPROC __teProgramUniformMatrix2x4dv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X2DVPROC __teProgramUniformMatrix4x2dv = 0;
PFNGLPROGRAMUNIFORMMATRIX3X4DVPROC __teProgramUniformMatrix3x4dv = 0;
PFNGLPROGRAMUNIFORMMATRIX4X3DVPROC __teProgramUniformMatrix4x3dv = 0;
PFNGLVALIDATEPROGRAMPIPELINEPROC __teValidateProgramPipeline = 0;
PFNGLGETPROGRAMPIPELINEINFOLOGPROC __teGetProgramPipelineInfoLog = 0;
PFNGLVERTEXATTRIBL1DPROC __teVertexAttribL1d = 0;
PFNGLVERTEXATTRIBL2DPROC __teVertexAttribL2d = 0;
PFNGLVERTEXATTRIBL3DPROC __teVertexAttribL3d = 0;
PFNGLVERTEXATTRIBL4DPROC __teVertexAttribL4d = 0;
PFNGLVERTEXATTRIBL1DVPROC __teVertexAttribL1dv = 0;
PFNGLVERTEXATTRIBL2DVPROC __teVertexAttribL2dv = 0;
PFNGLVERTEXATTRIBL3DVPROC __teVertexAttribL3dv = 0;
PFNGLVERTEXATTRIBL4DVPROC __teVertexAttribL4dv = 0;
PFNGLVERTEXATTRIBLPOINTERPROC __teVertexAttribLPointer = 0;
PFNGLGETVERTEXATTRIBLDVPROC __teGetVertexAttribLdv = 0;
PFNGLVIEWPORTARRAYVPROC __teViewportArrayv = 0;
PFNGLVIEWPORTINDEXEDFPROC __teViewportIndexedf = 0;
PFNGLVIEWPORTINDEXEDFVPROC __teViewportIndexedfv = 0;
PFNGLSCISSORARRAYVPROC __teScissorArrayv = 0;
PFNGLSCISSORINDEXEDPROC __teScissorIndexed = 0;
PFNGLSCISSORINDEXEDVPROC __teScissorIndexedv = 0;
PFNGLDEPTHRANGEARRAYVPROC __teDepthRangeArrayv = 0;
PFNGLDEPTHRANGEINDEXEDPROC __teDepthRangeIndexed = 0;
PFNGLGETFLOATI_VPROC __teGetFloati_v = 0;
PFNGLGETDOUBLEI_VPROC __teGetDoublei_v = 0;

//OpenGL 4.2 Extensions
PFNGLDRAWARRAYSINSTANCEDBASEINSTANCEPROC __teDrawArraysInstancedBaseInstance = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEINSTANCEPROC __teDrawElementsInstancedBaseInstance = 0;
PFNGLDRAWELEMENTSINSTANCEDBASEVERTEXBASEINSTANCEPROC __teDrawElementsInstancedBaseVertexBaseInstance = 0;
PFNGLGETINTERNALFORMATIVPROC __teGetInternalformativ = 0;
PFNGLGETACTIVEATOMICCOUNTERBUFFERIVPROC __teGetActiveAtomicCounterBufferiv = 0;
PFNGLBINDIMAGETEXTUREPROC __teBindImageTexture = 0;
PFNGLMEMORYBARRIERPROC __teMemoryBarrier = 0;
PFNGLTEXSTORAGE1DPROC __teTexStorage1D = 0;
PFNGLTEXSTORAGE2DPROC __teTexStorage2D = 0;
PFNGLTEXSTORAGE3DPROC __teTexStorage3D = 0;
PFNGLDRAWTRANSFORMFEEDBACKINSTANCEDPROC __teDrawTransformFeedbackInstanced = 0;
PFNGLDRAWTRANSFORMFEEDBACKSTREAMINSTANCEDPROC __teDrawTransformFeedbackStreamInstanced = 0;

//OpenGL 4.3 Extensions
PFNGLCLEARBUFFERDATAPROC __teClearBufferData = 0;
PFNGLCLEARBUFFERSUBDATAPROC __teClearBufferSubdata = 0;
PFNGLDISPATCHCOMPUTEPROC __teDispatchCompute = 0;
PFNGLDISPATCHCOMPUTEINDIRECTPROC __teDispatchComputeIndirect = 0;
PFNGLCOPYIMAGESUBDATAPROC  __teCopyImageSubdata = 0;
PFNGLFRAMEBUFFERPARAMETERIPROC __teFramebufferParameteri = 0;
PFNGLGETFRAMEBUFFERPARAMETERIVPROC __teGetFramebufferParameteriv = 0;
PFNGLGETINTERNALFORMATI64VPROC __teGetInternalformati64v = 0;
PFNGLINVALIDATETEXSUBIMAGEPROC __teInvalidateTexSubImage = 0;
PFNGLINVALIDATETEXIMAGEPROC __teInvalidateTexImage = 0;
PFNGLINVALIDATEBUFFERSUBDATAPROC __teInvalidateBufferSubdata = 0;
PFNGLINVALIDATEBUFFERDATAPROC __teInvalidateBufferData = 0;
PFNGLINVALIDATEFRAMEBUFFERPROC __teInvalidateFramebuffer = 0;
PFNGLINVALIDATESUBFRAMEBUFFERPROC __teInvalidateSubFramebuffer = 0;
PFNGLMULTIDRAWARRAYSINDIRECTPROC __teMultiDrawArraysIndirect = 0;
PFNGLMULTIDRAWELEMENTSINDIRECTPROC __teMultiDrawElementsIndirect = 0;
PFNGLGETPROGRAMINTERFACEIVPROC __teGetProgramInterfaceiv = 0;
PFNGLGETPROGRAMRESOURCEINDEXPROC __teGetProgramResourceIndex = 0;
PFNGLGETPROGRAMRESOURCENAMEPROC __teGetProgramResourceName = 0;
PFNGLGETPROGRAMRESOURCEIVPROC __teGetProgramResourceiv = 0;
PFNGLGETPROGRAMRESOURCELOCATIONPROC __teGetProgramResourceLocation = 0;
PFNGLGETPROGRAMRESOURCELOCATIONINDEXPROC __teGetProgramResourceLocationIndex = 0;
PFNGLSHADERSTORAGEBLOCKBINDINGPROC __teShaderStorageBlockBinding = 0;
PFNGLTEXBUFFERRANGEPROC __teTexBufferRange = 0;
PFNGLTEXSTORAGE2DMULTISAMPLEPROC __teTexStorage2DMultisample = 0;
PFNGLTEXSTORAGE3DMULTISAMPLEPROC __teTexStorage3DMultisample = 0;
PFNGLTEXTUREVIEWPROC __teTextureView = 0;
PFNGLBINDVERTEXBUFFERPROC __teBindVertexBuffer = 0;
PFNGLVERTEXATTRIBFORMATPROC __teVertexAttribFormat = 0;
PFNGLVERTEXATTRIBIFORMATPROC __teVertexAttribIFormat = 0;
PFNGLVERTEXATTRIBLFORMATPROC __teVertexAttribLFormat = 0;
PFNGLVERTEXATTRIBBINDINGPROC __teVertexAttribBinding = 0;
PFNGLVERTEXBINDINGDIVISORPROC __teVertexBindingDivisor = 0;
PFNGLDEBUGMESSAGECONTROLPROC __teDebugMessageControl = 0;
PFNGLDEBUGMESSAGEINSERTPROC __teDebugMessageInsert = 0;
PFNGLDEBUGMESSAGECALLBACKPROC __teDebugMessageCallback = 0;
PFNGLGETDEBUGMESSAGELOGPROC __teGetDebugMessageLog = 0;
PFNGLPUSHDEBUGGROUPPROC __tePushDebugGroup = 0;
PFNGLPOPDEBUGGROUPPROC __tePopDebugGroup = 0;
PFNGLOBJECTLABELPROC __teObjectLabel = 0;
PFNGLGETOBJECTLABELPROC __teGetObjectLabel = 0;
PFNGLOBJECTPTRLABELPROC __teObjectPtrLabel = 0;
PFNGLGETOBJECTPTRLABELPROC __teGetObjectPtrLabel = 0;

//OpenGL 4.4 Extensions
PFNGLBUFFERSTORAGEPROC __teBufferStorage = 0;
PFNGLCLEARTEXIMAGEPROC __teClearTexImage = 0;
PFNGLCLEARTEXSUBIMAGEPROC __teClearTexSubImage = 0;
PFNGLBINDBUFFERSBASEPROC __teBindBuffersBase = 0;
PFNGLBINDBUFFERSRANGEPROC __teBindBuffersRange = 0;
PFNGLBINDTEXTURESPROC __teBindTextures = 0;
PFNGLBINDSAMPLERSPROC __teBindSamplers = 0;
PFNGLBINDIMAGETEXTURESPROC __teBindImageTextures = 0;
PFNGLBINDVERTEXBUFFERSPROC __teBindVertexBuffers = 0;

GLuint TinyExtender::GLVersion_Major = 0;
GLuint TinyExtender::GLVersion_Minor = 0;
